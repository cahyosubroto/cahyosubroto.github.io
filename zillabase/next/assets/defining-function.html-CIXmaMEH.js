import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{b as a,k as n,o as e}from"./app-UdNvEmfz.js";const t={};function l(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="defining-function" tabindex="-1"><a class="header-anchor" href="#defining-function"><span>Defining Function</span></a></h1><p>Zillabase provides powerful tools for managing database migrations, including the ability to define custom functions. Users can create an empty migration file using the CLI to write PostgreSQL-like SQL that defines custom functions. These functions enable advanced data transformations and logic within the database. Backed by Risingwave, Zillabase ensures robust support for functions in a streaming database environment.</p><p>Zillabase supports SQL functions, embedded functions (functions defined in SQL), and external user-defined functions (UDF) to accommodate business logic that cannot be covered with regular SQL. Currently, we support embedded functions written in Javascript, Python, and Rust and external user-defined functions written in Java and Python.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>You can refer to <a href="https://docs.risingwave.com/sql/overview" target="_blank" rel="noopener noreferrer">this article</a> for a complete supported SQL reference.</p></div><ol><li>Create the migration file with the following command:</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"># command format</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"># zillabase migration add &lt;migration-name&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"># example</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zillabase</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> migration</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> create_function</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"># output</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"># Created migration 000001__create_table.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the <code>zillabase/migrations</code> folder and edit the corresponding migration file.</p><ol start="2"><li>Create an external UDF implementation file. Create <code>udf.py</code> in <code>zillabase/functions/python</code> and copy the following function definition.</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">from</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> arrow_udf </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> udf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"># udf example with int result</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">@udf</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">input_types</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">=[</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&#39;INT&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&#39;INT&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">], </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">result_type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">=</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&#39;INT&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">def</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> gcd</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">x</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">y</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">):</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">    while</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> y != </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        (x, y) = (y, x % y)</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> x</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Edit the migration file with the following content.</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">-- declare function from an external user-defined function</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">CREATE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> FUNCTION</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> gcd</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">RETURNS</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> int</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">LANGUAGE</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> python </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">AS</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> gcd;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">-- embedded function</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">CREATE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> FUNCTION</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> gcd2</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(a </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, b </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">RETURNS</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> int</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> LANGUAGE</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> python </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">AS</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> $$</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">def gcd(a, b):</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    while</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> b != </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        a, b = b, a % b</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    return</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> a</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">$$;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">-- SQL UDF</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">CREATE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> FUNCTION</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> add</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">INT</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">INT</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">RETURNS</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> int</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> LANGUAGE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> sql</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> AS</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> $$</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">select</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> $</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">1</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> + $</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">2</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">$$;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>To test the query.</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">-- test the external UDF</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">select</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> gcd(</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">12</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">4</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">-- test the embedded UDF</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">select</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> gcd2(</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">12</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">4</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">-- test the SQL UDF</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">Select</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> add</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">1</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">2</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13)]))}const d=s(t,[["render",l],["__file","defining-function.html.vue"]]),r=JSON.parse('{"path":"/products/function/defining-function.html","title":"Defining Function","lang":"en-US","frontmatter":{"description":"Defining Function Zillabase provides powerful tools for managing database migrations, including the ability to define custom functions. Users can create an empty migration file ...","head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zillabase/next/products/function/defining-function.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Defining Function"}],["meta",{"property":"og:description","content":"Defining Function Zillabase provides powerful tools for managing database migrations, including the ability to define custom functions. Users can create an empty migration file ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-07T04:16:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-07T04:16:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Defining Function\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-07T04:16:20.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1733912729000,"updatedTime":1736223380000,"contributors":[{"name":"cahyosubroto","email":"cahyosubroto30@gmail.com","commits":5}]},"readingTime":{"minutes":1.11,"words":333},"filePathRelative":"products/function/defining-function.md","localizedDate":"December 11, 2024","autoDesc":true,"excerpt":"\\n<p>Zillabase provides powerful tools for managing database migrations, including the ability to define custom functions. Users can create an empty migration file using the CLI to write PostgreSQL-like SQL that defines custom functions. These functions enable advanced data transformations and logic within the database. Backed by Risingwave, Zillabase ensures robust support for functions in a streaming database environment.</p>"}');export{d as comp,r as data};
