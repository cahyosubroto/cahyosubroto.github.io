import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{b as a,k as n,o as l}from"./app-DtoGA-7r.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="external-udf-in-java" tabindex="-1"><a class="header-anchor" href="#external-udf-in-java"><span>External UDF in Java</span></a></h1><p>We&#39;ll use the <code>risingwave-udf</code> package to declare the function in Java. Your function will need to implement an interface to expose it as UDF. You can also add additional packages to the Maven project. After that, you need to declare the function in a migration file.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Any external UDFs written in Java must be in a Maven project form and stored in <code>zillabase/functions/java</code> directory to be auto-picked by the Java UDF server.</p></div><h2 id="adding-environment-variables" tabindex="-1"><a class="header-anchor" href="#adding-environment-variables"><span>Adding Environment Variables</span></a></h2><p>You can add environment variables during UDF execution by modifying the <code>config.yaml</code> file. For example:</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">udf</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  java</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    env</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">MY_VAR=value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><p>Before we start, make sure you have the following requirements installed:</p><ul><li><p>Java Developer&#39;s Kit (JDK) version 11 or later.</p></li><li><p>Apache Maven 3.0 or later.</p></li></ul><p>These steps will walk you through the UDF example in Java.</p><ol><li>Create an empty folder.</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">mkdir</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> udf-java</span><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"> # create a new folder</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">cd</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> udf-java</span><span style="--shiki-light:#008000;--shiki-dark:#6A9955;"> # change the current directory</span></span></code></pre></div><ol start="2"><li>Initialize an empty Zillabase project.</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zillabase</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> init</span></span></code></pre></div><ol start="3"><li>Create and go to <code>zillabase/functions/java</code> folder.</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">mkdir</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -p</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zillabase/functions/java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">cd</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zillabase/functions/java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Create a new Maven project and add the following dependency:</li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#808080;">&lt;</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">dependency</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#808080;">  &lt;</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">groupId</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">com.risingwave</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">groupId</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#808080;">  &lt;</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">artifactId</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">risingwave-udf</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">artifactId</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#808080;">  &lt;</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">version</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">0.2.1</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">version</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">dependency</span><span style="--shiki-light:#800000;--shiki-dark:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>Make sure to include the class&#39;s main entry point on the Maven project.</p></div><ol start="5"><li>Create <code>UdfExample.java</code> on the main namespace (for example <code>src/main/java/io/aklivity/zillabase</code>) or modify the project main entry point with the following contents:</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> java.util.Iterator;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> java.util.stream.IntStream;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> java.util.stream.Stream;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> com.risingwave.functions.ScalarFunction;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> com.risingwave.functions.TableFunction;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> UdfExample</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">{</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Gcd</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> implements</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> ScalarFunction</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">        public</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> int</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> eval</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">int</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> a</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">int</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> b</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">            while</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (b != </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">            {</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">                int</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> temp</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = b;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                b = a % b;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                a = temp;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">            }</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">            return</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> a;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> ArrayAccess</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> implements</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> ScalarFunction</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">        public</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> String</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> eval</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">String</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[] </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">array</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">int</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> index</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">            return</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> array[index - </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">1</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Series</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> implements</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> TableFunction</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">        public</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Iterator</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Integer</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">eval</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">int</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> n</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">            return</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> IntStream</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">range</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, n).</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">iterator</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Split</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> implements</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> TableFunction</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">        public</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> static</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Row</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">            public</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> String</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> word</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">            public</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> int</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> length</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">        public</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Iterator</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Row</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">eval</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">String</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> str</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">            return</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> Stream</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">of</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">str</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">split</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&quot; &quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                    .</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">map</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                            s </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">-&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">                                Row</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> row</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">new</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> Row</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">                                row</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">word</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = s;</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">                                row</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">length</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">s</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">length</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">                                return</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> row;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                            })</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                    .</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">iterator</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>Create a new migration file.</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zillabase</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> migration</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> create_function</span></span></code></pre></div><ol start="7"><li>Declare the function in the migration file.</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">CREATE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> FUNCTION</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> gcd</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">RETURNS</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> int</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> LANGUAGE</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> java </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">AS</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> gcd;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">CREATE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> FUNCTION</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> array_access</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">varchar</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[], </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">RETURNS</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> varchar</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> LANGUAGE</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> java </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">AS</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> array_access;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">CREATE</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> FUNCTION</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> series</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">RETURNS</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> TABLE</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (x </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">LANGUAGE</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> java </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">AS</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> series;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>Run the project.</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zillabase</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span></span></code></pre></div><ol start="9"><li>Connect to the database with PSQL.</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">psql</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -U</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> root</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -d</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> dev</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -h</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> localhost</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -p</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 4567</span></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>If you don&#39;t have psql installed, install it with the following commands:</p><p>Debian:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">sudo</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> apt-get</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -y</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> postgresql-client</span></span></code></pre></div><p>MacOS:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">brew</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> libpq</span></span></code></pre></div></div><ol start="10"><li>Run a query.</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">select</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> gcd(</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">12</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">4</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">select</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> array_access(</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&#39;{&quot;first&quot;, &quot;second&quot;, &quot;third&quot;}&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">2</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">select</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> series(</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">5</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="11"><li>Stop the project.</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zillabase</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> stop</span></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>Refer to <a href="https://github.com/aklivity/zillabase/tree/develop/examples/udf.java" target="_blank" rel="noopener noreferrer">this repository</a> for a more complete UDF Java example.</p></div>`,35)]))}const d=s(e,[["render",t],["__file","external-udf-java.html.vue"]]),r=JSON.parse(`{"path":"/products/function/external-udf-java.html","title":"External UDF in Java","lang":"en-US","frontmatter":{"description":"External UDF in Java We'll use the risingwave-udf package to declare the function in Java. Your function will need to implement an interface to expose it as UDF. You can also ad...","head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zillabase/next/products/function/external-udf-java.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"External UDF in Java"}],["meta",{"property":"og:description","content":"External UDF in Java We'll use the risingwave-udf package to declare the function in Java. Your function will need to implement an interface to expose it as UDF. You can also ad..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-07T04:16:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-07T04:16:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"External UDF in Java\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-07T04:16:20.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Adding Environment Variables","slug":"adding-environment-variables","link":"#adding-environment-variables","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"createdTime":1732866505000,"updatedTime":1736223380000,"contributors":[{"name":"cahyosubroto","email":"cahyosubroto30@gmail.com","commits":5}]},"readingTime":{"minutes":1.67,"words":500},"filePathRelative":"products/function/external-udf-java.md","localizedDate":"November 29, 2024","autoDesc":true,"excerpt":"\\n<p>We'll use the <code>risingwave-udf</code> package to declare the function in Java. Your function will need to implement an interface to expose it as UDF. You can also add additional packages to the Maven project. After that, you need to declare the function in a migration file.</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Info</p>\\n<p>Any external UDFs written in Java must be in a Maven project form and stored in <code>zillabase/functions/java</code> directory to be auto-picked by the Java UDF server.</p>\\n</div>"}`);export{d as comp,r as data};
