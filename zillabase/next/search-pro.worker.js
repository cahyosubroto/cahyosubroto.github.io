const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":177,\"nextId\":177,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2#usage\",\"3\":\"2#sub-commands\",\"4\":\"2#asyncapi-add\",\"5\":\"2#usage-1\",\"6\":\"2#options\",\"7\":\"2#asyncapi-list\",\"8\":\"2#usage-2\",\"9\":\"2#options-1\",\"10\":\"2#asyncapi-remove\",\"11\":\"2#usage-3\",\"12\":\"2#options-2\",\"13\":\"2#asyncapi-show\",\"14\":\"2#usage-4\",\"15\":\"2#options-3\",\"16\":\"3\",\"17\":\"3#usage\",\"18\":\"3#sub-commands\",\"19\":\"3#config-add\",\"20\":\"3#usage-1\",\"21\":\"3#options\",\"22\":\"3#config-list\",\"23\":\"3#usage-2\",\"24\":\"3#options-1\",\"25\":\"3#config-remove\",\"26\":\"3#usage-3\",\"27\":\"3#options-2\",\"28\":\"4\",\"29\":\"4#usage\",\"30\":\"4#sub-commands\",\"31\":\"5\",\"32\":\"5#usage\",\"33\":\"5#options\",\"34\":\"6\",\"35\":\"6#usage\",\"36\":\"6#sub-commands\",\"37\":\"6#migration-add\",\"38\":\"6#usage-1\",\"39\":\"6#options\",\"40\":\"6#migration-list\",\"41\":\"6#usage-2\",\"42\":\"6#options-1\",\"43\":\"7\",\"44\":\"7#usage\",\"45\":\"7#sub-commands\",\"46\":\"8\",\"47\":\"8#usage\",\"48\":\"8#sub-commands\",\"49\":\"8#sso-add\",\"50\":\"8#usage-1\",\"51\":\"8#options\",\"52\":\"8#sso-list\",\"53\":\"8#usage-2\",\"54\":\"8#options-1\",\"55\":\"8#sso-remove\",\"56\":\"8#usage-3\",\"57\":\"8#options-2\",\"58\":\"9\",\"59\":\"9#usage\",\"60\":\"9#options\",\"61\":\"10\",\"62\":\"10#usage\",\"63\":\"10#options\",\"64\":\"11\",\"65\":\"11#prerequisites\",\"66\":\"11#installing-zillabase-cli\",\"67\":\"11#setting-up-the-project\",\"68\":\"11#using-the-petstore-apis\",\"69\":\"11#endpoints\",\"70\":\"11#examples\",\"71\":\"11#publish-a-valid-record\",\"72\":\"11#fetch-a-record\",\"73\":\"11#stopping-the-project\",\"74\":\"12\",\"75\":\"12#prerequisites\",\"76\":\"12#installing-zillabase-cli\",\"77\":\"12#setting-up-the-project\",\"78\":\"12#streampay-apis\",\"79\":\"12#using-the-project\",\"80\":\"12#login\",\"81\":\"12#send-money\",\"82\":\"12#transfer-requests\",\"83\":\"12#openai-fraud-risk-with-zillabase\",\"84\":\"12#stopping-the-project\",\"85\":\"13\",\"86\":\"13#getting-started\",\"87\":\"13#concepts\",\"88\":\"13#examples\",\"89\":\"13#cli\",\"90\":\"13#support\",\"91\":\"14\",\"92\":\"14#prerequisites\",\"93\":\"14#step-1-install-zillabase\",\"94\":\"14#step-2-clone-the-example-repository\",\"95\":\"14#step-3-start-zillabase\",\"96\":\"14#example-output\",\"97\":\"14#step-4-use-generated-api-endpoints\",\"98\":\"14#available-endpoints\",\"99\":\"14#examples\",\"100\":\"14#_1-publish-a-record\",\"101\":\"14#example-output-1\",\"102\":\"14#_2-fetch-a-record\",\"103\":\"14#example-output-2\",\"104\":\"14#step-5-stop-zillabase\",\"105\":\"15\",\"106\":\"15#💬-developer-community\",\"107\":\"15#💡-product-partnership-inquiries\",\"108\":\"15#🆘-technical-support\",\"109\":\"16\",\"110\":\"17\",\"111\":\"18\",\"112\":\"18#how-it-works\",\"113\":\"19\",\"114\":\"19#available-config\",\"115\":\"19#seeding-user\",\"116\":\"19#default-configuration\",\"117\":\"20\",\"118\":\"20#example\",\"119\":\"21\",\"120\":\"22\",\"121\":\"23\",\"122\":\"23#example\",\"123\":\"24\",\"124\":\"24#adding-environment-variables\",\"125\":\"24#example\",\"126\":\"25\",\"127\":\"25#adding-environment-variables\",\"128\":\"25#example\",\"129\":\"26\",\"130\":\"27\",\"131\":\"27#list-all-buckets\",\"132\":\"27#create-a-bucket\",\"133\":\"27#delete-a-bucket\",\"134\":\"28\",\"135\":\"29\",\"136\":\"29#list-all-objects-in-a-bucket\",\"137\":\"29#retrieve-an-object\",\"138\":\"29#create-an-object\",\"139\":\"29#update-an-object\",\"140\":\"29#delete-an-object\",\"141\":\"30\",\"142\":\"31\",\"143\":\"32\",\"144\":\"33\",\"145\":\"34\",\"146\":\"35\",\"147\":\"35#fetch-all-pets\",\"148\":\"35#update-a-pet\",\"149\":\"35#get-the-previously-updated-data\",\"150\":\"35#consume-the-entity-streams-with-sse\",\"151\":\"35#consume-the-kafka-topic\",\"152\":\"35#create-new-pet-data\",\"153\":\"35#check-the-stream-consumer\",\"154\":\"36\",\"155\":\"36#obtaining-the-asyncapi-specifications\",\"156\":\"36#http-specification\",\"157\":\"36#kafka-specification\",\"158\":\"37\",\"159\":\"37#managing-zilla-configuration\",\"160\":\"37#providing-your-own-zilla-yaml-configuration\",\"161\":\"37#fetch-zilla-configuration\",\"162\":\"37#modifying-zilla-configuration\",\"163\":\"38\",\"164\":\"39\",\"165\":\"40\",\"166\":\"41\",\"167\":\"42\",\"168\":\"43\",\"169\":\"44\",\"170\":\"45\",\"171\":\"46\",\"172\":\"47\",\"173\":\"48\",\"174\":\"49\",\"175\":\"50\",\"176\":\"51\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,14],\"2\":[1,2],\"3\":[2,19],\"4\":[2,8],\"5\":[1,15],\"6\":[1,32],\"7\":[2,11],\"8\":[1,10],\"9\":[1,20],\"10\":[2,10],\"11\":[1,12],\"12\":[1,26],\"13\":[2,7],\"14\":[1,10],\"15\":[1,37],\"16\":[1,14],\"17\":[1,2],\"18\":[2,14],\"19\":[2,8],\"20\":[1,14],\"21\":[1,31],\"22\":[2,11],\"23\":[1,12],\"24\":[1,26],\"25\":[2,10],\"26\":[1,12],\"27\":[1,26],\"28\":[1,11],\"29\":[1,4],\"30\":[2,27],\"31\":[1,17],\"32\":[1,7],\"33\":[1,17],\"34\":[1,15],\"35\":[1,2],\"36\":[2,14],\"37\":[2,10],\"38\":[1,9],\"39\":[1,36],\"40\":[2,9],\"41\":[1,8],\"42\":[1,17],\"43\":[2,11],\"44\":[1,4],\"45\":[2,29],\"46\":[1,14],\"47\":[1,2],\"48\":[2,15],\"49\":[2,8],\"50\":[1,25],\"51\":[1,50],\"52\":[2,11],\"53\":[1,16],\"54\":[1,34],\"55\":[2,10],\"56\":[1,16],\"57\":[1,34],\"58\":[1,11],\"59\":[1,7],\"60\":[1,17],\"61\":[1,11],\"62\":[1,7],\"63\":[1,17],\"64\":[2,39],\"65\":[1,18],\"66\":[3,54],\"67\":[4,34],\"68\":[4,20],\"69\":[1,34],\"70\":[1],\"71\":[4,42],\"72\":[3,42],\"73\":[3,9],\"74\":[3,47],\"75\":[1,28],\"76\":[3,54],\"77\":[4,105],\"78\":[2,103],\"79\":[3],\"80\":[1,46],\"81\":[2,39],\"82\":[2,37],\"83\":[5,134],\"84\":[3,11],\"85\":[4,46],\"86\":[2],\"87\":[1],\"88\":[1],\"89\":[1],\"90\":[1],\"91\":[1,28],\"92\":[1,17],\"93\":[4,11],\"94\":[6,30],\"95\":[4,8],\"96\":[2,29],\"97\":[6,24],\"98\":[2,23],\"99\":[1],\"100\":[4,35],\"101\":[2,23],\"102\":[4,15],\"103\":[2,35],\"104\":[4,8],\"105\":[2,20],\"106\":[3,20],\"107\":[4,13],\"108\":[3,14],\"109\":[5,164],\"110\":[1,96],\"111\":[3,36],\"112\":[3,60],\"113\":[2,9],\"114\":[2,89],\"115\":[2,57],\"116\":[2,16],\"117\":[6,117],\"118\":[1,48],\"119\":[3,57],\"120\":[2,154],\"121\":[2,41],\"122\":[1,92],\"123\":[4,55],\"124\":[3,21],\"125\":[1,189],\"126\":[4,62],\"127\":[3,21],\"128\":[1,143],\"129\":[5,59],\"130\":[2,27],\"131\":[3,29],\"132\":[3,33],\"133\":[3,34],\"134\":[3,85],\"135\":[2,42],\"136\":[6,35],\"137\":[3,36],\"138\":[3,56],\"139\":[3,86],\"140\":[3,30],\"141\":[2,113],\"142\":[2,108],\"143\":[4,56],\"144\":[3,118],\"145\":[2,143],\"146\":[3,60],\"147\":[3,17],\"148\":[3,20],\"149\":[5,14],\"150\":[6,37],\"151\":[4,40],\"152\":[4,20],\"153\":[4,30],\"154\":[3,27],\"155\":[4,53],\"156\":[2,92],\"157\":[2,31],\"158\":[3,33],\"159\":[3],\"160\":[4,33],\"161\":[3,20],\"162\":[3,72],\"163\":[1,3],\"164\":[1],\"165\":[1],\"166\":[1],\"167\":[2],\"168\":[1],\"169\":[1],\"170\":[1],\"171\":[1],\"172\":[1],\"173\":[1],\"174\":[1],\"175\":[1],\"176\":[1]},\"averageFieldLength\":[2.1468926553672305,34.67240886788655],\"storedFields\":{\"0\":{\"h\":\"\"},\"1\":{\"h\":\"asyncapi\",\"t\":[\"This command lists all the available sub-commands for Zillabase’s asyncapi feature.\"]},\"2\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi\"]},\"3\":{\"h\":\"Sub Commands\",\"t\":[\"add - Add a new AsyncAPI specification.\",\"list - Lists all the available AsyncAPI specifications.\",\"remove - Delete an AsyncAPI specification.\",\"show - Show an AsyncAPI specification details.\"]},\"4\":{\"h\":\"asyncapi add\",\"t\":[\"This command adds a new AsyncAPI specification.\"]},\"5\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi add [ --debug ] [ {-h | --help} ] [ --id <id> ] {-s | --spec} <spec> [ {-v | --verbose} ]\"]},\"6\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"AsyncAPI specification identifier.\",\"No\",\"-\",\"--id 123\",\"-s <spec>, --spec <spec>\",\"AsyncAPI specification location.\",\"Yes\",\"-\",\"-s ./spec.yaml\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"7\":{\"h\":\"asyncapi list\",\"t\":[\"This command lists all the available AsyncAPI specifications in the project.\"]},\"8\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi list [ --debug ] [ {-h | --help} ] [ {-v | --verbose} ]\"]},\"9\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"10\":{\"h\":\"asyncapi remove\",\"t\":[\"This command removes an AsyncAPI specification from the project.\"]},\"11\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi remove [ --debug ] [ {-h | --help} ] --id <id> [ {-v | --verbose} ]\"]},\"12\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"AsyncAPI specification identifier.\",\"No\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"13\":{\"h\":\"asyncapi show\",\"t\":[\"This command shows an AsyncAPI specification.\"]},\"14\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi show [ --debug ] [ {-h | --help} ] [ {-v | --verbose} ] [--] <id>\"]},\"15\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\",\"--\",\"Used to separate command-line options from arguments to avoid confusion.\",\"No\",\"-\",\"-- argument\",\"<id>\",\"AsyncAPI specification identifier.\",\"Yes\",\"-\",\"123\"]},\"16\":{\"h\":\"config\",\"t\":[\"This command lists all the available sub-commands for managing the Zillabase’s configurations.\"]},\"17\":{\"h\":\"Usage\",\"t\":[\"zillabase config\"]},\"18\":{\"h\":\"Sub Commands\",\"t\":[\"add - Add a new Zillabase configuration.\",\"list - List all the Zillabase configurations.\",\"remove - Delete a Zillabase configuration.\"]},\"19\":{\"h\":\"config add\",\"t\":[\"This command adds a new Zillabase configuration.\"]},\"20\":{\"h\":\"Usage\",\"t\":[\"zillabase config add {-c | --config} <config> [ --debug ] [ {-h | --help} ] [ --id <id> ] [ {-v | --verbose} ]\"]},\"21\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-c <config>, --config <config>\",\"Config location\",\"Yes\",\"-\",\"-c ./config.yaml\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"Config identifier.\",\"No\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"22\":{\"h\":\"config list\",\"t\":[\"This command lists all the available Zillabase configurations in the project.\"]},\"23\":{\"h\":\"Usage\",\"t\":[\"zillabase config list [ --debug ] [ {-h | --help} ] --id <id> [ {-v | --verbose} ]\"]},\"24\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"Config identifier.\",\"Yes\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"25\":{\"h\":\"config remove\",\"t\":[\"This command removes a Zillabase configuration from the project.\"]},\"26\":{\"h\":\"Usage\",\"t\":[\"zillabase config remove [ --debug ] [ {-h | --help} ] --id <id> [ {-v | --verbose} ]\"]},\"27\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"Config identifier.\",\"Yes\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"28\":{\"h\":\"Help\",\"t\":[\"This command lists all the available commands within Zillabase CLI.\"]},\"29\":{\"h\":\"Usage\",\"t\":[\"zillabase \\\\<command> [ <args> ]\"]},\"30\":{\"h\":\"Sub Commands\",\"t\":[\"init: Initialize a local project.\",\"start: Start containers for local development.\",\"stop: Stop containers for local development.\",\"asyncapi: Manage AsyncAPI specifications.\",\"config: Manage Zilla configuration.\",\"migration: Manage migrations.\",\"sso: Manage single sign-on providers.\"]},\"31\":{\"h\":\"Init\",\"t\":[\"This command initializes a new Zillabase folder with an empty config.yaml and seed.sql file.\"]},\"32\":{\"h\":\"Usage\",\"t\":[\"zillabase init [ --debug ] [ {-h | --help} ]\"]},\"33\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"34\":{\"h\":\"migration\",\"t\":[\"This command lists all the available sub-commands for managing database migrations in Zillabase.\"]},\"35\":{\"h\":\"Usage\",\"t\":[\"zillabase migration\"]},\"36\":{\"h\":\"Sub Commands\",\"t\":[\"add - Create a new migration file locally.\",\"list - List all the local migration files.\"]},\"37\":{\"h\":\"migration add\",\"t\":[\"This command creates a new database migration file locally.\"]},\"38\":{\"h\":\"Usage\",\"t\":[\"zillabase migration add [ --debug ] [ {-h | --help} ] [--] <name>...\"]},\"39\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--\",\"Separates command-line options from the list of arguments.\",\"No\",\"-\",\"-- argument\",\"<name>\",\"The name(s) of the migration(s) to be added.\",\"Yes\",\"-\",\"migration_name\"]},\"40\":{\"h\":\"migration list\",\"t\":[\"This command lists all the local migration files.\"]},\"41\":{\"h\":\"Usage\",\"t\":[\"zillabase migration list [ --debug ] [ {-h | --help} ]\"]},\"42\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"43\":{\"h\":\"Zillabase CLI\",\"t\":[\"This article lists all the available commands within the Zillabase CLI.\"]},\"44\":{\"h\":\"Usage\",\"t\":[\"zillabase <command> [ <args> ]\"]},\"45\":{\"h\":\"Sub Commands\",\"t\":[\"help - Display help information\",\"init - Initialize a local project\",\"start - Start containers for local development\",\"stop - Stop containers for local development\",\"asyncapi - Manage AsyncAPI specifications\",\"config - Manage Zilla configuration\",\"migration - Manage migrations\",\"sso - Manage single sign-on providers\"]},\"46\":{\"h\":\"sso\",\"t\":[\"This command lists all the available sub-commands for managing the sign-on providers.\"]},\"47\":{\"h\":\"Usage\",\"t\":[\"zillabase sso\"]},\"48\":{\"h\":\"Sub Commands\",\"t\":[\"add - Add a new identity provider.\",\"list - List all the identity providers.\",\"remove - Delete an identity provider.\"]},\"49\":{\"h\":\"sso add\",\"t\":[\"This command adds a new identity provider.\"]},\"50\":{\"h\":\"Usage\",\"t\":[\"zillabase sso add {-a | --alias} <alias> {-c | --client} <clientId> [ --debug ] [ {-h | --help} ] {-p | --provider} <providerId> {-r | --realm} <realm> {-s | --secret} <secret> [ {-v | --verbose} ]\"]},\"51\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-a <alias>, --alias <alias>\",\"Identity Provider Alias\",\"Yes\",\"-\",\"-a myalias\",\"-c <clientId>, --client <clientId>\",\"Client Id\",\"Yes\",\"-\",\"-c myclient123\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-p <providerId>, --provider <providerId>\",\"Identity Provider Name\",\"Yes\",\"-\",\"-p myprovider\",\"-r <realm>, --realm <realm>\",\"Keycloak Realm\",\"Yes\",\"-\",\"-r myrealm\",\"-s <secret>, --secret <secret>\",\"Client Secret\",\"Yes\",\"-\",\"-s mysecret\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"52\":{\"h\":\"sso list\",\"t\":[\"This command lists all the identity providers available for the project.\"]},\"53\":{\"h\":\"Usage\",\"t\":[\"zillabase sso list [ {-a | --alias} <alias> ] [ --debug ] [ {-h | --help} ] {-r | --realm} <realm> [ {-v | --verbose} ]\"]},\"54\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-a <alias>, --alias <alias>\",\"Identity Provider Alias\",\"No\",\"-\",\"-a myalias\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-r <realm>, --realm <realm>\",\"Keycloak Realm\",\"Yes\",\"-\",\"-r myrealm\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"55\":{\"h\":\"sso remove\",\"t\":[\"This command removes an identity provider from the project.\"]},\"56\":{\"h\":\"Usage\",\"t\":[\"zillabase sso remove {-a | --alias} <alias> [ --debug ] [ {-h | --help} ] {-r | --realm} <realm> [ {-v | --verbose} ]\"]},\"57\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-a <alias>, --alias <alias>\",\"Identity Provider Alias\",\"Yes\",\"-\",\"-a myalias\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-r <realm>, --realm <realm>\",\"Keycloak Realm\",\"Yes\",\"-\",\"-r myrealm\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"58\":{\"h\":\"Start\",\"t\":[\"This command starts the Zillabase containers for the local project development.\"]},\"59\":{\"h\":\"Usage\",\"t\":[\"zillabase start [ --debug ] [ {-h | --help} ]\"]},\"60\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"61\":{\"h\":\"Stop\",\"t\":[\"This command stops the Zillabase containers for the local project development.\"]},\"62\":{\"h\":\"Usage\",\"t\":[\"zillabase stop [ --debug ] [ {-h | --help} ]\"]},\"63\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"64\":{\"h\":\"Petstore Example\",\"t\":[\"The Petstore example project implements the common Petstore example, where requests are proxied to Kafka.\",\"Zilla implements the REST endpoints defined in an AsyncAPI 3.x spec and proxies them onto Kafka topics defined in an AsyncAPI 3.x spec based on the operations defined in each spec. HTTP AsyncAPI 3.x spec and Kafka AsyncAPI 3.x spec are generated automatically based on the Kafka Cluster metadata information.\"]},\"65\":{\"h\":\"Prerequisites\",\"t\":[\"Before we start, make sure you fulfill the following requirements:\",\"Java 20+\",\"Homebrew package manager\",\"Docker\",\"Zillabase CLI\"]},\"66\":{\"h\":\"Installing Zillabase CLI\",\"t\":[\"If you don't have Zillabase CLI installed, install it with the following command:\",\"brew tap aklivity/tap brew install zillabase\",\"Info\",\"The Homebrew package manager is required. You can install it on MacOS and other Linux distributions. To install it, run the following command:\",\"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\"\",\"For more details, visit the Zillabase GitHub repository.\"]},\"67\":{\"h\":\"Setting Up the Project\",\"t\":[\"Clone the Zillabase repository.\",\"git clone https://github.com/aklivity/zillabase.git\",\"The Petstore project is stored in the examples/petstore directory.\",\"go to the petstore project example directory on the cloned repository directory.\",\"cd examples/petstore\",\"Start the project and wait for the initialization process to finish.\",\"zillabase start\"]},\"68\":{\"h\":\"Using the Petstore APIs\",\"t\":[\"The Zillabase Petstore is an HTTP Kafka proxy that exposes common entity CRUD endpoints, with entity data stored on Kafka topics.\"]},\"69\":{\"h\":\"Endpoints\",\"t\":[\"Protocol\",\"Method\",\"Endpoint\",\"Topic\",\"Description\",\"HTTP\",\"POST\",\"/petstore_pets\",\"petstore_pets\",\"Create an entry.\",\"HTTP\",\"PUT\",\"/petstore_pets/{id}\",\"petstore_pets\",\"Update pet by the key.\",\"HTTP\",\"DELETE\",\"/petstore_pets/{id}\",\"petstore_pets\",\"Delete pet by the key.\",\"HTTP\",\"GET\",\"/petstore_pets\",\"petstore_pets\",\"Fetch all pets.\",\"HTTP\",\"GET\",\"/petstore_pets/{id}\",\"petstore_pets\",\"Fetch pet by the key.\",\"Similarly, endpoints are available to manage customers using /petstore_customers & /petstore_verified_customers.\"]},\"70\":{\"h\":\"Examples\"},\"71\":{\"h\":\"Publish a valid record\",\"t\":[\"curl -k -v -X POST http://localhost:8080/petstore_pets -H 'Idempotency-Key: 1' -H 'Content-Type: application/json' -d '{\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"Awesome Dog\\\"}'\",\"Output:\",\"> POST /petstore_pets HTTP/1.1 ... > Content-Type: application/json > Content-Length: 35 > < HTTP/1.1 204 No Content < Access-Control-Allow-Origin: * < * Connection #0 to host localhost left intact\"]},\"72\":{\"h\":\"Fetch a record\",\"t\":[\"curl -k -v http://localhost:8080/petstore_pets/1\",\"Output:\",\"> GET /petstore_pets/1 HTTP/1.1 ... < HTTP/1.1 200 OK < Content-Length: 33 < Content-Type: application/json < Etag: AQIAAg== < Access-Control-Allow-Origin: * < Access-Control-Expose-Headers: * < * Connection #0 to host localhost left intact {\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"Common Dog\\\"}%\"]},\"73\":{\"h\":\"Stopping the Project\",\"t\":[\"To stop the Zillabase project, run the following command:\",\"zillabase stop\"]},\"74\":{\"h\":\"StreamPay AI Example\",\"t\":[\"This example is an implementation of the StreamPay App designed to transfer payments from one user to another.\",\"Zilla implements the REST endpoints defined in an AsyncAPI 3.x spec and proxies them onto Kafka topics defined in an AsyncAPI 3.x spec based on the operations specified in each spec. Both HTTP AsyncAPI 3.x spec and Kafka AsyncAPI 3.x spec are generated automatically based on the Kafka Cluster metadata information.\"]},\"75\":{\"h\":\"Prerequisites\",\"t\":[\"Before we start, make sure you fulfill the following requirements:\",\"Java 20+\",\"Homebrew package manager\",\"Docker\",\"Zillabase CLI\",\"NodeJS (with npm or yarn)\",\"OpenAI API Key (Optional)\"]},\"76\":{\"h\":\"Installing Zillabase CLI\",\"t\":[\"If you don't have Zillabase CLI installed, install it with the following command:\",\"brew tap aklivity/tap brew install zillabase\",\"Info\",\"The Homebrew package manager is required. You can install it on MacOS and other Linux distributions. To install it, run the following command:\",\"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\"\",\"For more details, visit the Zillabase GitHub repository.\"]},\"77\":{\"h\":\"Setting Up the Project\",\"t\":[\"Clone the Zillabase repository.\",\"git clone https://github.com/aklivity/zillabase.git\",\"The StreamPay project is stored in the examples/streampay directory.\",\"go to the streampay project example directory on the cloned repository directory.\",\"cd examples/streampay\",\"To enable the OpenAI fraud detection integration, you must use an OPENAI_API_KEY and add it to the zillabase/config.yaml file.\",\"udf: python: env: - OPENAI_API_KEY=<your OpenAI API key>\",\"Start the Zillabase project and wait for the initialization process to finish.\",\"zillabase start\",\"Output:\",\"latest: Pulling from aklivity/zillabase ... seed.sql processed successfully! ... Realm: zillabase created successfully. ... Config Server is populated with zilla.yaml\",\"Next, we'll set up the StreamPay UI. Install the dependencies with the following command:\",\"npm install # or yarn install\",\"Install quasar globally with the following command:\",\"npm install -g @quasar/cli\",\"Info\",\"You might need to execute rehash to find quasar on the path after installing quasar.\",\"Start the frontend application in development mode.\",\"quasar dev\"]},\"78\":{\"h\":\"StreamPay APIs\",\"t\":[\"The Zillabase Streampay exposes common entity CRUD endpoints, with the entity data stored on Kafka topics if Kafka's cleanup.policy=compact is set; otherwise, it exposes only Read mode endpoints.\",\"Zillabase leverages the AsyncAPI schema definitions to define all of the generated streaming APIs. You can export the generated API schema definition by running this Zillabase command:\",\"zillabase asyncapi show http-asyncapi >> asyncapi_REST_APIs.yaml\",\"Once the generated AsyncAPI schema is exported, you can copy it into the AsyncAPI Studio to get a complete picture of all the streaming APIs you have created.\",\"Some endpoints described are:\",\"Method\",\"Endpoint\",\"Topic\",\"Description\",\"POST\",\"/streampay_users\",\"dev.streampay_users\",\"Create an user.\",\"PUT\",\"/streampay_users/{id}\",\"dev.streampay_users\",\"Update user by the key.\",\"GET\",\"/streampay_users\",\"dev.streampay_users\",\"Fetch all users.\",\"GET\",\"/streampay_users/{id}\",\"dev.streampay_users\",\"Fetch user by the key.\",\"GET\",\"/streampay_balances-stream\",\"dev.streampay_balances\",\"Stream latest user's balance.\",\"POST\",\"/streampay_commands\",\"dev.streampay_commands\",\"Post command such as payment request or pay.\",\"GET\",\"/streampay_payment_requests\",\"dev.streampay_payment_requests\",\"Fetch all payment requests.\",\"GET\",\"/streampay_payment_requests/{id}\",\"dev.streampay_payment_requests\",\"Fetch payment request by key.\",\"GET\",\"/streampay_payment_requests-stream\",\"dev.streampay_payment_requests\",\"Stream new available payment request.\",\"GET\",\"/streampay_activities-stream\",\"dev.streampay_activities\",\"Stream all the activities.\"]},\"79\":{\"h\":\"Using the Project\"},\"80\":{\"h\":\"Login\",\"t\":[\"Login using Keycloak with one of the users pre-created in zillabase/config.yaml.\",\"keycloak: realm: zillabase users: - username: allen email: allen.doe@example.com name: Allen Doe password: Test@123\",\"You can log in from a different browser session to one of the other users to see how money is sent between them.\"]},\"81\":{\"h\":\"Send Money\",\"t\":[\"Once logged in, users should have a starting balance of money. You can:\",\"SEND OR REQUEST funds to any of the other users. Ideally, you can send or request to a second User you are logged in as.\",\"Sending money will immediately move money to the other user.\",\"Requesting money will send a transaction request to that user.\"]},\"82\":{\"h\":\"Transfer Requests\",\"t\":[\"A user with a transfer request can Approve or Reject the request. You can:\",\"Approve the payment. The money will be transferred to the requesting user.\",\"Reject the payment. The request will be removed from the list and marked as rejected.\",\"Wait for the OpenAI fraud check to finish to determine the potential fraud risk.\"]},\"83\":{\"h\":\"OpenAI Fraud Risk with Zillabase\",\"t\":[\"By leveraging the existing CQRS event stream that the Streampay app uses in Zillabase, we can create OpenAI query functions using the Python OpenAI library.\",\"When a new transaction request from Allen to transfer $3400 to Bertollo is created, the OpenAI query will be something similar to the following:\",\"==== Open AI Query ==== Use the below collection of safe and risky money transfer requests to answer the subsequent question and your opinion. Collection: \\\"\\\"\\\" Allen transferring $3200 to Bertollo is risky Allen transferring $3400 to Fred is safe Allen transferring $3900 to Greg is safe Allen transferring $2800 to Candice is safe Elaine transferring $4300 to Bertollo is safe \\\"\\\"\\\" Question: Should Allen transfer $3400 to Bertollo? ==== Open AI Result ==== { \\\"summary\\\": \\\"Based on the previous data, Allen transferring money to Bertollo has been identified as risky in one instance. Although Allen has made safe transfers to others, the specific transfer to Bertollo raises concerns. Therefore, it is advisable to consider the risk before proceeding.\\\", \\\"risk\\\": \\\"MEDIUM\\\" }\",\"This system prompt is used:\",\"You recommend the amount of fraud risk for money transfers between two people and respond only with a JSON object containing your summary and a numeric value of the risk as LOW, MEDIUM, or HIGH. Only return valid JSON string and no other markup.\",\"You can find the Python functions used in the zillabase/functions/python/fraud_check.py file.\"]},\"84\":{\"h\":\"Stopping the Project\",\"t\":[\"Close the Quasar development server (Ctrl+C), then stop the Zillabase project.\",\"zillabase stop\"]},\"85\":{\"h\":\"What is Zillabase?\",\"t\":[\"Zillabase is a modern alternative to Firebase, designed for real-time data processing and asynchronous workloads. It integrates a suite of streaming-native open-source tools to automatically build an event-driven backend. This includes real-time data models, user-defined functions, robust security, and versatile APIs (supporting both RESTful and asynchronous interactions).\"]},\"86\":{\"h\":\"Getting Started\"},\"87\":{\"h\":\"Concepts\"},\"88\":{\"h\":\"Examples\"},\"89\":{\"h\":\"CLI\"},\"90\":{\"h\":\"Support\"},\"91\":{\"h\":\"Quickstart\",\"t\":[\"This guide provides a step-by-step approach to getting started with Zillabase. It automatically generates both HTTP AsyncAPI 3.x and Kafka AsyncAPI 3.x specifications based on Kafka Cluster metadata.\"]},\"92\":{\"h\":\"Prerequisites\",\"t\":[\"Ensure you have the following tools installed on your system:\",\"Homebrew\",\"curl\",\"Docker\",\"Java 20 or later\"]},\"93\":{\"h\":\"Step 1: Install Zillabase\",\"t\":[\"To install Zillabase, use the following commands:\",\"brew tap aklivity/tap brew install zillabase\"]},\"94\":{\"h\":\"Step 2: Clone the Example Repository\",\"t\":[\"To quickly start using Zillabase stack, you can use our quickstart example repo.\",\"Clone the repo using the following command:\",\"git clone https://github.com/aklivity/zillabase.git\",\"Navigate to the examples > quickstart > zillabase folder.\"]},\"95\":{\"h\":\"Step 3: Start Zillabase\",\"t\":[\"Start the Zillabase using the following command:\",\"zillabase start\"]},\"96\":{\"h\":\"Example Output\",\"t\":[\"3.2.3: Pulling from bitnami/kafka latest: Pulling from risingwavelabs/risingwave latest-release: Pulling from apicurio/apicurio-registry-mem latest: Pulling from bitnami/keycloak seed-kafka.yaml processed successfully! Registered AsyncAPI spec: kafka-asyncapi Registered AsyncAPI spec: http-asyncapi Config Server is populated with zilla.yaml\"]},\"97\":{\"h\":\"Step 4: Use Generated API Endpoints\",\"t\":[\"Zillabase acts as an HTTP Kafka proxy, exposing CRUD endpoints for entities. Entity data is stored in Kafka topics, utilizing Kafka's cleanup.policy=compact feature.\"]},\"98\":{\"h\":\"Available Endpoints\",\"t\":[\"Protocol\",\"Method\",\"Endpoint\",\"Topic\",\"Description\",\"HTTP\",\"POST\",\"/events\",\"events\",\"Create an event.\",\"HTTP\",\"PUT\",\"/events/{id}\",\"events\",\"Update an event by the key.\",\"HTTP\",\"DELETE\",\"/events/{id}\",\"events\",\"Delete an event by the key.\",\"HTTP\",\"GET\",\"/events\",\"events\",\"Fetch all events.\",\"HTTP\",\"GET\",\"/events/{id}\",\"events\",\"Fetch an event by the key.\"]},\"99\":{\"h\":\"Examples\"},\"100\":{\"h\":\"1. Publish a Record\",\"t\":[\"To publish a valid record to the events topic, use the following command:\",\"curl -k -v -X POST http://localhost:8080/events \\\\ -H 'Idempotency-Key: 1' \\\\ -H 'Content-Type: application/json' \\\\ -d '{\\\"id\\\": \\\"101\\\", \\\"message\\\": \\\"Hello, World\\\"}'\"]},\"101\":{\"h\":\"Example Output\",\"t\":[\"> POST /events HTTP/1.1 ... > Content-Type: application/json > < HTTP/1.1 204 No Content < Access-Control-Allow-Origin: * < * Connection #0 to host localhost left intact\"]},\"102\":{\"h\":\"2. Fetch a Record\",\"t\":[\"To fetch a record by its key:\",\"curl -k -v http://localhost:8080/events/1\"]},\"103\":{\"h\":\"Example Output\",\"t\":[\"> GET /events/1 HTTP/1.1 ... < HTTP/1.1 200 OK < Content-Length: 33 < Content-Type: application/json < Etag: AQIAAg== < Access-Control-Allow-Origin: * < Access-Control-Expose-Headers: * < * Connection #0 to host localhost left intact {\\\"id\\\": \\\"101\\\", \\\"message\\\": \\\"Hello, World\\\"}%\"]},\"104\":{\"h\":\"Step 5: Stop Zillabase\",\"t\":[\"To stop the Zillabase, use the following command:\",\"zillabase stop\"]},\"105\":{\"h\":\"Community Support\",\"t\":[\"We're committed to providing comprehensive support for our developers and users. Choose the most convenient channel for your needs:\"]},\"106\":{\"h\":\"💬 Developer Community\",\"t\":[\"Join our Slack community to:\",\"Collaborate with other developers.\",\"Get real-time assistance.\",\"Share insights and best practices.\",\"Join Slack Community →\"]},\"107\":{\"h\":\"💡 Product & Partnership Inquiries\",\"t\":[\"Have questions about our products, pricing, or potential partnerships?\",\"Contact Our Team →\"]},\"108\":{\"h\":\"🆘 Technical Support\",\"t\":[\"Experiencing an issue? Our support team is ready to help.\",\"Create Support Ticket →\"]},\"109\":{\"h\":\"Frequently Asked Questions (FAQ)\",\"t\":[\"Does Zillabase support database transactions?\",\"No, currently, Zillabase does not support database transactions.\",\"How is authentication integrated with Zillabase?\",\"Authentication and user management features are integrated using Keycloak in Zillabase. During zillabase start, a Keycloak service is initialized by creating a specified realm, adding configured users, setting up client scopes, and registering a client. Update the zillabase/config.yaml file to modify the Keycloak configuration. Read this article for more information.\",\"If an authentication configuration is defined, is every endpoint now protected as authenticated user only?\",\"Yes. If an authentication configuration is defined, every endpoint will require an authenticated user to access it. This means that any request should include the bearer access token in the request authorization header.\",\"How do you get authenticated user information on Zillabase?\",\"Zilla injects the authentication information into the Kafka message header. Later, you can refer to the zilla_identity value in the stream or view definition to correlate an event with a user or to query something specific to the user. Read this article for more information.\",\"What was the difference between /<entity-name> and /<entity-name>-stream endpoints?\",\"The /<entity-name> endpoint is a regular REST endpoint that follows the request-response model. On the other hand, the /entity-name>-stream endpoint is a server-sent event (SSE) HTTP endpoint that emits events every time there's a new entity or updated entity. This endpoint follows the publish-subscribe model.\",\"What was the difference between zillabase/config.yaml and zilla.yaml?\",\"The zillabase/config.yaml is a file generated during project initialization. You can modify the Zillabase start-up configuration with the config file, including configuring authentication, environments for UDF, etc. On the other hand, Zilla.yaml is a Zilla configuration file that is generated during project start-up and adjusted depending on the models you defined before in the migration files. While it is usually not required, you can configure the Zilla configuration if you need some customization.\",\"How do I correlate the request event with the response events?\",\"You can use zilla_correlation_id to correlate request events and response events.\"]},\"110\":{\"h\":\"Troubleshooting\",\"t\":[\"How do I debug the running Zillabase project for error?\",\"To trace/ debug an error other than from an error message, you can check for the related Zillabase container logs, including Keycloak, Kafka, Zilla, RisingWave, etc.\",\"I got /home/linuxbrew/.linuxbrew/bin/zillabase: line 2: exec java: not found error when running Zillabase CLI\",\"The error was caused by missing Java dependencies on your machine. To run Zillabase CLI, you need at least Java version 20+ installed.\",\"I got Exception in thread \\\"main\\\" com.github.dockerjava.api.exception.ConflictException: Status 409: {\\\"message\\\": \\\"Conflict. The container name xxx is already in use by container yyy.\\\"} when running the zillabase start command.\",\"The error is caused by the previous Zillabase project, which is still running. You need to stop the old Zillabase project with zillabase stop command or delete the entire running Zillabase container group directly from Docker CLI or Docker Desktop.\"]},\"111\":{\"h\":\"Authentication in Zillabase\",\"t\":[\"Zillabase utilizes Keycloak to manage its user authentication. The Keycloak was configured through a config.yaml file and initialized during the zillabase start command. Follow this guide to learn how Keycloak is integrated with Zillabase and how to implement authentication in your application.\"]},\"112\":{\"h\":\"How it works\",\"t\":[\"If a Keycloak configuration is found, Zillabase will set up Keycloak during the start-up process and protect every available Zillabase endpoint. Otherwise, Zillabase won't set up Keycloak, and every endpoint is accessible by every user.\",\"To authenticate to protected endpoints, you'll need to provide an access token as the token bearer in the HTTP authorization header. This token is obtained by authenticating via the Keycloak service.\",\"Use Keycloak adapter libraries, such as keycloak-js to easily integrate Keycloak with your application.\"]},\"113\":{\"h\":\"Authentication Configuration\",\"t\":[\"There are various configurable authentication options in Zillabase.\"]},\"114\":{\"h\":\"Available Config\",\"t\":[\"You can set up Keycloak by providing the following configuration in zillabase/config.yaml file.\",\"Key\",\"Type\",\"Required\",\"Description\",\"keycloak.realm\",\"string\",\"Yes\",\"Represents the unique identifier of the Keycloak client.\",\"keycloak.scopes\",\"string[]\",\"No\",\"The scopes that will be assigned to the application realm.\",\"keycloak.client.client-id\",\"string\",\"Yes\",\"The keycloak client ID\",\"keycloak.client.origins\",\"string[]\",\"No\",\"A list of allowed origins for CORS (Cross-Origin Resource Sharing). Default value is [\\\"*\\\"].\",\"keycloak.client.root\",\"string\",\"No\",\"The base URL of the client application.\",\"keycloak.client.redirects\",\"string[]\",\"No\",\"A list of URLs to which Keycloak can redirect after user authentication or logout.\",\"keycloak.client.secret\",\"string\",\"No\",\"The client secret for confidential clients.\",\"keycloak.users\",\"User[]\",\"No\",\"Users object that will be seeded during project initialization.\",\"For the secret value, you can provide env instead of putting the secret directly with the following format: ${{ env.SECRET_ENV_KEY }}.\"]},\"115\":{\"h\":\"Seeding User\",\"t\":[\"You can provide a predefined user object that will be registered during the project initialization process. These users will be assigned to the application realm instead of the master realm. The user object must have the following properties.\",\"Key\",\"Description\",\"username\",\"The user's username.\",\"email\",\"The user's email.\",\"password\",\"The user's password.\",\"name\",\"The user's name.\",\"Info\",\"Users seeded from keycloak configuration are different and not related to the one that was seeded or defined in migration or seed.sql.\"]},\"116\":{\"h\":\"Default Configuration\",\"t\":[\"Name\",\"Value\",\"Keycloak Service URL\",\"http://localhost:8180\",\"Default/Admin Realm\",\"master\",\"Admin Credential\",\"username: admin password: admin\"]},\"117\":{\"h\":\"Managing Single Sign-On (SSO)\",\"t\":[\"You can provide additional single sign-on options for Keycloak service through the Zillabase CLI. In general, you'll need to provide the following information to add an SSO provider.\",\"Name\",\"Description\",\"provider-id\",\"The unique identifier for the identity provider to be integrated.\",\"alias\",\"The alias name for the Single Sign-On (SSO) provider.\",\"client\",\"The name of the client application to be configured.\",\"realm\",\"The Keycloak realm in which the integration will take place.\",\"secret\",\"The secret key is used to authenticate with the SSO provider.\",\"The client and realm values are the ones that you defined before in Zillabase config.yaml. Here are some provider IDs that are supported:\",\"Name\",\"Provider ID\",\"Reference\",\"Google\",\"google\",\"Google API Client ID Guide\",\"Facebook\",\"facebook\",\"Facebook App Dashboard Settings\",\"X (Formerly Twitter)\",\"twitter\",\"X OAuth 2.0 Integration Guide\",\"Github\",\"github\",\"Creating a GitHub OAuth App\",\"Generic OpenID Connect\",\"oidc\",\"OpenID Connect Layers\",\"SAML Providers\",\"saml\",\"SAML Galleon Layers\",\"Info\",\"Please refer to the Keycloak or the other providers' documentation to get more complete provider IDs that are supported.\"]},\"118\":{\"h\":\"Example\",\"t\":[\"Prepare a Zillabase project that has Authentication set up.\",\"Add an SSO provider.\",\"# adjust the values depending on your case zillabase sso add --provider google --client aklivity --alias google --realm zillabase --secret secret # output # Identity Provider added successfully\",\"List the SSO providers.\",\"zillabase sso list --realm zillabase # output # [ # { # \\\"alias\\\": \\\"google\\\", # \\\"providerId\\\": \\\"google\\\", # \\\"config\\\": { # \\\"clientId\\\": \\\"aklivity\\\" # } # } # ]\",\"To remove an SSO provider, use the following command.\",\"# adjust the values depending on your case zillabase sso remove --realm zillabase --alias google # output # The Identity Provider was successfully deleted\"]},\"119\":{\"h\":\"Obtaining Authenticated User\",\"t\":[\"To obtain an authenticated user on view or stream, you can use zilla_identity variable in the query. For example:\",\"-- zilla_identity in view CREATE VIEW user_transactions AS SELECT encode(zilla_identity, 'escape') AS user_id, -amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment' UNION ALL SELECT user_id AS user_id, amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment'; -- zilla_identify in stream CREATE STREAM streampay_commands( type VARCHAR, user_id VARCHAR, request_id VARCHAR, amount DOUBLE PRECISION, notes VARCHAR, zilla_correlation_id VARCHAR, zilla_identity VARCHAR, zilla_timestamp TIMESTAMP );\",\"We also provide zilla_correlation_id and zilla_timestamp in case you need it.\"]},\"120\":{\"h\":\"Defining Function\",\"t\":[\"Zillabase provides powerful tools for managing database migrations, including the ability to define custom functions. Users can create an empty migration file using the CLI to write PostgreSQL-like SQL that defines custom functions. These functions enable advanced data transformations and logic within the database. Backed by Risingwave, Zillabase ensures robust support for functions in a streaming database environment.\",\"Zillabase supports SQL functions, embedded functions (functions defined in SQL), and external user-defined functions (UDF) to accommodate business logic that cannot be covered with regular SQL. Currently, we support embedded functions written in Javascript, Python, and Rust and external user-defined functions written in Java and Python.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_function # output # Created migration 000001__create_table.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Create an external UDF implementation file. Create udf.py in zillabase/functions/python and copy the following function definition.\",\"from arrow_udf import udf # udf example with int result @udf(input_types=['INT', 'INT'], result_type='INT') def gcd(x, y): while y != 0: (x, y) = (y, x % y) return x\",\"Edit the migration file with the following content.\",\"-- declare function from an external user-defined function CREATE FUNCTION gcd(int, int) RETURNS int LANGUAGE python AS gcd; -- embedded function CREATE FUNCTION gcd2(a int, b int) RETURNS int LANGUAGE python AS $$ def gcd(a, b): while b != 0: a, b = b, a % b return a $$; -- SQL UDF CREATE FUNCTION add(INT, INT) RETURNS int LANGUAGE sql AS $$select $1 + $2$$;\",\"To test the query.\",\"-- test the external UDF select gcd(12, 4); -- test the embedded UDF select gcd2(12, 4); -- test the SQL UDF Select add(1, 2);\"]},\"121\":{\"h\":\"Embedded UDF\",\"t\":[\"In embedded functions, the function implementation is defined in the SQL function definition. Unlike external UDF, embedded UDF is run internally in Risingwave, so it does not offer as much flexibility as external UDF does. Because of this, embedded UDF are limited for computational purposes only and do not have access to external networks.\"]},\"122\":{\"h\":\"Example\",\"t\":[\"These steps will walk you through the UDF example in Python.\",\"Create an empty folder.\",\"mkdir udf-embedded # create a new folder cd udf-embedded # change the current directory\",\"Initialize an empty Zillabase project.\",\"zillabase init\",\"Create a new migration file.\",\"zillabase migration add create_function\",\"Define the function in the migration file.\",\"CREATE FUNCTION gcd(a int, b int) RETURNS int LANGUAGE python AS $$ def gcd(a, b): while b != 0: a, b = b, a % b return a $$;\",\"Run the project.\",\"zillabase start\",\"Connect to the database with PSQL.\",\"psql -U root -d dev -h localhost -p 4567\",\"Info\",\"If you don't have psql installed, install it with the following commands:\",\"Debian:\",\"sudo apt-get install -y postgresql-client\",\"MacOS:\",\"brew install libpq\",\"Run a query.\",\"select gcd(12, 4);\",\"Stop the project.\",\"zillabase stop\"]},\"123\":{\"h\":\"External UDF in Java\",\"t\":[\"We'll use the risingwave-udf package to declare the function in Java. Your function will need to implement an interface to expose it as UDF. You can also add additional packages to the Maven project. After that, you need to declare the function in a migration file.\",\"Info\",\"Any external UDFs written in Java must be in a Maven project form and stored in zillabase/functions/java directory to be auto-picked by the Java UDF server.\"]},\"124\":{\"h\":\"Adding Environment Variables\",\"t\":[\"You can add environment variables during UDF execution by modifying the config.yaml file. For example:\",\"udf: java: env: - MY_VAR=value\"]},\"125\":{\"h\":\"Example\",\"t\":[\"Before we start, make sure you have the following requirements installed:\",\"Java Developer's Kit (JDK) version 11 or later.\",\"Apache Maven 3.0 or later.\",\"These steps will walk you through the UDF example in Java.\",\"Create an empty folder.\",\"mkdir udf-java # create a new folder cd udf-java # change the current directory\",\"Initialize an empty Zillabase project.\",\"zillabase init\",\"Create and go to zillabase/functions/java folder.\",\"mkdir -p zillabase/functions/java cd zillabase/functions/java\",\"Create a new Maven project and add the following dependency:\",\"<dependency> <groupId>com.risingwave</groupId> <artifactId>risingwave-udf</artifactId> <version>0.2.1</version> </dependency>\",\"Info\",\"Make sure to include the class's main entry point on the Maven project.\",\"Create UdfExample.java on the main namespace (for example src/main/java/io/aklivity/zillabase) or modify the project main entry point with the following contents:\",\"import java.util.Iterator; import java.util.stream.IntStream; import java.util.stream.Stream; import com.risingwave.functions.ScalarFunction; import com.risingwave.functions.TableFunction; public class UdfExample { public static class Gcd implements ScalarFunction { public int eval(int a, int b) { while (b != 0) { int temp = b; b = a % b; a = temp; } return a; } } public static class ArrayAccess implements ScalarFunction { public String eval(String[] array, int index) { return array[index - 1]; } } public static class Series implements TableFunction { public Iterator<Integer> eval(int n) { return IntStream.range(0, n).iterator(); } } public static class Split implements TableFunction { public static class Row { public String word; public int length; } public Iterator<Row> eval(String str) { return Stream.of(str.split(\\\" \\\")) .map( s -> { Row row = new Row(); row.word = s; row.length = s.length(); return row; }) .iterator(); } } }\",\"Create a new migration file.\",\"zillabase migration add create_function\",\"Declare the function in the migration file.\",\"CREATE FUNCTION gcd(int, int) RETURNS int LANGUAGE java AS gcd; CREATE FUNCTION array_access(varchar[], int) RETURNS varchar LANGUAGE java AS array_access; CREATE FUNCTION series(int) RETURNS TABLE (x int) LANGUAGE java AS series;\",\"Run the project.\",\"zillabase start\",\"Connect to the database with PSQL.\",\"psql -U root -d dev -h localhost -p 4567\",\"Info\",\"If you don't have psql installed, install it with the following commands:\",\"Debian:\",\"sudo apt-get install -y postgresql-client\",\"MacOS:\",\"brew install libpq\",\"Run a query.\",\"select gcd(12, 4); select array_access('{\\\"first\\\", \\\"second\\\", \\\"third\\\"}', 2); select series(5);\",\"Stop the project.\",\"zillabase stop\",\"Info\",\"Refer to this repository for a more complete UDF Java example.\"]},\"126\":{\"h\":\"External UDF in Python\",\"t\":[\"To declare the function in Python, we'll use the arrow-udf package. You'll need to annotate the function that you want to expose, and then define the input and return types. On the other hand, you can also provide requirements.txt file in the zillabase/functions/python path in case you want to install additional Python packages. After that, you need to declare the function in a migration file.\",\"Info\",\"Any external UDFs written in Python must be stored in zillabase/functions/python directory in order to be auto-picked by the Python UDF server.\"]},\"127\":{\"h\":\"Adding Environment Variables\",\"t\":[\"You can add environment variables during UDF execution by modifying the config.yaml file. For example:\",\"udf: python: env: - MY_VAR=value\"]},\"128\":{\"h\":\"Example\",\"t\":[\"These steps will walk you through the UDF example in Python.\",\"Create an empty folder.\",\"mkdir udf-python # create a new folder cd udf-python # change the current directory\",\"Initialize an empty Zillabase project.\",\"zillabase init\",\"Create a requirements.txt file in zillabase/functions/python and add the following packages.\",\"numpy==2.1.3\",\"Create udf.py in zillabase/functions/python and copy the following function definition.\",\"from arrow_udf import udf import numpy as np # udf example with int result @udf(input_types=['INT', 'INT'], result_type='INT') def gcd(x, y): while y != 0: (x, y) = (y, x % y) return x # udf example with struct (object) result type @udf(input_types=['VARCHAR'], result_type='STRUCT<key: VARCHAR, value: VARCHAR>') def key_value(pair: str): key, value = pair.split('=') return {'key': key, 'value': value} # udf example that call external library @udf(input_types=['real[]', 'real[]'], result_type='real') def dot_vect(a, b): return np.dot(a, b)\",\"Create a new migration file.\",\"zillabase migration add create_function\",\"Declare the function in the migration file.\",\"CREATE FUNCTION gcd(int, int) RETURNS int LANGUAGE python AS gcd; CREATE FUNCTION key_value(varchar) RETURNS struct<key varchar, value varchar> LANGUAGE python AS key_value; CREATE FUNCTION dot_vect(real[], real[]) RETURNS real LANGUAGE python AS dot_vect;\",\"Run the project.\",\"zillabase start\",\"Connect to the database with PSQL.\",\"psql -U root -d dev -h localhost -p 4567\",\"Info\",\"If you don't have psql installed, install it with the following commands:\",\"Debian:\",\"sudo apt-get install -y postgresql-client\",\"MacOS:\",\"brew install libpq\",\"Run a query.\",\"select gcd(12, 4); select key_value('KEY=VALUE'); select dot_vect('{1.0, 2.0}', '{3.0, 4.0}');\",\"Stop the project.\",\"zillabase stop\",\"Info\",\"Refer to this repository for a more complete UDF Python example.\"]},\"129\":{\"h\":\"User Defined Function (UDF)\",\"t\":[\"Zillabase supports SQL functions, embedded functions (functions that are defined in SQL), and external user-defined functions (UDF) to accommodate business logic that cannot be covered with regular SQL. Currently, we support embedded functions written in Javascript, Python, and Rust and external user-defined functions written in Java and Python.\",\"In general, here is the flow for using user-defined functions:\",\"Define the function implementation in zillabase/functions/python or zillabase/functions/java (for external UDF).\",\"Declare the function definition in a migration file.\",\"Call the function in SQL statement the same way as you would call functions in SQL.\"]},\"130\":{\"h\":\"Managing Bucket\",\"t\":[\"A bucket is an equivalent of a folder. It is a logical grouping that can hold a collection of objects. The following actions are supported for managing buckets in Zillabase:\"]},\"131\":{\"h\":\"List All Buckets\",\"t\":[\"To list all available buckets, call the GET /storage/buckets endpoint. If it succeeds, it will return an array of bucket names.\",\"curl http://localhost:7184/v1/storage/buckets # response # [\\\"bucket-1\\\", \\\"bucket-2\\\"]\"]},\"132\":{\"h\":\"Create a Bucket\",\"t\":[\"To create a bucket, call the POST /storage/buckets/{bucket-name} endpoint. If it succeeds, it will return a 204 response code.\",\"curl http://localhost:7184/v1/storage/buckets/{bucket-name} \\\\ --request POST\",\"Info\",\"Replace the {bucket-name} with the name of the bucket you want to create.\"]},\"133\":{\"h\":\"Delete a Bucket\",\"t\":[\"To delete a bucket, call the POST /storage/buckets/{bucket-name} endpoint. If it succeeds, it will return a 204 response code.\",\"curl http://localhost:7184/v1/storage/buckets/{bucket-name} \\\\ --request DELETE\",\"Info\",\"Replace the {bucket-name} with the name of the bucket you want to delete.\"]},\"134\":{\"h\":\"Storage in Zillabase\",\"t\":[\"Zillabase provides an endpoint for uploading and managing files through an object storage system. This system is structured into buckets, which act as containers for organizing and storing data. Each bucket is a logical grouping that can hold a collection of objects representing a file or a piece of data. These objects are uniquely identified within their respective buckets by a key, which serves as an identifier similar to a filename.\",\"Currently, Zillabase's object storage is implemented by utilizing Docker volume. Zillabase provides UI functionality to manage storage within the Zillabase Admin dashboard. However, the API endpoint is also available. The Zillabase Admin server manages the API for storage feature. By default, it is served under the following url:\",\"http://localhost:7184/v1\"]},\"135\":{\"h\":\"Managing Object\",\"t\":[\"A key uniquely identifies an object. If a bucket is equivalent to a folder, then an object is equivalent to a file. The following actions are supported for managing objects in Zillabase:\",\"Info\",\"The object endpoint requires {bucket-name} and {file-name} values in the request path.\",\"Replace the {bucket-name} with the name of the bucket you want to refer to.\",\"Replace the {file-name} with the name of the object you wish to refer to.\"]},\"136\":{\"h\":\"List All Objects in a Bucket\",\"t\":[\"To list all objects in a bucket, call the GET /storage/buckets/{bucket-name} endpoint. If it succeeds, it will return an array of object metadata.\",\"curl http://localhost:7184/v1/storage/objects/{bucket-name} # response # [ {\\\"name\\\": \\\"example.jpg\\\", \\\"type\\\": \\\"file\\\" }]\"]},\"137\":{\"h\":\"Retrieve an Object\",\"t\":[\"Call the GET /storage/buckets/{bucket-name}/{file-name} endpoint to retrieve an object. If it succeeds, it will return the object. The response type header will depend on the file type, and the response body will return the binary contents of the object.\",\"curl http://localhost:7184/v1/storage/objects/{bucket-name}/{file-name}\"]},\"138\":{\"h\":\"Create an Object\",\"t\":[\"To create an object, call the POST /storage/buckets/{bucket-name}/{file-name} endpoint. If it succeeds, it will return a 204 response status code.\",\"FILE_PATH=\\\"/path/to/your/file\\\" curl -X POST \\\\ -H \\\"Content-Type: $(file -b --mime-type $FILE_PATH)\\\" \\\\ --data-binary \\\"@$FILE_PATH\\\" \\\\ http://localhost:7184/v1/storage/objects/{bucket-name}/{file-name}\",\"Info\",\"Replace the /path/to/your/file with the actual path of the file that you want to upload.\"]},\"139\":{\"h\":\"Update an Object\",\"t\":[\"To update an object, call the PUT /storage/buckets/{bucket-name}/{file-name} endpoint. If it succeeds, it will return a 200 response status code.\",\"FILE_PATH=\\\"/path/to/your/file\\\" curl -X PUT \\\\ -H \\\"Content-Type: $(file -b --mime-type $FILE_PATH)\\\" \\\\ -H \\\"etag: OBJECT_ETAG\\\" \\\\ --data-binary \\\"@$FILE_PATH\\\" \\\\ http://localhost:7184/v1/storage/objects/{bucket-name}/{file-name}\",\"Info\",\"Replace the /path/to/your/file with the actual path of the file that you want to upload.\",\"An etag header is required. This value is a unique identifier (usually a hash) for the current state or version of the object in the bucket. It is used to verify whether the object has been modified since the client last retrieved it.\"]},\"140\":{\"h\":\"Delete an Object\",\"t\":[\"Call the DELETE /storage/buckets/{bucket-name}/{file-name} endpoint to delete an object. If it succeeds, it will return a 204 response status code.\",\"curl http://localhost:7184/v1/storage/objects/{bucket-name}/{file-name} \\\\ --request DELETE\"]},\"141\":{\"h\":\"Defining Stream\",\"t\":[\"Zillabase simplifies the management of database migrations for various use cases, including streams. With its CLI, users can quickly create an empty migration file, which can be customized to define streams with PostgreSQL-like syntax. This stream is specific to Zillabase and does not relate to RisingWave syntax. A stream tracks all of the application's user commands. It creates a topic and produces CRUD APIs to produce and fetch the data. The stream can be consumed by other data models, including tables, views, and materialized views.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_stream # output # Created migration 000001__create_stream.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE STREAM streampay_commands( type VARCHAR, user_id VARCHAR, request_id VARCHAR, amount DOUBLE PRECISION, notes VARCHAR, zilla_correlation_id VARCHAR, zilla_identity VARCHAR, zilla_timestamp TIMESTAMP );\"]},\"142\":{\"h\":\"Defining Table\",\"t\":[\"Zillabase offers commands to streamline managing database migrations, which define or modify the database schema. Using the Zillabase CLI, users can generate an empty SQL-based migration file. This file can then be customized to include table definitions. Defining a table will create a Kafka topic with the same name, and RisingWave will provide an interface compatible with PostgreSQL-like syntax.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"A table defined will create a new topic, and CRUD APIs will be used to insert and query the data.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_table # output # Created migration 000001__create_table.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE TABLE streampay_users( id VARCHAR, name VARCHAR, username VARCHAR, initial_balance DOUBLE PRECISION, PRIMARY KEY (id) );\"]},\"143\":{\"h\":\"Initializing Database with Seeder\",\"t\":[\"Zillabase also provides a seed.sql file for every project created that will be run during project initialization. This file will be run after migration and can be used to seed or insert some initial data. You can perform some insert query from seed.sql file to initialize the database with initial data.\",\"-- insert some initial user data INSERT INTO streampay_users (id, name, username, initial_balance) VALUES ('allen', 'Allen Doe', 'allen', 10000); INSERT INTO streampay_users (id, name, username, initial_balance) VALUES ('bertollo', 'Bertollo Doe', 'bertollo', 10000); INSERT INTO streampay_users (id, name, username, initial_balance) VALUES ('candice', 'Candice Doe', 'candice', 10000);\"]},\"144\":{\"h\":\"Defining Materialized View\",\"t\":[\"Zillabase makes managing database migrations straightforward, including defining materialized views. The CLI allows users to generate a migration file that can be modified to include PostgreSQL-like syntax. A materialized view can consume streams, perform some transformation, and materialize it. The materialized view is always updated when new data is inserted into the stream.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_mv # output # Created migration 000001__create_mv.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE MATERIALIZED VIEW IF NOT EXISTS streampay_replies AS SELECT '400' AS status, encode(zilla_correlation_id, 'escape') AS correlation_id from streampay_commands where type NOT IN ('SendPayment', 'RequestPayment', 'RejectRequest') UNION SELECT '200' AS status, encode(zilla_correlation_id, 'escape') AS correlation_id from streampay_commands where type IN ('SendPayment', 'RequestPayment', 'RejectRequest');\"]},\"145\":{\"h\":\"Defining View\",\"t\":[\"Zillabase facilitates database migrations through an intuitive set of CLI commands. These migrations allow users to define or modify views within the database schema. By generating an empty migration file with Zillabase CLI, users can write PostgreSQL-compatible syntax to specify definitions of their views. RisingWave non-materialized views behave the same as regular relational database views, with data source support from sources, tables, views, or indexes.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"A view can consume a stream or query from another table. Unlike the materialized view, it only provides a view that depends on the defined query and does not materialize the data. Best for cases where you want to save a view query but don't want the result to be materialized.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_view # output # Created migration 000001__create_view.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE VIEW user_transactions AS SELECT encode(zilla_identity, 'escape') AS user_id, -amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment' UNION ALL SELECT user_id AS user_id, amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment';\"]},\"146\":{\"h\":\"Endpoint Calls Example\",\"t\":[\"This example will go through all of the available endpoints for an entity using the Petstore project example. The project example provides the following endpoints:\",\"Info\",\"Not every entity is listed as this section only provides an example of an entity.\",\"Protocol\",\"Method/ Action\",\"Endpoint/ Channel\",\"HTTP\",\"GET\",\"/petstore_pets\",\"HTTP\",\"GET\",\"/petstore_pets/\",\"HTTP\",\"PUT\",\"/petstore_pets/\",\"HTTP\",\"POST\",\"/petstore_pets\",\"HTTP\",\"GET\",\"/petstore_pets-stream\",\"Kafka\",\"Receive\",\"dev.petstore_pets\",\"Kafka\",\"Send\",\"dev.petstore_pets\",\"According to the specifications, the HTTP server is on the localhost:8080 address, and the Kafka cluster is on the localhost:9092 address. Let's try those endpoints.\"]},\"147\":{\"h\":\"Fetch all pets\",\"t\":[\"curl -X GET http://localhost:8080/petstore_pets # output # [{\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Beagle\\\"},{\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"German Shepherd\\\"}]\"]},\"148\":{\"h\":\"Update a pet\",\"t\":[\"curl -X PUT http://localhost:8080/petstore_pets/234 -H \\\"Content-Type: application/json\\\" \\\\ --data '{\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Tippler\\\"}' # prints nothing\"]},\"149\":{\"h\":\"Get the previously updated data\",\"t\":[\"curl -X GET http://localhost:8080/petstore_pets/234 # output # {\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Tippler\\\"}\"]},\"150\":{\"h\":\"Consume the entity streams with SSE\",\"t\":[\"The command won't automatically exit as it listens to any new incoming events. Keep it open.\",\"curl -N --http2 http://localhost:8080/petstore_pets-stream # output # id:AQIABA== # data:{\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"German Shepherd\\\"} # # id:AQIACA== # data:{\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Tippler\\\"}\"]},\"151\":{\"h\":\"Consume the Kafka topic\",\"t\":[\"The command won't automatically exit as it listens to any new incoming events. Keep it open.\",\"docker exec zillabase_kafka /opt/bitnami/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic dev.petstore_pets # prints nothing as there are no new incoming data\"]},\"152\":{\"h\":\"Create new pet data\",\"t\":[\"curl -X POST http://localhost:8080/petstore_pets -H \\\"Content-Type: application/json\\\" \\\\ --data '{\\\"id\\\": \\\"345\\\", \\\"breed\\\": \\\"koi\\\"}' # prints nothing\"]},\"153\":{\"h\":\"Check the Stream Consumer\",\"t\":[\"Go back to the SSE consumer and Kafka consumer. You'll see that these consumers receive a new event that prints out the added data.\",\"# SSE consumer # New stream data received # id:AQIACg== # data:{\\\"id\\\": \\\"345\\\", \\\"breed\\\": \\\"koi\\\"} # Kafka consumer # New stream data received # 345 # koi\"]},\"154\":{\"h\":\"Generated AsyncAPI Specifications\",\"t\":[\"Zillabase provides a generated HTTP AsyncAPI and Kafka AsyncAPI for accessing the Zillabase endpoints. This specification is different from the OpenAPI specification.\",\"Info\",\"Read this article to learn more about AsyncAPI.\"]},\"155\":{\"h\":\"Obtaining the AsyncAPI Specifications\",\"t\":[\"Run either the Petstore or Streampay project example. On the project directory, run the following command to list the available AsyncAPI specifications.\",\"zillabase asyncapi list # outputs # Registered AsyncAPI Spec: # http-asyncapi # kafka-asyncapi\",\"By default, Zillabase generates two kinds of AsyncAPI specifications: HTTP AsyncAPI specification and Kafka AsyncAPI specification. To export the AsyncAPI specification, run the following commands.\",\"# this command extract the HTTP AsyncAPI specification to http-spec.yaml file zillabase asyncapi show http-asyncapi > http-spec.yaml # this command extract the Kafka AsyncAPI specification to kafka-spec.yaml file zillabase asyncapi show kafka-asyncapi > kafka-spec.yaml\",\"To view the generated AsyncAPI specification, you can use AsyncAPI Studio.\"]},\"156\":{\"h\":\"HTTP Specification\",\"t\":[\"The HTTP AsyncAPI specification provides information about the HTTP server and information about its available endpoints. For every entity defined, Zillabase serves the following HTTP endpoints:\",\"Method\",\"Endpoint\",\"Description\",\"GET\",\"/<entity>\",\"Fetch all entity data\",\"POST\",\"/<entity>\",\"Insert an entity data\",\"GET\",\"/<entity>/{id}\",\"Get entity data by id\",\"PUT\",\"/<entity>/{id}\",\"Update an entity data by id\",\"GET\",\"/<entity>-stream\",\"Stream entity data changes\",\"GET\",\"/<entity>-stream-identity\",\"Stream entity data changes\",\"The /<entity> and /<entity>/{id} endpoints are regular REST API endpoints. On the other hand, /<entity>-stream and /<entity>-stream-identity endpoints is an HTTP endpoint that serves server-sent events (SSE). You can subscribe/ consume any data changes that happened to the <entity> data with the stream endpoint.\",\"Refer to the message schema defined on the operation and channels to learn the schema for those endpoints. Every HTTP endpoint supports various input and output payload formats, such as JSON, Avro, and Protobuf. To adjust the payload formats, define the Content-Type and Accept header during the HTTP request.\"]},\"157\":{\"h\":\"Kafka Specification\",\"t\":[\"The Kafka AsyncAPI specification provides information about the Kafka cluster and schema definition for Kafka based on our data model and stream. It defines a channel for every entity and supports publish and subscribe operations for that channel.\"]},\"158\":{\"h\":\"Zilla Service Configuration\",\"t\":[\"Zillabase provides commands to manage the Zilla service configurations. These commands allow users to update the available config, upload the required artifacts (like certificates), and review the running configuration. When a configuration change occurs, the Zilla service can detect and redeploy the updated configuration.\"]},\"159\":{\"h\":\"Managing Zilla Configuration\"},\"160\":{\"h\":\"Providing Your Own configuration\",\"t\":[\"You can provide your own zilla.yaml configuration by creating a config file under zillabase/zilla directory. This way, during zillabase start command it won't automatically generate the Zilla configuration but will use the configuration you provide.\"]},\"161\":{\"h\":\"Fetch Zilla configuration\",\"t\":[\"Run the following command to fetch the existing Zilla configuration. This commands save the existing Zilla configuration file to zilla.yaml file.\",\"zillabase config list --id zilla.yaml > ./zilla.yaml\"]},\"162\":{\"h\":\"Modifying Zilla configuration\",\"t\":[\"Run the following command to modify the Zilla configuration generated by Zillabase.\",\"Open the file and modify the configuration.\",\"Info\",\"Refer to this article for a complete Zilla configuration reference.\",\"After modifying the configuration, upload the configuration file using the following command.\",\"zillabase config add -c ./zilla.yaml # output # Config Server is populated with ./zilla.yaml\",\"Info\",\"By default, the command will use the filename as the configuration id. To use an id other than its name, you can provide an additional --id parameter, for example:\",\"zillabase config add -c ./zilla.yaml --id zilla.yaml\",\"The Zillabase admin will detect the configuration changes and redeploy the updated configuration.\",\"Warning\",\"While it's possible, modifying this configuration is rarely required by the user.\"]},\"163\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"164\":{\"h\":\"Api\"},\"165\":{\"h\":\"Cli\"},\"166\":{\"h\":\"Examples\"},\"167\":{\"h\":\"Getting Started\"},\"168\":{\"h\":\"Support\"},\"169\":{\"h\":\"Authentication\"},\"170\":{\"h\":\"Products\"},\"171\":{\"h\":\"Function\"},\"172\":{\"h\":\"Storage\"},\"173\":{\"h\":\"Stream\"},\"174\":{\"h\":\"Table\"},\"175\":{\"h\":\"View\"},\"176\":{\"h\":\"Zilla\"}},\"dirtCount\":0,\"index\":[[\"9092\",{\"1\":{\"146\":1,\"151\":1}}],[\"7184\",{\"1\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"+\",{\"1\":{\"120\":1}}],[\"=\",{\"1\":{\"119\":2,\"120\":4,\"122\":2,\"125\":7,\"128\":4,\"145\":2}}],[\"====\",{\"1\":{\"83\":4}}],[\"8180\",{\"1\":{\"116\":1}}],[\"8080\",{\"1\":{\"71\":1,\"72\":1,\"100\":1,\"102\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"152\":1}}],[\"🆘\",{\"0\":{\"108\":1}}],[\"💡\",{\"0\":{\"107\":1}}],[\"💬\",{\"0\":{\"106\":1}}],[\"→\",{\"1\":{\"106\":1,\"107\":1,\"108\":1}}],[\"5\",{\"0\":{\"104\":1},\"1\":{\"125\":1}}],[\"404\",{\"1\":{\"163\":1}}],[\"400\",{\"1\":{\"144\":1}}],[\"409\",{\"1\":{\"110\":1}}],[\"4567\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"4\",{\"0\":{\"97\":1},\"1\":{\"120\":2,\"122\":1,\"125\":1,\"128\":2}}],[\"234\",{\"1\":{\"147\":1,\"148\":2,\"149\":2,\"150\":1}}],[\"2\",{\"0\":{\"94\":1,\"102\":1},\"1\":{\"96\":1,\"110\":1,\"117\":1,\"120\":1,\"125\":2,\"128\":1,\"131\":1}}],[\"20\",{\"1\":{\"92\":1}}],[\"200\",{\"1\":{\"72\":1,\"103\":1,\"139\":1,\"144\":1}}],[\"204\",{\"1\":{\"71\":1,\"101\":1,\"132\":1,\"133\":1,\"138\":1,\"140\":1}}],[\"20+\",{\"1\":{\"65\":1,\"75\":1,\"110\":1}}],[\"quickly\",{\"1\":{\"94\":1,\"141\":1}}],[\"quickstart\",{\"0\":{\"91\":1},\"1\":{\"94\":2}}],[\"questions\",{\"0\":{\"109\":1},\"1\":{\"107\":1}}],[\"question\",{\"1\":{\"83\":2}}],[\"query\",{\"1\":{\"83\":3,\"109\":1,\"119\":1,\"120\":1,\"122\":1,\"125\":1,\"128\":1,\"142\":1,\"143\":1,\"145\":3}}],[\"quasar\",{\"1\":{\"77\":5,\"84\":1}}],[\"000001\",{\"1\":{\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"0\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1,\"117\":1,\"120\":2,\"122\":1,\"125\":3,\"128\":5}}],[\">>\",{\"1\":{\"78\":1}}],[\">\",{\"1\":{\"71\":4,\"72\":1,\"94\":2,\"101\":3,\"103\":1,\"125\":1,\"155\":2,\"161\":1}}],[\"jpg\",{\"1\":{\"136\":1}}],[\"jdk\",{\"1\":{\"125\":1}}],[\"js\",{\"1\":{\"112\":1}}],[\"json\",{\"1\":{\"71\":2,\"72\":1,\"83\":2,\"100\":1,\"101\":1,\"103\":1,\"148\":1,\"152\":1,\"156\":1}}],[\"join\",{\"1\":{\"106\":2}}],[\"javascript\",{\"1\":{\"120\":1,\"129\":1}}],[\"java\",{\"0\":{\"123\":1},\"1\":{\"65\":1,\"75\":1,\"92\":1,\"110\":3,\"120\":1,\"123\":4,\"124\":1,\"125\":16,\"129\":2}}],[\"10000\",{\"1\":{\"143\":3}}],[\"101\",{\"1\":{\"100\":1,\"103\":1}}],[\"1<\",{\"1\":{\"125\":1}}],[\"11\",{\"1\":{\"125\":1}}],[\"12\",{\"1\":{\"120\":2,\"122\":1,\"125\":1,\"128\":1}}],[\"123\",{\"1\":{\"6\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"71\":1,\"72\":1,\"80\":1,\"147\":1,\"150\":1}}],[\"1\",{\"0\":{\"93\":1,\"100\":1},\"1\":{\"71\":5,\"72\":6,\"100\":1,\"101\":4,\"102\":1,\"103\":5,\"120\":1,\"125\":1,\"128\":2,\"131\":1}}],[\"util\",{\"1\":{\"125\":3}}],[\"utilizes\",{\"1\":{\"111\":1}}],[\"utilizing\",{\"1\":{\"97\":1,\"134\":1}}],[\"u\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"under\",{\"1\":{\"134\":1,\"160\":1}}],[\"unlike\",{\"1\":{\"121\":1,\"145\":1}}],[\"union\",{\"1\":{\"119\":1,\"144\":1,\"145\":1}}],[\"uniquely\",{\"1\":{\"134\":1,\"135\":1}}],[\"unique\",{\"1\":{\"114\":1,\"117\":1,\"139\":1}}],[\"urls\",{\"1\":{\"114\":1}}],[\"url\",{\"1\":{\"114\":1,\"116\":1,\"134\":1}}],[\"ui\",{\"1\":{\"77\":1,\"134\":1}}],[\"udfexample\",{\"1\":{\"125\":2}}],[\"udf<\",{\"1\":{\"125\":1}}],[\"udfs\",{\"1\":{\"123\":1,\"126\":1}}],[\"udf\",{\"0\":{\"121\":1,\"123\":1,\"126\":1,\"129\":1},\"1\":{\"77\":1,\"109\":1,\"120\":11,\"121\":4,\"122\":3,\"123\":3,\"124\":2,\"125\":4,\"126\":2,\"127\":2,\"128\":13,\"129\":2}}],[\"upload\",{\"1\":{\"138\":1,\"139\":1,\"158\":1,\"162\":1}}],[\"uploading\",{\"1\":{\"134\":1}}],[\"updated\",{\"0\":{\"149\":1},\"1\":{\"109\":1,\"144\":1,\"158\":1,\"162\":1}}],[\"update\",{\"0\":{\"139\":1,\"148\":1},\"1\":{\"69\":1,\"78\":1,\"98\":1,\"109\":1,\"139\":1,\"156\":1,\"158\":1}}],[\"up\",{\"0\":{\"67\":1,\"77\":1},\"1\":{\"77\":1,\"109\":3,\"112\":3,\"114\":1,\"118\":1}}],[\"usually\",{\"1\":{\"109\":1,\"139\":1}}],[\"uses\",{\"1\":{\"83\":1}}],[\"use\",{\"0\":{\"97\":1},\"1\":{\"77\":1,\"83\":1,\"93\":1,\"94\":1,\"100\":1,\"104\":1,\"109\":1,\"110\":1,\"112\":1,\"118\":1,\"119\":1,\"123\":1,\"126\":1,\"141\":1,\"155\":1,\"160\":1,\"162\":2}}],[\"username\",{\"1\":{\"80\":1,\"115\":2,\"116\":1,\"142\":1,\"143\":3}}],[\"users\",{\"1\":{\"78\":9,\"80\":3,\"81\":2,\"105\":1,\"109\":1,\"114\":2,\"115\":2,\"120\":1,\"141\":1,\"142\":2,\"143\":3,\"144\":1,\"145\":2,\"158\":1}}],[\"user\",{\"0\":{\"115\":1,\"119\":1,\"129\":1},\"1\":{\"74\":1,\"78\":4,\"81\":3,\"82\":2,\"85\":1,\"109\":6,\"111\":1,\"112\":1,\"114\":2,\"115\":6,\"119\":6,\"120\":3,\"129\":3,\"141\":2,\"143\":1,\"145\":4,\"162\":1}}],[\"used\",{\"1\":{\"15\":1,\"83\":2,\"117\":1,\"139\":1,\"142\":1,\"143\":1}}],[\"using\",{\"0\":{\"68\":1,\"79\":1},\"1\":{\"69\":1,\"80\":1,\"83\":1,\"94\":2,\"95\":1,\"109\":1,\"120\":1,\"129\":1,\"142\":1,\"146\":1,\"162\":1}}],[\"usage\",{\"0\":{\"2\":1,\"5\":1,\"8\":1,\"11\":1,\"14\":1,\"17\":1,\"20\":1,\"23\":1,\"26\":1,\"29\":1,\"32\":1,\"35\":1,\"38\":1,\"41\":1,\"44\":1,\"47\":1,\"50\":1,\"53\":1,\"56\":1,\"59\":1,\"62\":1}}],[\"gcd2\",{\"1\":{\"120\":2}}],[\"gcd\",{\"1\":{\"120\":5,\"122\":3,\"125\":4,\"128\":4}}],[\"galleon\",{\"1\":{\"117\":1}}],[\"grouping\",{\"1\":{\"130\":1,\"134\":1}}],[\"groupid>\",{\"1\":{\"125\":1}}],[\"group\",{\"1\":{\"110\":1}}],[\"greg\",{\"1\":{\"83\":1}}],[\"guide\",{\"1\":{\"91\":1,\"111\":1,\"117\":2}}],[\"g\",{\"1\":{\"77\":1}}],[\"globally\",{\"1\":{\"77\":1}}],[\"german\",{\"1\":{\"147\":1,\"150\":1}}],[\"generic\",{\"1\":{\"117\":1}}],[\"generating\",{\"1\":{\"145\":1}}],[\"generate\",{\"1\":{\"142\":1,\"144\":1,\"160\":1}}],[\"generates\",{\"1\":{\"91\":1,\"155\":1}}],[\"generated\",{\"0\":{\"97\":1,\"154\":1},\"1\":{\"64\":1,\"74\":1,\"78\":3,\"109\":2,\"154\":1,\"155\":1,\"162\":1}}],[\"general\",{\"1\":{\"117\":1,\"129\":1}}],[\"getting\",{\"0\":{\"86\":1,\"167\":1},\"1\":{\"91\":1}}],[\"get\",{\"0\":{\"149\":1},\"1\":{\"69\":2,\"72\":1,\"78\":8,\"98\":2,\"103\":1,\"106\":1,\"109\":1,\"117\":1,\"122\":1,\"125\":1,\"128\":1,\"131\":1,\"136\":1,\"137\":1,\"146\":3,\"147\":1,\"149\":1,\"156\":5}}],[\"google\",{\"1\":{\"117\":3,\"118\":5}}],[\"got\",{\"1\":{\"110\":2}}],[\"go\",{\"1\":{\"67\":1,\"77\":1,\"125\":1,\"146\":1,\"153\":1}}],[\"git\",{\"1\":{\"67\":2,\"77\":2,\"94\":2}}],[\"github\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":1,\"94\":1,\"110\":1,\"117\":3}}],[\"githubusercontent\",{\"1\":{\"66\":1,\"76\":1}}],[\"$file\",{\"1\":{\"138\":2,\"139\":2}}],[\"$2$$\",{\"1\":{\"120\":1}}],[\"$2800\",{\"1\":{\"83\":1}}],[\"$1\",{\"1\":{\"120\":1}}],[\"$$select\",{\"1\":{\"120\":1}}],[\"$$\",{\"1\":{\"120\":2,\"122\":2}}],[\"$4300\",{\"1\":{\"83\":1}}],[\"$3900\",{\"1\":{\"83\":1}}],[\"$3200\",{\"1\":{\"83\":1}}],[\"$3400\",{\"1\":{\"83\":3}}],[\"$\",{\"1\":{\"66\":1,\"76\":1,\"114\":1,\"138\":1,\"139\":1}}],[\"bootstrap\",{\"1\":{\"151\":1}}],[\"body\",{\"1\":{\"137\":1}}],[\"both\",{\"1\":{\"74\":1,\"85\":1,\"91\":1}}],[\"b\",{\"1\":{\"120\":6,\"122\":6,\"125\":5,\"128\":2,\"138\":1,\"139\":1}}],[\"but\",{\"1\":{\"145\":1,\"160\":1}}],[\"buckets\",{\"0\":{\"131\":1},\"1\":{\"130\":1,\"131\":3,\"132\":2,\"133\":2,\"134\":2,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"bucket\",{\"0\":{\"130\":1,\"132\":1,\"133\":1,\"136\":1},\"1\":{\"130\":1,\"131\":3,\"132\":5,\"133\":5,\"134\":1,\"135\":4,\"136\":3,\"137\":2,\"138\":2,\"139\":3,\"140\":2}}],[\"business\",{\"1\":{\"120\":1,\"129\":1}}],[\"build\",{\"1\":{\"85\":1}}],[\"bitnami\",{\"1\":{\"96\":2,\"151\":1}}],[\"binary\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"bin\",{\"1\":{\"66\":1,\"76\":1,\"110\":1,\"151\":1}}],[\"browser\",{\"1\":{\"80\":1}}],[\"breed\",{\"1\":{\"71\":1,\"72\":1,\"147\":2,\"148\":1,\"149\":1,\"150\":2,\"152\":1,\"153\":1}}],[\"brew\",{\"1\":{\"66\":2,\"76\":2,\"93\":2,\"122\":1,\"125\":1,\"128\":1}}],[\"back\",{\"1\":{\"153\":1}}],[\"backed\",{\"1\":{\"120\":1}}],[\"backend\",{\"1\":{\"85\":1}}],[\"balance\",{\"1\":{\"78\":1,\"81\":1,\"142\":1,\"143\":3}}],[\"balances\",{\"1\":{\"78\":2}}],[\"base\",{\"1\":{\"114\":1}}],[\"based\",{\"1\":{\"64\":2,\"74\":2,\"83\":1,\"91\":1,\"142\":1,\"157\":1}}],[\"bash\",{\"1\":{\"66\":1,\"76\":1}}],[\"by\",{\"1\":{\"69\":3,\"78\":4,\"83\":1,\"91\":1,\"98\":3,\"102\":1,\"109\":1,\"110\":3,\"112\":2,\"114\":1,\"120\":1,\"123\":1,\"124\":1,\"126\":1,\"127\":1,\"134\":3,\"141\":1,\"145\":1,\"155\":1,\"156\":2,\"160\":1,\"162\":3}}],[\"beagle\",{\"1\":{\"147\":1}}],[\"bearer\",{\"1\":{\"109\":1,\"112\":1}}],[\"behave\",{\"1\":{\"145\":1}}],[\"because\",{\"1\":{\"121\":1}}],[\"best\",{\"1\":{\"106\":1,\"145\":1}}],[\"been\",{\"1\":{\"83\":1,\"139\":1}}],[\"below\",{\"1\":{\"83\":1}}],[\"bertollo\",{\"1\":{\"83\":6,\"143\":3}}],[\"between\",{\"1\":{\"80\":1,\"83\":1,\"109\":2}}],[\"before\",{\"1\":{\"65\":1,\"75\":1,\"83\":1,\"109\":1,\"117\":1,\"125\":1}}],[\"be\",{\"1\":{\"39\":1,\"82\":2,\"83\":1,\"114\":2,\"115\":2,\"117\":2,\"120\":1,\"123\":2,\"126\":2,\"129\":1,\"141\":2,\"142\":2,\"143\":3,\"144\":1,\"145\":1}}],[\"xxx\",{\"1\":{\"110\":1}}],[\"x\",{\"1\":{\"64\":4,\"71\":1,\"74\":4,\"91\":2,\"100\":1,\"117\":2,\"120\":4,\"125\":1,\"128\":4,\"138\":1,\"139\":1,\"147\":1,\"148\":1,\"149\":1,\"152\":1}}],[\"345\",{\"1\":{\"152\":1,\"153\":2}}],[\"33\",{\"1\":{\"72\":1,\"103\":1}}],[\"35\",{\"1\":{\"71\":1}}],[\"3\",{\"0\":{\"95\":1},\"1\":{\"64\":4,\"74\":4,\"91\":2,\"96\":2,\"125\":1,\"128\":2}}],[\"kinds\",{\"1\":{\"155\":1}}],[\"kit\",{\"1\":{\"125\":1}}],[\"koi\",{\"1\":{\"152\":1,\"153\":2}}],[\"keep\",{\"1\":{\"150\":1,\"151\":1}}],[\"key=value\",{\"1\":{\"128\":1}}],[\"key=<your\",{\"1\":{\"77\":1}}],[\"key>\",{\"1\":{\"77\":1}}],[\"key\",{\"1\":{\"69\":3,\"71\":1,\"75\":1,\"77\":1,\"78\":3,\"98\":3,\"100\":1,\"102\":1,\"114\":2,\"115\":1,\"117\":1,\"128\":7,\"134\":1,\"135\":1,\"142\":1}}],[\"keycloak\",{\"1\":{\"51\":1,\"54\":1,\"57\":1,\"80\":2,\"96\":1,\"109\":3,\"110\":1,\"111\":3,\"112\":7,\"114\":12,\"115\":1,\"116\":1,\"117\":3}}],[\"k\",{\"1\":{\"71\":1,\"72\":1,\"100\":1,\"102\":1}}],[\"kafka\",{\"0\":{\"151\":1,\"157\":1},\"1\":{\"64\":4,\"68\":2,\"74\":3,\"78\":2,\"91\":2,\"96\":3,\"97\":3,\"109\":1,\"110\":1,\"142\":1,\"146\":3,\"151\":3,\"153\":2,\"154\":1,\"155\":6,\"157\":3}}],[\"written\",{\"1\":{\"120\":2,\"123\":1,\"126\":1,\"129\":2}}],[\"write\",{\"1\":{\"120\":1,\"145\":1}}],[\"would\",{\"1\":{\"129\":1}}],[\"won\",{\"1\":{\"112\":1,\"150\":1,\"151\":1,\"160\":1}}],[\"word\",{\"1\":{\"125\":2}}],[\"works\",{\"0\":{\"112\":1}}],[\"workloads\",{\"1\":{\"85\":1}}],[\"world\",{\"1\":{\"100\":1,\"103\":1}}],[\"warning\",{\"1\":{\"162\":1}}],[\"way\",{\"1\":{\"129\":1,\"160\":1}}],[\"want\",{\"1\":{\"126\":2,\"132\":1,\"133\":1,\"135\":1,\"138\":1,\"139\":1,\"145\":2}}],[\"walk\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"was\",{\"1\":{\"109\":2,\"110\":1,\"111\":1,\"115\":1,\"118\":1}}],[\"wait\",{\"1\":{\"67\":1,\"77\":1,\"82\":1}}],[\"which\",{\"1\":{\"110\":1,\"114\":1,\"117\":1,\"120\":1,\"134\":2,\"141\":2,\"142\":2,\"144\":1,\"145\":1}}],[\"while\",{\"1\":{\"109\":1,\"120\":2,\"122\":1,\"125\":1,\"128\":1,\"162\":1}}],[\"what\",{\"0\":{\"85\":1},\"1\":{\"109\":2}}],[\"whether\",{\"1\":{\"139\":1}}],[\"when\",{\"1\":{\"83\":1,\"110\":2,\"144\":1,\"158\":1}}],[\"where\",{\"1\":{\"64\":1,\"119\":2,\"144\":2,\"145\":3}}],[\"wish\",{\"1\":{\"135\":1}}],[\"will\",{\"1\":{\"81\":2,\"82\":2,\"83\":1,\"109\":1,\"112\":1,\"114\":2,\"115\":2,\"117\":1,\"122\":1,\"123\":1,\"125\":1,\"128\":1,\"131\":1,\"132\":1,\"133\":1,\"136\":1,\"137\":3,\"138\":1,\"139\":1,\"140\":1,\"142\":4,\"143\":2,\"146\":1,\"160\":1,\"162\":2}}],[\"with\",{\"0\":{\"83\":1,\"143\":1,\"150\":1},\"1\":{\"31\":1,\"66\":1,\"68\":1,\"75\":1,\"76\":1,\"77\":3,\"78\":1,\"80\":1,\"82\":1,\"83\":1,\"91\":1,\"96\":1,\"106\":1,\"109\":4,\"110\":1,\"111\":1,\"112\":1,\"114\":1,\"117\":1,\"120\":4,\"122\":2,\"125\":3,\"128\":4,\"129\":1,\"132\":1,\"133\":1,\"135\":2,\"138\":1,\"139\":1,\"141\":4,\"142\":4,\"143\":1,\"144\":2,\"145\":4,\"156\":1,\"162\":1}}],[\"within\",{\"1\":{\"28\":1,\"43\":1,\"120\":1,\"134\":2,\"145\":1}}],[\"we\",{\"1\":{\"65\":1,\"75\":1,\"77\":1,\"83\":1,\"105\":1,\"119\":1,\"120\":1,\"123\":1,\"125\":1,\"126\":1,\"129\":1}}],[\"rust\",{\"1\":{\"120\":1,\"129\":1}}],[\"running\",{\"1\":{\"78\":1,\"110\":5,\"158\":1}}],[\"run\",{\"1\":{\"66\":1,\"73\":1,\"76\":1,\"110\":1,\"121\":1,\"122\":2,\"125\":2,\"128\":2,\"143\":2,\"155\":3,\"161\":1,\"162\":1}}],[\"row\",{\"1\":{\"125\":7}}],[\"root\",{\"1\":{\"114\":1,\"122\":1,\"125\":1,\"128\":1}}],[\"robust\",{\"1\":{\"85\":1,\"120\":1}}],[\"risingwave<\",{\"1\":{\"125\":1}}],[\"risingwave\",{\"1\":{\"96\":1,\"110\":1,\"120\":1,\"121\":1,\"123\":1,\"125\":2,\"141\":1,\"142\":1,\"145\":1}}],[\"risingwavelabs\",{\"1\":{\"96\":1}}],[\"risky\",{\"1\":{\"83\":3}}],[\"risk\",{\"0\":{\"83\":1},\"1\":{\"82\":1,\"83\":4}}],[\"rarely\",{\"1\":{\"162\":1}}],[\"range\",{\"1\":{\"125\":1}}],[\"raises\",{\"1\":{\"83\":1}}],[\"raw\",{\"1\":{\"66\":1,\"76\":1}}],[\"r\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"redeploy\",{\"1\":{\"158\":1,\"162\":1}}],[\"redirect\",{\"1\":{\"114\":1}}],[\"redirects\",{\"1\":{\"114\":1}}],[\"review\",{\"1\":{\"158\":1}}],[\"received\",{\"1\":{\"153\":2}}],[\"receive\",{\"1\":{\"146\":1,\"153\":1}}],[\"recommend\",{\"1\":{\"83\":1}}],[\"record\",{\"0\":{\"71\":1,\"72\":1,\"100\":1,\"102\":1},\"1\":{\"100\":1,\"102\":1}}],[\"retrieved\",{\"1\":{\"139\":1}}],[\"retrieve\",{\"0\":{\"137\":1},\"1\":{\"137\":1}}],[\"returns\",{\"1\":{\"120\":3,\"122\":1,\"125\":3,\"128\":3}}],[\"return\",{\"1\":{\"83\":1,\"120\":2,\"122\":1,\"125\":5,\"126\":1,\"128\":3,\"131\":1,\"132\":1,\"133\":1,\"136\":1,\"137\":2,\"138\":1,\"139\":1,\"140\":1}}],[\"replies\",{\"1\":{\"144\":1}}],[\"replace\",{\"1\":{\"132\":1,\"133\":1,\"135\":2,\"138\":1,\"139\":1}}],[\"representing\",{\"1\":{\"134\":1}}],[\"represents\",{\"1\":{\"114\":1}}],[\"repo\",{\"1\":{\"94\":2}}],[\"repository\",{\"0\":{\"94\":1},\"1\":{\"66\":1,\"67\":2,\"76\":1,\"77\":2,\"125\":1,\"128\":1}}],[\"relational\",{\"1\":{\"145\":1}}],[\"relate\",{\"1\":{\"141\":1}}],[\"related\",{\"1\":{\"110\":1,\"115\":1}}],[\"release\",{\"1\":{\"96\":1}}],[\"regular\",{\"1\":{\"109\":1,\"120\":1,\"129\":1,\"145\":1,\"156\":1}}],[\"registering\",{\"1\":{\"109\":1}}],[\"registered\",{\"1\":{\"96\":2,\"115\":1,\"155\":1}}],[\"registry\",{\"1\":{\"96\":1}}],[\"reference\",{\"1\":{\"117\":1,\"120\":1,\"142\":1,\"144\":1,\"145\":1,\"162\":1}}],[\"refer\",{\"1\":{\"109\":1,\"117\":1,\"120\":1,\"125\":1,\"128\":1,\"135\":2,\"142\":1,\"144\":1,\"145\":1,\"156\":1,\"162\":1}}],[\"re\",{\"1\":{\"105\":1}}],[\"respective\",{\"1\":{\"134\":1}}],[\"response\",{\"1\":{\"109\":3,\"131\":1,\"132\":1,\"133\":1,\"136\":1,\"137\":2,\"138\":1,\"139\":1,\"140\":1}}],[\"respond\",{\"1\":{\"83\":1}}],[\"resource\",{\"1\":{\"114\":1}}],[\"result\",{\"1\":{\"83\":1,\"120\":2,\"128\":5,\"145\":1}}],[\"restful\",{\"1\":{\"85\":1}}],[\"rest\",{\"1\":{\"64\":1,\"74\":1,\"78\":1,\"109\":1,\"156\":1}}],[\"rejectrequest\",{\"1\":{\"144\":2}}],[\"rejected\",{\"1\":{\"82\":1}}],[\"reject\",{\"1\":{\"82\":2}}],[\"real\",{\"1\":{\"85\":2,\"106\":1,\"128\":6}}],[\"realm\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"77\":1,\"80\":1,\"109\":1,\"114\":2,\"115\":2,\"116\":1,\"117\":3,\"118\":3}}],[\"ready\",{\"1\":{\"108\":1}}],[\"read\",{\"1\":{\"78\":1,\"109\":2,\"154\":1}}],[\"rehash\",{\"1\":{\"77\":1}}],[\"requestpayment\",{\"1\":{\"144\":2}}],[\"requesting\",{\"1\":{\"81\":1,\"82\":1}}],[\"request\",{\"1\":{\"78\":3,\"81\":3,\"82\":3,\"83\":1,\"109\":5,\"119\":1,\"132\":1,\"133\":1,\"135\":1,\"140\":1,\"141\":1,\"156\":1}}],[\"requests\",{\"0\":{\"82\":1},\"1\":{\"64\":1,\"78\":7,\"83\":1}}],[\"requires\",{\"1\":{\"135\":1}}],[\"require\",{\"1\":{\"109\":1}}],[\"requirements\",{\"1\":{\"65\":1,\"75\":1,\"125\":1,\"126\":1,\"128\":1}}],[\"required\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"66\":1,\"76\":1,\"109\":1,\"114\":1,\"139\":1,\"158\":1,\"162\":1}}],[\"removed\",{\"1\":{\"82\":1}}],[\"removes\",{\"1\":{\"10\":1,\"25\":1,\"55\":1}}],[\"remove\",{\"0\":{\"10\":1,\"25\":1,\"55\":1},\"1\":{\"3\":1,\"11\":1,\"18\":1,\"26\":1,\"48\":1,\"56\":1,\"118\":2}}],[\"piece\",{\"1\":{\"134\":1}}],[\"picked\",{\"1\":{\"123\":1,\"126\":1}}],[\"picture\",{\"1\":{\"78\":1}}],[\"psql\",{\"1\":{\"122\":3,\"125\":3,\"128\":3}}],[\"please\",{\"1\":{\"117\":1}}],[\"place\",{\"1\":{\"117\":1}}],[\"py\",{\"1\":{\"83\":1,\"120\":1,\"128\":1}}],[\"python\",{\"0\":{\"126\":1},\"1\":{\"77\":1,\"83\":3,\"120\":5,\"122\":2,\"126\":6,\"127\":1,\"128\":9,\"129\":3}}],[\"perform\",{\"1\":{\"143\":1,\"144\":1}}],[\"people\",{\"1\":{\"83\":1}}],[\"pet\",{\"0\":{\"148\":1,\"152\":1},\"1\":{\"69\":3}}],[\"pets\",{\"0\":{\"147\":1},\"1\":{\"69\":11,\"71\":2,\"72\":2,\"146\":7,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1}}],[\"petstore\",{\"0\":{\"64\":1,\"68\":1},\"1\":{\"64\":2,\"67\":4,\"68\":1,\"69\":12,\"71\":2,\"72\":2,\"146\":8,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"155\":1}}],[\"possible\",{\"1\":{\"162\":1}}],[\"postgresql\",{\"1\":{\"120\":1,\"122\":1,\"125\":1,\"128\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"post\",{\"1\":{\"69\":1,\"71\":2,\"78\":3,\"98\":1,\"100\":1,\"101\":1,\"132\":2,\"133\":1,\"138\":2,\"146\":1,\"152\":1,\"156\":1}}],[\"point\",{\"1\":{\"125\":2}}],[\"powerful\",{\"1\":{\"120\":1}}],[\"potential\",{\"1\":{\"82\":1,\"107\":1}}],[\"policy=compact\",{\"1\":{\"78\":1,\"97\":1}}],[\"populated\",{\"1\":{\"77\":1,\"96\":1,\"162\":1}}],[\"parameter\",{\"1\":{\"162\":1}}],[\"partnerships\",{\"1\":{\"107\":1}}],[\"partnership\",{\"0\":{\"107\":1}}],[\"pair\",{\"1\":{\"128\":2}}],[\"password\",{\"1\":{\"80\":1,\"115\":2,\"116\":1}}],[\"payload\",{\"1\":{\"156\":2}}],[\"pay\",{\"1\":{\"78\":1}}],[\"payment\",{\"1\":{\"78\":10,\"82\":2}}],[\"payments\",{\"1\":{\"74\":1}}],[\"path=\",{\"1\":{\"138\":1,\"139\":1}}],[\"path\",{\"1\":{\"77\":1,\"126\":1,\"135\":1,\"138\":5,\"139\":5}}],[\"packages\",{\"1\":{\"123\":1,\"126\":1,\"128\":1}}],[\"package\",{\"1\":{\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"123\":1,\"126\":1}}],[\"public\",{\"1\":{\"125\":12}}],[\"publish\",{\"0\":{\"71\":1,\"100\":1},\"1\":{\"100\":1,\"109\":1,\"157\":1}}],[\"purposes\",{\"1\":{\"121\":1}}],[\"pulling\",{\"1\":{\"77\":1,\"96\":4}}],[\"putting\",{\"1\":{\"114\":1}}],[\"put\",{\"1\":{\"69\":1,\"78\":1,\"98\":1,\"139\":2,\"146\":1,\"148\":1,\"156\":1}}],[\"primary\",{\"1\":{\"142\":1}}],[\"prints\",{\"1\":{\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"148\":1,\"151\":1,\"152\":1,\"153\":1}}],[\"pricing\",{\"1\":{\"107\":1}}],[\"practices\",{\"1\":{\"106\":1}}],[\"precision\",{\"1\":{\"119\":1,\"141\":1,\"142\":1}}],[\"prepare\",{\"1\":{\"118\":1}}],[\"predefined\",{\"1\":{\"115\":1}}],[\"previously\",{\"0\":{\"149\":1}}],[\"previous\",{\"1\":{\"83\":1,\"110\":1}}],[\"pre\",{\"1\":{\"80\":1}}],[\"prerequisites\",{\"0\":{\"65\":1,\"75\":1,\"92\":1}}],[\"produce\",{\"1\":{\"141\":1}}],[\"produces\",{\"1\":{\"141\":1}}],[\"products\",{\"0\":{\"170\":1},\"1\":{\"107\":1}}],[\"product\",{\"0\":{\"107\":1}}],[\"properties\",{\"1\":{\"115\":1}}],[\"protobuf\",{\"1\":{\"156\":1}}],[\"protocol\",{\"1\":{\"69\":1,\"98\":1,\"146\":1}}],[\"protect\",{\"1\":{\"112\":1}}],[\"protected\",{\"1\":{\"109\":1,\"112\":1}}],[\"providing\",{\"0\":{\"160\":1},\"1\":{\"105\":1,\"114\":1}}],[\"provide\",{\"1\":{\"112\":1,\"114\":1,\"115\":1,\"117\":2,\"119\":1,\"126\":1,\"142\":1,\"160\":2,\"162\":1}}],[\"provides\",{\"1\":{\"91\":1,\"120\":1,\"134\":2,\"143\":1,\"145\":1,\"146\":2,\"154\":1,\"156\":1,\"157\":1,\"158\":1}}],[\"providerid\",{\"1\":{\"118\":1}}],[\"provider\",{\"1\":{\"48\":2,\"49\":1,\"50\":1,\"51\":3,\"54\":1,\"55\":1,\"57\":1,\"117\":8,\"118\":5}}],[\"providers\",{\"1\":{\"30\":1,\"45\":1,\"46\":1,\"48\":1,\"52\":1,\"117\":2,\"118\":1}}],[\"prompt\",{\"1\":{\"83\":1}}],[\"proceeding\",{\"1\":{\"83\":1}}],[\"processing\",{\"1\":{\"85\":1}}],[\"processed\",{\"1\":{\"77\":1,\"96\":1}}],[\"process\",{\"1\":{\"67\":1,\"77\":1,\"112\":1,\"115\":1}}],[\"proxy\",{\"1\":{\"68\":1,\"97\":1}}],[\"proxies\",{\"1\":{\"64\":1,\"74\":1}}],[\"proxied\",{\"1\":{\"64\":1}}],[\"project\",{\"0\":{\"67\":1,\"73\":1,\"77\":1,\"79\":1,\"84\":1},\"1\":{\"7\":1,\"10\":1,\"22\":1,\"25\":1,\"30\":1,\"45\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"64\":1,\"67\":3,\"73\":1,\"77\":3,\"84\":1,\"109\":2,\"110\":3,\"114\":1,\"115\":1,\"118\":1,\"122\":3,\"123\":2,\"125\":6,\"128\":3,\"143\":2,\"146\":2,\"155\":2}}],[\"p\",{\"1\":{\"50\":1,\"51\":2,\"122\":1,\"125\":2,\"128\":1}}],[\"mv\",{\"1\":{\"144\":2}}],[\"mkdir\",{\"1\":{\"122\":1,\"125\":2,\"128\":1}}],[\"much\",{\"1\":{\"121\":1}}],[\"must\",{\"1\":{\"77\":1,\"115\":1,\"123\":1,\"126\":1}}],[\"mime\",{\"1\":{\"138\":1,\"139\":1}}],[\"missing\",{\"1\":{\"110\":1}}],[\"might\",{\"1\":{\"77\":1}}],[\"migrations\",{\"1\":{\"30\":1,\"34\":1,\"45\":1,\"120\":2,\"141\":2,\"142\":2,\"144\":2,\"145\":3}}],[\"migration\",{\"0\":{\"34\":1,\"37\":1,\"40\":1},\"1\":{\"30\":1,\"35\":1,\"36\":2,\"37\":1,\"38\":1,\"39\":2,\"40\":1,\"41\":1,\"45\":1,\"109\":1,\"115\":1,\"120\":9,\"122\":3,\"123\":1,\"125\":3,\"126\":1,\"128\":3,\"129\":1,\"141\":9,\"142\":9,\"143\":1,\"144\":9,\"145\":9}}],[\"means\",{\"1\":{\"109\":1}}],[\"message\",{\"1\":{\"100\":1,\"103\":1,\"109\":1,\"110\":2,\"156\":1}}],[\"mem\",{\"1\":{\"96\":1}}],[\"medium\",{\"1\":{\"83\":2}}],[\"method\",{\"1\":{\"69\":1,\"78\":1,\"98\":1,\"146\":1,\"156\":1}}],[\"metadata\",{\"1\":{\"64\":1,\"74\":1,\"91\":1,\"136\":1}}],[\"modified\",{\"1\":{\"139\":1,\"144\":1}}],[\"modifying\",{\"0\":{\"162\":1},\"1\":{\"124\":1,\"127\":1,\"162\":2}}],[\"modify\",{\"1\":{\"109\":2,\"120\":2,\"125\":1,\"141\":2,\"142\":3,\"144\":2,\"145\":3,\"162\":2}}],[\"model\",{\"1\":{\"109\":2,\"157\":1}}],[\"models\",{\"1\":{\"85\":1,\"109\":1,\"120\":1,\"141\":2,\"142\":1,\"144\":1,\"145\":1}}],[\"modern\",{\"1\":{\"85\":1}}],[\"mode\",{\"1\":{\"77\":1,\"78\":1}}],[\"most\",{\"1\":{\"105\":1}}],[\"move\",{\"1\":{\"81\":1}}],[\"money\",{\"0\":{\"81\":1},\"1\":{\"80\":1,\"81\":4,\"82\":1,\"83\":3}}],[\"more\",{\"1\":{\"66\":1,\"76\":1,\"109\":2,\"117\":1,\"125\":1,\"128\":1,\"154\":1}}],[\"materialize\",{\"1\":{\"144\":1,\"145\":1}}],[\"materialized\",{\"0\":{\"144\":1},\"1\":{\"141\":1,\"144\":4,\"145\":3}}],[\"map\",{\"1\":{\"125\":1}}],[\"maven\",{\"1\":{\"123\":2,\"125\":3}}],[\"master\",{\"1\":{\"115\":1,\"116\":1}}],[\"main\",{\"1\":{\"110\":1,\"125\":4}}],[\"machine\",{\"1\":{\"110\":1}}],[\"macos\",{\"1\":{\"66\":1,\"76\":1,\"122\":1,\"125\":1,\"128\":1}}],[\"markup\",{\"1\":{\"83\":1}}],[\"marked\",{\"1\":{\"82\":1}}],[\"made\",{\"1\":{\"83\":1}}],[\"makes\",{\"1\":{\"144\":1}}],[\"make\",{\"1\":{\"65\":1,\"75\":1,\"125\":2}}],[\"manages\",{\"1\":{\"134\":1}}],[\"management\",{\"1\":{\"109\":1,\"141\":1}}],[\"manager\",{\"1\":{\"65\":1,\"66\":1,\"75\":1,\"76\":1}}],[\"manage\",{\"1\":{\"30\":4,\"45\":4,\"69\":1,\"111\":1,\"134\":1,\"158\":1}}],[\"managing\",{\"0\":{\"117\":1,\"130\":1,\"135\":1,\"159\":1},\"1\":{\"16\":1,\"34\":1,\"46\":1,\"120\":1,\"130\":1,\"134\":1,\"135\":1,\"142\":1,\"144\":1}}],[\"my\",{\"1\":{\"124\":1,\"127\":1}}],[\"mysecret\",{\"1\":{\"51\":1}}],[\"myrealm\",{\"1\":{\"51\":1,\"54\":1,\"57\":1}}],[\"myprovider\",{\"1\":{\"51\":1}}],[\"myclient123\",{\"1\":{\"51\":1}}],[\"myalias\",{\"1\":{\"51\":1,\"54\":1,\"57\":1}}],[\"zilla\",{\"0\":{\"158\":1,\"159\":1,\"161\":1,\"162\":1,\"176\":1},\"1\":{\"30\":1,\"45\":1,\"64\":1,\"74\":1,\"77\":1,\"96\":1,\"109\":7,\"110\":1,\"119\":9,\"141\":3,\"144\":2,\"145\":1,\"158\":2,\"160\":3,\"161\":5,\"162\":6}}],[\"zillabase\",{\"0\":{\"43\":1,\"66\":1,\"76\":1,\"83\":1,\"85\":1,\"93\":1,\"95\":1,\"104\":1,\"111\":1,\"134\":1},\"1\":{\"1\":1,\"2\":1,\"5\":1,\"8\":1,\"11\":1,\"14\":1,\"16\":1,\"17\":1,\"18\":3,\"19\":1,\"20\":1,\"22\":1,\"23\":1,\"25\":1,\"26\":1,\"28\":1,\"29\":1,\"31\":1,\"32\":1,\"34\":1,\"35\":1,\"38\":1,\"41\":1,\"43\":1,\"44\":1,\"47\":1,\"50\":1,\"53\":1,\"56\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":3,\"67\":3,\"68\":1,\"73\":2,\"75\":1,\"76\":3,\"77\":7,\"78\":4,\"80\":2,\"83\":2,\"84\":2,\"85\":1,\"91\":1,\"93\":2,\"94\":3,\"95\":2,\"97\":1,\"104\":2,\"109\":10,\"110\":10,\"111\":3,\"112\":3,\"113\":1,\"114\":1,\"117\":2,\"118\":7,\"120\":7,\"122\":5,\"123\":1,\"125\":9,\"126\":2,\"128\":7,\"129\":3,\"130\":1,\"134\":5,\"135\":1,\"141\":5,\"142\":5,\"143\":1,\"144\":4,\"145\":5,\"151\":1,\"154\":2,\"155\":4,\"156\":1,\"158\":1,\"160\":2,\"161\":1,\"162\":4}}],[\"certificates\",{\"1\":{\"158\":1}}],[\"calls\",{\"0\":{\"146\":1}}],[\"call\",{\"1\":{\"128\":1,\"129\":2,\"131\":1,\"132\":1,\"133\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"cases\",{\"1\":{\"141\":1,\"145\":1}}],[\"case\",{\"1\":{\"118\":2,\"119\":1,\"126\":1}}],[\"caused\",{\"1\":{\"110\":2}}],[\"cannot\",{\"1\":{\"120\":1,\"129\":1}}],[\"candice\",{\"1\":{\"83\":1,\"143\":3}}],[\"can\",{\"1\":{\"66\":1,\"76\":1,\"78\":2,\"80\":1,\"81\":2,\"82\":2,\"83\":2,\"94\":1,\"109\":4,\"110\":1,\"114\":3,\"115\":1,\"117\":1,\"119\":1,\"120\":3,\"123\":1,\"124\":1,\"126\":1,\"127\":1,\"130\":1,\"134\":1,\"141\":4,\"142\":4,\"143\":2,\"144\":4,\"145\":4,\"155\":1,\"156\":1,\"158\":1,\"160\":1,\"162\":1}}],[\"changes\",{\"1\":{\"156\":3,\"162\":1}}],[\"change\",{\"1\":{\"122\":1,\"125\":1,\"128\":1,\"158\":1}}],[\"channels\",{\"1\":{\"156\":1}}],[\"channel\",{\"1\":{\"105\":1,\"146\":1,\"157\":2}}],[\"choose\",{\"1\":{\"105\":1}}],[\"check\",{\"0\":{\"153\":1},\"1\":{\"82\":1,\"83\":1,\"110\":1}}],[\"ctrl+c\",{\"1\":{\"84\":1}}],[\"cqrs\",{\"1\":{\"83\":1}}],[\"customized\",{\"1\":{\"141\":1,\"142\":1}}],[\"customization\",{\"1\":{\"109\":1}}],[\"custom\",{\"1\":{\"120\":2}}],[\"customers\",{\"1\":{\"69\":3}}],[\"current\",{\"1\":{\"122\":1,\"125\":1,\"128\":1,\"139\":1}}],[\"currently\",{\"1\":{\"109\":1,\"120\":1,\"129\":1,\"134\":1}}],[\"curl\",{\"1\":{\"66\":1,\"71\":1,\"72\":1,\"76\":1,\"92\":1,\"100\":1,\"102\":1,\"131\":1,\"132\":1,\"133\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"152\":1}}],[\"credential\",{\"1\":{\"116\":1}}],[\"creating\",{\"1\":{\"109\":1,\"117\":1,\"160\":1}}],[\"created\",{\"1\":{\"77\":1,\"78\":1,\"80\":1,\"83\":1,\"120\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"creates\",{\"1\":{\"37\":1,\"141\":1}}],[\"create\",{\"0\":{\"132\":1,\"138\":1,\"152\":1},\"1\":{\"36\":1,\"69\":1,\"78\":1,\"83\":1,\"98\":1,\"108\":1,\"119\":2,\"120\":9,\"122\":5,\"125\":10,\"128\":9,\"132\":2,\"138\":1,\"141\":5,\"142\":6,\"144\":4,\"145\":4}}],[\"cross\",{\"1\":{\"114\":1}}],[\"crud\",{\"1\":{\"68\":1,\"78\":1,\"97\":1,\"141\":1,\"142\":1}}],[\"cd\",{\"1\":{\"67\":1,\"77\":1,\"122\":1,\"125\":2,\"128\":1}}],[\"class\",{\"1\":{\"125\":7}}],[\"close\",{\"1\":{\"84\":1}}],[\"cloned\",{\"1\":{\"67\":1,\"77\":1}}],[\"clone\",{\"0\":{\"94\":1},\"1\":{\"67\":2,\"77\":2,\"94\":2}}],[\"cleanup\",{\"1\":{\"78\":1,\"97\":1}}],[\"cluster\",{\"1\":{\"64\":1,\"74\":1,\"91\":1,\"146\":1,\"157\":1}}],[\"clientid\",{\"1\":{\"118\":1}}],[\"clients\",{\"1\":{\"114\":1}}],[\"client\",{\"1\":{\"50\":1,\"51\":3,\"109\":2,\"114\":10,\"117\":4,\"118\":1,\"122\":1,\"125\":1,\"128\":1,\"139\":1}}],[\"cli\",{\"0\":{\"43\":1,\"66\":1,\"76\":1,\"89\":1,\"165\":1},\"1\":{\"28\":1,\"43\":1,\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"77\":1,\"110\":3,\"117\":1,\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":2}}],[\"c\",{\"1\":{\"20\":1,\"21\":2,\"50\":1,\"51\":2,\"66\":1,\"76\":1,\"162\":2}}],[\"code\",{\"1\":{\"132\":1,\"133\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"covered\",{\"1\":{\"120\":1,\"129\":1}}],[\"corresponding\",{\"1\":{\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"correlation\",{\"1\":{\"109\":1,\"119\":2,\"141\":1,\"144\":4}}],[\"correlate\",{\"1\":{\"109\":3}}],[\"cors\",{\"1\":{\"114\":1}}],[\"collaborate\",{\"1\":{\"106\":1}}],[\"collection\",{\"1\":{\"83\":2,\"130\":1,\"134\":1}}],[\"copy\",{\"1\":{\"78\":1,\"120\":1,\"128\":1}}],[\"compatible\",{\"1\":{\"142\":1,\"145\":1}}],[\"computational\",{\"1\":{\"121\":1}}],[\"comprehensive\",{\"1\":{\"105\":1}}],[\"complete\",{\"1\":{\"78\":1,\"117\":1,\"120\":1,\"125\":1,\"128\":1,\"142\":1,\"144\":1,\"145\":1,\"162\":1}}],[\"com\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":1,\"80\":1,\"94\":1,\"110\":1,\"125\":2}}],[\"committed\",{\"1\":{\"105\":1}}],[\"community\",{\"0\":{\"105\":1,\"106\":1},\"1\":{\"106\":2}}],[\"common\",{\"1\":{\"64\":1,\"68\":1,\"72\":1,\"78\":1}}],[\"commands\",{\"0\":{\"3\":1,\"18\":1,\"30\":1,\"36\":1,\"45\":1,\"48\":1},\"1\":{\"1\":1,\"16\":1,\"28\":1,\"34\":1,\"43\":1,\"46\":1,\"78\":2,\"93\":1,\"119\":3,\"122\":1,\"125\":1,\"128\":1,\"141\":2,\"142\":1,\"144\":2,\"145\":3,\"155\":1,\"158\":2,\"161\":1}}],[\"command\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"15\":1,\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"28\":1,\"31\":1,\"34\":1,\"37\":1,\"39\":1,\"40\":1,\"46\":1,\"49\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"66\":2,\"73\":1,\"76\":2,\"77\":2,\"78\":2,\"94\":1,\"95\":1,\"100\":1,\"104\":1,\"110\":2,\"111\":1,\"118\":1,\"120\":3,\"141\":3,\"142\":3,\"144\":3,\"145\":3,\"150\":1,\"151\":1,\"155\":3,\"160\":1,\"161\":1,\"162\":3}}],[\"console\",{\"1\":{\"151\":1}}],[\"consumers\",{\"1\":{\"153\":1}}],[\"consumer\",{\"0\":{\"153\":1},\"1\":{\"151\":1,\"153\":4}}],[\"consume\",{\"0\":{\"150\":1,\"151\":1},\"1\":{\"144\":1,\"145\":1,\"156\":1}}],[\"consumed\",{\"1\":{\"141\":1}}],[\"consider\",{\"1\":{\"83\":1}}],[\"connect\",{\"1\":{\"117\":2,\"122\":1,\"125\":1,\"128\":1}}],[\"connection\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1}}],[\"convenient\",{\"1\":{\"105\":1}}],[\"concepts\",{\"0\":{\"87\":1}}],[\"concerns\",{\"1\":{\"83\":1}}],[\"contact\",{\"1\":{\"107\":1}}],[\"container\",{\"1\":{\"110\":4}}],[\"containers\",{\"1\":{\"30\":2,\"45\":2,\"58\":1,\"61\":1,\"134\":1}}],[\"containing\",{\"1\":{\"83\":1}}],[\"control\",{\"1\":{\"71\":1,\"72\":2,\"101\":1,\"103\":2}}],[\"contents\",{\"1\":{\"125\":1,\"137\":1}}],[\"content\",{\"1\":{\"71\":4,\"72\":2,\"100\":1,\"101\":2,\"103\":2,\"120\":1,\"138\":1,\"139\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"148\":1,\"152\":1,\"156\":1}}],[\"confidential\",{\"1\":{\"114\":1}}],[\"configurable\",{\"1\":{\"113\":1}}],[\"configuration\",{\"0\":{\"113\":1,\"116\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1},\"1\":{\"18\":2,\"19\":1,\"25\":1,\"30\":1,\"45\":1,\"109\":6,\"112\":1,\"114\":1,\"115\":1,\"158\":3,\"160\":3,\"161\":2,\"162\":9}}],[\"configurations\",{\"1\":{\"16\":1,\"18\":1,\"22\":1,\"158\":1}}],[\"configure\",{\"1\":{\"109\":1}}],[\"configured\",{\"1\":{\"109\":1,\"111\":1,\"117\":1}}],[\"configuring\",{\"1\":{\"109\":1}}],[\"config\",{\"0\":{\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"114\":1},\"1\":{\"17\":1,\"20\":2,\"21\":4,\"23\":1,\"24\":1,\"26\":1,\"27\":1,\"30\":1,\"31\":1,\"45\":1,\"77\":2,\"80\":1,\"96\":1,\"109\":4,\"111\":1,\"114\":1,\"117\":1,\"118\":1,\"124\":1,\"127\":1,\"158\":1,\"160\":1,\"161\":1,\"162\":3}}],[\"conflict\",{\"1\":{\"110\":1}}],[\"conflictexception\",{\"1\":{\"110\":1}}],[\"confusion\",{\"1\":{\"15\":1}}],[\"txt\",{\"1\":{\"126\":1,\"128\":1}}],[\"twitter\",{\"1\":{\"117\":2}}],[\"two\",{\"1\":{\"83\":1,\"155\":1}}],[\"tables\",{\"1\":{\"141\":1,\"145\":1}}],[\"tablefunction\",{\"1\":{\"125\":3}}],[\"table\",{\"0\":{\"142\":1,\"174\":1},\"1\":{\"120\":1,\"125\":1,\"142\":6,\"145\":1}}],[\"take\",{\"1\":{\"117\":1}}],[\"tap\",{\"1\":{\"66\":2,\"76\":2,\"93\":2}}],[\"try\",{\"1\":{\"146\":1}}],[\"tracks\",{\"1\":{\"141\":1}}],[\"trace\",{\"1\":{\"110\":1}}],[\"transformation\",{\"1\":{\"144\":1}}],[\"transformations\",{\"1\":{\"120\":1}}],[\"transfers\",{\"1\":{\"83\":2}}],[\"transferring\",{\"1\":{\"83\":6}}],[\"transferred\",{\"1\":{\"82\":1}}],[\"transfer\",{\"0\":{\"82\":1},\"1\":{\"74\":1,\"82\":1,\"83\":4}}],[\"transactions\",{\"1\":{\"109\":2,\"119\":1,\"145\":1}}],[\"transaction\",{\"1\":{\"81\":1,\"83\":1}}],[\"troubleshooting\",{\"0\":{\"110\":1}}],[\"tippler\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"ticket\",{\"1\":{\"108\":1}}],[\"timestamp\",{\"1\":{\"119\":3,\"141\":2}}],[\"time\",{\"1\":{\"85\":2,\"106\":1,\"109\":1}}],[\"temp\",{\"1\":{\"125\":2}}],[\"technical\",{\"0\":{\"108\":1}}],[\"team\",{\"1\":{\"107\":1,\"108\":1}}],[\"test\",{\"1\":{\"80\":1,\"120\":4}}],[\"types\",{\"1\":{\"126\":1}}],[\"types=\",{\"1\":{\"120\":1,\"128\":3}}],[\"type=\",{\"1\":{\"120\":1,\"128\":3}}],[\"type\",{\"1\":{\"71\":2,\"72\":1,\"100\":1,\"101\":1,\"103\":1,\"114\":1,\"119\":3,\"128\":1,\"136\":1,\"137\":2,\"138\":2,\"139\":2,\"141\":1,\"144\":2,\"145\":2,\"148\":1,\"152\":1,\"156\":1}}],[\"t\",{\"1\":{\"66\":1,\"76\":1,\"112\":1,\"122\":1,\"125\":1,\"128\":1,\"145\":1,\"150\":1,\"151\":1,\"160\":1}}],[\"token\",{\"1\":{\"109\":1,\"112\":3}}],[\"tools\",{\"1\":{\"85\":1,\"92\":1,\"120\":1}}],[\"topic\",{\"0\":{\"151\":1},\"1\":{\"69\":1,\"78\":1,\"98\":1,\"100\":1,\"141\":1,\"142\":2,\"151\":1}}],[\"topics\",{\"1\":{\"64\":1,\"68\":1,\"74\":1,\"78\":1,\"97\":1}}],[\"to\",{\"1\":{\"15\":2,\"39\":1,\"64\":1,\"66\":1,\"67\":2,\"69\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":2,\"76\":1,\"77\":6,\"78\":2,\"80\":2,\"81\":4,\"82\":3,\"83\":14,\"85\":2,\"91\":1,\"93\":1,\"94\":2,\"100\":2,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":1,\"109\":7,\"110\":3,\"111\":3,\"112\":4,\"114\":2,\"115\":2,\"117\":7,\"118\":1,\"119\":1,\"120\":7,\"121\":1,\"122\":1,\"123\":6,\"125\":4,\"126\":6,\"128\":2,\"129\":1,\"131\":1,\"132\":2,\"133\":2,\"134\":2,\"135\":6,\"136\":1,\"137\":1,\"138\":4,\"139\":5,\"140\":1,\"141\":6,\"142\":6,\"143\":2,\"144\":5,\"145\":7,\"146\":1,\"150\":1,\"151\":1,\"153\":1,\"154\":1,\"155\":5,\"156\":4,\"158\":2,\"161\":2,\"162\":3}}],[\"those\",{\"1\":{\"146\":1,\"156\":1}}],[\"third\",{\"1\":{\"125\":1}}],[\"this\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"28\":1,\"31\":1,\"34\":1,\"37\":1,\"40\":1,\"43\":1,\"46\":1,\"49\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"74\":1,\"78\":1,\"83\":1,\"85\":1,\"91\":1,\"109\":4,\"111\":1,\"112\":1,\"120\":1,\"121\":1,\"125\":1,\"128\":1,\"134\":1,\"139\":1,\"141\":1,\"142\":2,\"143\":1,\"144\":1,\"145\":1,\"146\":2,\"154\":2,\"155\":2,\"160\":1,\"161\":1,\"162\":2}}],[\"through\",{\"1\":{\"111\":1,\"117\":1,\"122\":1,\"125\":1,\"128\":1,\"134\":1,\"145\":1,\"146\":1}}],[\"thread\",{\"1\":{\"110\":1}}],[\"than\",{\"1\":{\"110\":1,\"162\":1}}],[\"that\",{\"1\":{\"68\":1,\"81\":1,\"83\":1,\"109\":4,\"114\":2,\"115\":2,\"117\":3,\"118\":1,\"120\":2,\"123\":1,\"126\":2,\"128\":1,\"129\":2,\"130\":1,\"134\":1,\"138\":1,\"139\":1,\"143\":1,\"144\":1,\"145\":1,\"153\":2,\"156\":2,\"157\":1}}],[\"their\",{\"1\":{\"134\":1,\"145\":1}}],[\"these\",{\"1\":{\"115\":1,\"120\":1,\"122\":1,\"125\":1,\"128\":1,\"134\":1,\"145\":1,\"153\":1,\"158\":1}}],[\"there\",{\"1\":{\"109\":1,\"113\":1,\"151\":1}}],[\"therefore\",{\"1\":{\"83\":1}}],[\"then\",{\"1\":{\"84\":1,\"126\":1,\"135\":1,\"142\":1}}],[\"them\",{\"1\":{\"64\":1,\"74\":1,\"80\":1}}],[\"the\",{\"0\":{\"67\":1,\"68\":1,\"73\":1,\"77\":1,\"79\":1,\"84\":1,\"94\":1,\"149\":1,\"150\":1,\"151\":1,\"153\":1,\"155\":1},\"1\":{\"1\":1,\"3\":1,\"7\":2,\"10\":1,\"16\":2,\"18\":1,\"22\":2,\"25\":1,\"28\":1,\"34\":1,\"36\":1,\"39\":3,\"40\":1,\"43\":2,\"46\":2,\"48\":1,\"52\":2,\"55\":1,\"58\":2,\"61\":2,\"64\":5,\"65\":1,\"66\":4,\"67\":7,\"68\":1,\"69\":3,\"73\":2,\"74\":4,\"75\":1,\"76\":4,\"77\":15,\"78\":11,\"80\":2,\"81\":2,\"82\":9,\"83\":14,\"84\":2,\"92\":1,\"93\":1,\"94\":3,\"95\":2,\"98\":3,\"100\":2,\"104\":2,\"105\":1,\"109\":25,\"110\":9,\"111\":2,\"112\":4,\"114\":12,\"115\":10,\"117\":16,\"118\":5,\"119\":1,\"120\":17,\"121\":2,\"122\":8,\"123\":5,\"124\":1,\"125\":15,\"126\":8,\"127\":1,\"128\":10,\"129\":5,\"130\":1,\"131\":1,\"132\":4,\"133\":4,\"134\":5,\"135\":9,\"136\":1,\"137\":7,\"138\":4,\"139\":9,\"140\":1,\"141\":13,\"142\":13,\"143\":1,\"144\":12,\"145\":15,\"146\":9,\"150\":1,\"151\":1,\"153\":2,\"154\":2,\"155\":9,\"156\":13,\"157\":2,\"158\":6,\"160\":2,\"161\":3,\"162\":14}}],[\"y\",{\"1\":{\"120\":5,\"122\":1,\"125\":1,\"128\":6}}],[\"yyy\",{\"1\":{\"110\":1}}],[\"yarn\",{\"1\":{\"75\":1,\"77\":1}}],[\"yaml\",{\"1\":{\"6\":1,\"21\":1,\"31\":1,\"77\":2,\"78\":1,\"80\":1,\"96\":2,\"109\":5,\"111\":1,\"114\":1,\"117\":1,\"124\":1,\"127\":1,\"155\":4,\"160\":1,\"161\":3,\"162\":4}}],[\"your\",{\"0\":{\"160\":1},\"1\":{\"83\":2,\"92\":1,\"105\":1,\"110\":1,\"111\":1,\"112\":1,\"118\":2,\"120\":1,\"123\":1,\"138\":2,\"139\":2,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"160\":1}}],[\"you\",{\"1\":{\"65\":1,\"66\":2,\"75\":1,\"76\":2,\"77\":2,\"78\":3,\"80\":1,\"81\":3,\"82\":1,\"83\":2,\"92\":1,\"94\":1,\"109\":7,\"110\":3,\"112\":1,\"114\":2,\"115\":1,\"117\":3,\"119\":2,\"120\":2,\"122\":2,\"123\":2,\"124\":1,\"125\":3,\"126\":5,\"127\":1,\"128\":2,\"129\":1,\"132\":1,\"133\":1,\"135\":2,\"138\":1,\"139\":1,\"141\":1,\"142\":2,\"143\":1,\"144\":2,\"145\":3,\"153\":1,\"155\":1,\"156\":1,\"160\":2,\"162\":1}}],[\"yes\",{\"1\":{\"6\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"39\":1,\"51\":5,\"54\":1,\"57\":2,\"109\":1,\"114\":2}}],[\"last\",{\"1\":{\"139\":1}}],[\"language\",{\"1\":{\"120\":3,\"122\":1,\"125\":3,\"128\":3}}],[\"layers\",{\"1\":{\"117\":2}}],[\"later\",{\"1\":{\"92\":1,\"109\":1,\"125\":2}}],[\"latest\",{\"1\":{\"77\":1,\"78\":1,\"96\":3}}],[\"low\",{\"1\":{\"83\":1}}],[\"logical\",{\"1\":{\"130\":1,\"134\":1}}],[\"logic\",{\"1\":{\"120\":2,\"129\":1}}],[\"login\",{\"0\":{\"80\":1},\"1\":{\"80\":1}}],[\"logout\",{\"1\":{\"114\":1}}],[\"logs\",{\"1\":{\"110\":1}}],[\"logged\",{\"1\":{\"81\":2}}],[\"log\",{\"1\":{\"80\":1}}],[\"localhost\",{\"1\":{\"71\":2,\"72\":2,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"116\":1,\"122\":1,\"125\":1,\"128\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"146\":2,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1}}],[\"locally\",{\"1\":{\"36\":1,\"37\":1}}],[\"local\",{\"1\":{\"30\":3,\"36\":1,\"40\":1,\"45\":3,\"58\":1,\"61\":1}}],[\"location\",{\"1\":{\"6\":1,\"21\":1}}],[\"ll\",{\"1\":{\"77\":1,\"112\":1,\"117\":1,\"123\":1,\"126\":2,\"153\":1}}],[\"let\",{\"1\":{\"146\":1}}],[\"learn\",{\"1\":{\"111\":1,\"154\":1,\"156\":1}}],[\"least\",{\"1\":{\"110\":1}}],[\"leveraging\",{\"1\":{\"83\":1}}],[\"leverages\",{\"1\":{\"78\":1}}],[\"left\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1}}],[\"length\",{\"1\":{\"71\":1,\"72\":1,\"103\":1,\"125\":3}}],[\"libpq\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"libraries\",{\"1\":{\"112\":1}}],[\"library\",{\"1\":{\"83\":1,\"128\":1}}],[\"limited\",{\"1\":{\"121\":1}}],[\"like\",{\"1\":{\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"158\":1}}],[\"linuxbrew\",{\"1\":{\"110\":2}}],[\"linux\",{\"1\":{\"66\":1,\"76\":1}}],[\"line\",{\"1\":{\"15\":1,\"39\":1,\"110\":1}}],[\"listens\",{\"1\":{\"150\":1,\"151\":1}}],[\"listed\",{\"1\":{\"146\":1}}],[\"list\",{\"0\":{\"7\":1,\"22\":1,\"40\":1,\"52\":1,\"131\":1,\"136\":1},\"1\":{\"3\":1,\"8\":1,\"18\":2,\"23\":1,\"36\":2,\"39\":1,\"41\":1,\"48\":2,\"53\":1,\"82\":1,\"114\":2,\"118\":2,\"131\":1,\"136\":1,\"155\":2,\"161\":1}}],[\"lists\",{\"1\":{\"1\":1,\"3\":1,\"7\":1,\"16\":1,\"22\":1,\"28\":1,\"34\":1,\"40\":1,\"43\":1,\"46\":1,\"52\":1}}],[\"io\",{\"1\":{\"125\":1}}],[\"i\",{\"1\":{\"109\":1,\"110\":3}}],[\"import\",{\"1\":{\"120\":1,\"125\":5,\"128\":2}}],[\"implemented\",{\"1\":{\"134\":1}}],[\"implement\",{\"1\":{\"111\":1,\"123\":1}}],[\"implementation\",{\"1\":{\"74\":1,\"120\":1,\"121\":1,\"129\":1}}],[\"implements\",{\"1\":{\"64\":2,\"74\":1,\"125\":4}}],[\"immediately\",{\"1\":{\"81\":1}}],[\"issue\",{\"1\":{\"108\":1}}],[\"is\",{\"0\":{\"85\":1},\"1\":{\"66\":1,\"67\":1,\"68\":1,\"74\":1,\"76\":1,\"77\":2,\"78\":2,\"80\":1,\"83\":8,\"85\":1,\"96\":1,\"97\":1,\"108\":1,\"109\":11,\"110\":3,\"111\":1,\"112\":3,\"114\":1,\"117\":1,\"121\":2,\"129\":1,\"130\":2,\"134\":5,\"135\":2,\"139\":3,\"141\":1,\"144\":2,\"146\":3,\"154\":1,\"156\":1,\"162\":2}}],[\"iterator<row>\",{\"1\":{\"125\":1}}],[\"iterator<integer>\",{\"1\":{\"125\":1}}],[\"iterator\",{\"1\":{\"125\":3}}],[\"its\",{\"1\":{\"102\":1,\"111\":1,\"141\":1,\"156\":1,\"162\":1}}],[\"it\",{\"0\":{\"112\":1},\"1\":{\"66\":3,\"76\":3,\"77\":1,\"78\":2,\"83\":1,\"85\":1,\"91\":1,\"109\":2,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"128\":1,\"130\":1,\"131\":2,\"132\":2,\"133\":2,\"134\":1,\"136\":2,\"137\":2,\"138\":2,\"139\":4,\"140\":2,\"141\":2,\"142\":1,\"144\":2,\"145\":2,\"150\":2,\"151\":2,\"157\":1,\"160\":1,\"162\":1}}],[\"if\",{\"1\":{\"66\":1,\"76\":1,\"78\":1,\"109\":3,\"112\":1,\"122\":1,\"125\":1,\"128\":1,\"131\":1,\"132\":1,\"133\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"144\":1}}],[\"incoming\",{\"1\":{\"150\":1,\"151\":2}}],[\"including\",{\"1\":{\"109\":1,\"110\":1,\"120\":1,\"141\":2,\"144\":1}}],[\"include\",{\"1\":{\"109\":1,\"125\":1,\"142\":1,\"144\":1}}],[\"includes\",{\"1\":{\"85\":1}}],[\"indexes\",{\"1\":{\"145\":1}}],[\"index\",{\"1\":{\"125\":2}}],[\"input\",{\"1\":{\"120\":1,\"126\":1,\"128\":3,\"156\":1}}],[\"injects\",{\"1\":{\"109\":1}}],[\"inquiries\",{\"0\":{\"107\":1}}],[\"inserted\",{\"1\":{\"144\":1}}],[\"insert\",{\"1\":{\"142\":1,\"143\":6,\"156\":1}}],[\"instead\",{\"1\":{\"114\":1,\"115\":1}}],[\"instance\",{\"1\":{\"83\":1}}],[\"install\",{\"0\":{\"93\":1},\"1\":{\"66\":6,\"76\":6,\"77\":5,\"93\":2,\"122\":3,\"125\":3,\"126\":1,\"128\":3}}],[\"installed\",{\"1\":{\"66\":1,\"76\":1,\"92\":1,\"110\":1,\"122\":1,\"125\":2,\"128\":1}}],[\"installing\",{\"0\":{\"66\":1,\"76\":1},\"1\":{\"77\":1}}],[\"insights\",{\"1\":{\"106\":1}}],[\"intuitive\",{\"1\":{\"145\":1}}],[\"intstream\",{\"1\":{\"125\":2}}],[\"int\",{\"1\":{\"120\":13,\"122\":3,\"125\":13,\"128\":7}}],[\"interface\",{\"1\":{\"123\":1,\"142\":1}}],[\"internally\",{\"1\":{\"121\":1}}],[\"interactions\",{\"1\":{\"85\":1}}],[\"integrate\",{\"1\":{\"112\":1}}],[\"integrated\",{\"1\":{\"109\":2,\"111\":1,\"117\":1}}],[\"integrates\",{\"1\":{\"85\":1}}],[\"integration\",{\"1\":{\"77\":1,\"117\":2}}],[\"into\",{\"1\":{\"78\":1,\"109\":1,\"134\":1,\"143\":3,\"144\":1}}],[\"intact\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1}}],[\"info\",{\"1\":{\"66\":1,\"76\":1,\"77\":1,\"115\":1,\"117\":1,\"120\":1,\"122\":1,\"123\":1,\"125\":3,\"126\":1,\"128\":2,\"132\":1,\"133\":1,\"135\":1,\"138\":1,\"139\":1,\"142\":1,\"144\":1,\"145\":1,\"146\":1,\"154\":1,\"162\":2}}],[\"information\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"45\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"64\":1,\"74\":1,\"109\":4,\"117\":1,\"156\":2,\"157\":1}}],[\"initial\",{\"1\":{\"142\":1,\"143\":6}}],[\"initializing\",{\"0\":{\"143\":1}}],[\"initialization\",{\"1\":{\"67\":1,\"77\":1,\"109\":1,\"114\":1,\"115\":1,\"143\":1}}],[\"initialized\",{\"1\":{\"109\":1,\"111\":1}}],[\"initializes\",{\"1\":{\"31\":1}}],[\"initialize\",{\"1\":{\"30\":1,\"45\":1,\"122\":1,\"125\":1,\"128\":1,\"143\":1}}],[\"init\",{\"0\":{\"31\":1},\"1\":{\"30\":1,\"32\":1,\"45\":1,\"122\":1,\"125\":1,\"128\":1}}],[\"in\",{\"0\":{\"111\":1,\"123\":1,\"126\":1,\"134\":1,\"136\":1},\"1\":{\"7\":1,\"22\":1,\"34\":1,\"64\":3,\"67\":1,\"74\":3,\"77\":2,\"80\":2,\"81\":2,\"83\":3,\"97\":1,\"109\":4,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"117\":3,\"119\":4,\"120\":5,\"121\":3,\"122\":2,\"123\":5,\"125\":2,\"126\":7,\"128\":4,\"129\":8,\"130\":1,\"135\":2,\"136\":1,\"139\":1,\"144\":2}}],[\"ids\",{\"1\":{\"117\":2}}],[\"ideally\",{\"1\":{\"81\":1}}],[\"idempotency\",{\"1\":{\"71\":1,\"100\":1}}],[\"identify\",{\"1\":{\"119\":1}}],[\"identifies\",{\"1\":{\"135\":1}}],[\"identified\",{\"1\":{\"83\":1,\"134\":1}}],[\"identifier\",{\"1\":{\"6\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"114\":1,\"117\":1,\"134\":1,\"139\":1}}],[\"identity\",{\"1\":{\"48\":3,\"49\":1,\"51\":2,\"52\":1,\"54\":1,\"55\":1,\"57\":1,\"109\":1,\"117\":1,\"118\":2,\"119\":4,\"141\":1,\"145\":1,\"156\":2}}],[\"id\",{\"1\":{\"5\":1,\"6\":2,\"11\":1,\"12\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"51\":1,\"69\":3,\"71\":1,\"72\":1,\"78\":3,\"98\":3,\"100\":1,\"103\":1,\"109\":1,\"114\":2,\"117\":3,\"119\":7,\"141\":3,\"142\":2,\"143\":3,\"144\":4,\"145\":3,\"147\":2,\"148\":1,\"149\":1,\"150\":4,\"152\":1,\"153\":2,\"156\":5,\"161\":1,\"162\":4}}],[\"dashboard\",{\"1\":{\"117\":1,\"134\":1}}],[\"data\",{\"0\":{\"149\":1,\"152\":1},\"1\":{\"68\":1,\"78\":1,\"83\":1,\"85\":2,\"97\":1,\"120\":2,\"134\":2,\"138\":1,\"139\":1,\"141\":3,\"142\":2,\"143\":3,\"144\":2,\"145\":3,\"148\":1,\"150\":2,\"151\":1,\"152\":1,\"153\":4,\"156\":8,\"157\":1}}],[\"database\",{\"0\":{\"143\":1},\"1\":{\"34\":1,\"37\":1,\"109\":2,\"120\":3,\"122\":1,\"125\":1,\"128\":1,\"141\":1,\"142\":2,\"143\":1,\"144\":1,\"145\":3}}],[\"during\",{\"1\":{\"109\":3,\"111\":1,\"112\":1,\"114\":1,\"115\":1,\"124\":1,\"127\":1,\"143\":1,\"156\":1,\"160\":1}}],[\"driven\",{\"1\":{\"85\":1}}],[\"d\",{\"1\":{\"71\":1,\"100\":1,\"122\":1,\"125\":1,\"128\":1}}],[\"directly\",{\"1\":{\"110\":1,\"114\":1}}],[\"directory\",{\"1\":{\"67\":3,\"77\":3,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"128\":1,\"155\":1,\"160\":1}}],[\"difference\",{\"1\":{\"109\":2}}],[\"different\",{\"1\":{\"80\":1,\"115\":1,\"154\":1}}],[\"distributions\",{\"1\":{\"66\":1,\"76\":1}}],[\"display\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"45\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"dot\",{\"1\":{\"128\":5}}],[\"double\",{\"1\":{\"119\":1,\"141\":1,\"142\":1}}],[\"documentation\",{\"1\":{\"117\":1}}],[\"dockerjava\",{\"1\":{\"110\":1}}],[\"docker\",{\"1\":{\"65\":1,\"75\":1,\"92\":1,\"110\":2,\"134\":1,\"151\":1}}],[\"do\",{\"1\":{\"109\":2,\"110\":1,\"121\":1}}],[\"does\",{\"1\":{\"109\":2,\"121\":2,\"141\":1,\"145\":1}}],[\"doe\",{\"1\":{\"80\":2,\"143\":3}}],[\"dog\",{\"1\":{\"71\":1,\"72\":1}}],[\"don\",{\"1\":{\"66\":1,\"76\":1,\"122\":1,\"125\":1,\"128\":1,\"145\":1}}],[\"debian\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"debugging\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"debug\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"32\":1,\"33\":2,\"38\":1,\"39\":2,\"41\":1,\"42\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":2,\"62\":1,\"63\":2,\"110\":2}}],[\"declare\",{\"1\":{\"120\":1,\"123\":2,\"125\":1,\"126\":2,\"128\":1,\"129\":1}}],[\"depends\",{\"1\":{\"145\":1}}],[\"depend\",{\"1\":{\"137\":1}}],[\"dependency>\",{\"1\":{\"125\":1}}],[\"dependency\",{\"1\":{\"125\":1}}],[\"dependencies\",{\"1\":{\"77\":1,\"110\":1}}],[\"depending\",{\"1\":{\"109\":1,\"118\":2}}],[\"developer\",{\"0\":{\"106\":1},\"1\":{\"125\":1}}],[\"developers\",{\"1\":{\"105\":1,\"106\":1}}],[\"development\",{\"1\":{\"30\":2,\"45\":2,\"58\":1,\"61\":1,\"77\":1,\"84\":1}}],[\"dev\",{\"1\":{\"77\":1,\"78\":10,\"122\":1,\"125\":1,\"128\":1,\"146\":2,\"151\":1}}],[\"detect\",{\"1\":{\"158\":1,\"162\":1}}],[\"detection\",{\"1\":{\"77\":1}}],[\"determine\",{\"1\":{\"82\":1}}],[\"detailed\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"details\",{\"1\":{\"3\":1,\"66\":1,\"76\":1}}],[\"desktop\",{\"1\":{\"110\":1}}],[\"described\",{\"1\":{\"78\":1}}],[\"description\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"69\":1,\"78\":1,\"98\":1,\"114\":1,\"115\":1,\"117\":1,\"156\":1}}],[\"designed\",{\"1\":{\"74\":1,\"85\":1}}],[\"def\",{\"1\":{\"120\":2,\"122\":1,\"128\":3}}],[\"defining\",{\"0\":{\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1},\"1\":{\"142\":1,\"144\":1}}],[\"definition\",{\"1\":{\"78\":1,\"109\":1,\"120\":1,\"121\":1,\"128\":1,\"129\":1,\"157\":1}}],[\"definitions\",{\"1\":{\"78\":1,\"142\":1,\"145\":1}}],[\"defines\",{\"1\":{\"120\":1,\"157\":1}}],[\"define\",{\"1\":{\"78\":1,\"120\":2,\"122\":1,\"126\":1,\"129\":1,\"141\":2,\"142\":2,\"144\":1,\"145\":2,\"156\":1}}],[\"defined\",{\"0\":{\"129\":1},\"1\":{\"64\":3,\"74\":2,\"85\":1,\"109\":3,\"115\":1,\"117\":1,\"120\":4,\"121\":1,\"129\":4,\"142\":1,\"145\":1,\"156\":2}}],[\"default\",{\"0\":{\"116\":1},\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"114\":1,\"116\":1,\"134\":1,\"155\":1,\"162\":1}}],[\"deleted\",{\"1\":{\"118\":1}}],[\"delete\",{\"0\":{\"133\":1,\"140\":1},\"1\":{\"3\":1,\"18\":1,\"48\":1,\"69\":2,\"98\":2,\"110\":1,\"133\":3,\"140\":3}}],[\"np\",{\"1\":{\"128\":2}}],[\"npm\",{\"1\":{\"75\":1,\"77\":2}}],[\"numpy\",{\"1\":{\"128\":1}}],[\"numpy==2\",{\"1\":{\"128\":1}}],[\"numeric\",{\"1\":{\"83\":1}}],[\"n\",{\"1\":{\"125\":2,\"150\":1}}],[\"navigate\",{\"1\":{\"94\":1}}],[\"native\",{\"1\":{\"85\":1}}],[\"names\",{\"1\":{\"131\":1}}],[\"namespace\",{\"1\":{\"125\":1}}],[\"name>\",{\"1\":{\"109\":4,\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"name\",{\"1\":{\"39\":2,\"51\":1,\"80\":1,\"110\":1,\"115\":2,\"116\":1,\"117\":4,\"132\":4,\"133\":4,\"135\":6,\"136\":3,\"137\":4,\"138\":4,\"139\":4,\"140\":4,\"142\":2,\"143\":3,\"162\":1}}],[\"networks\",{\"1\":{\"121\":1}}],[\"net\",{\"1\":{\"119\":2,\"145\":2}}],[\"needs\",{\"1\":{\"105\":1}}],[\"need\",{\"1\":{\"77\":1,\"109\":1,\"110\":2,\"112\":1,\"117\":1,\"119\":1,\"123\":2,\"126\":2}}],[\"next\",{\"1\":{\"77\":1}}],[\"new\",{\"0\":{\"152\":1},\"1\":{\"3\":1,\"4\":1,\"18\":1,\"19\":1,\"31\":1,\"36\":1,\"37\":1,\"48\":1,\"49\":1,\"78\":1,\"83\":1,\"109\":1,\"120\":1,\"122\":2,\"125\":4,\"128\":2,\"141\":1,\"142\":2,\"144\":2,\"145\":1,\"150\":1,\"151\":2,\"153\":3}}],[\"non\",{\"1\":{\"145\":1}}],[\"now\",{\"1\":{\"109\":1}}],[\"nothing\",{\"1\":{\"148\":1,\"151\":1,\"152\":1}}],[\"notes\",{\"1\":{\"119\":1,\"141\":1}}],[\"not\",{\"1\":{\"109\":2,\"110\":1,\"115\":1,\"121\":2,\"141\":1,\"144\":2,\"145\":1,\"146\":1,\"163\":1}}],[\"nodejs\",{\"1\":{\"75\":1}}],[\"no\",{\"1\":{\"6\":4,\"9\":3,\"12\":4,\"15\":4,\"21\":4,\"24\":3,\"27\":3,\"33\":2,\"39\":3,\"42\":2,\"51\":3,\"54\":4,\"57\":3,\"60\":2,\"63\":2,\"71\":1,\"83\":1,\"101\":1,\"109\":1,\"114\":6,\"151\":1}}],[\"own\",{\"0\":{\"160\":1},\"1\":{\"160\":1}}],[\"occurs\",{\"1\":{\"158\":1}}],[\"oidc\",{\"1\":{\"117\":1}}],[\"oauth\",{\"1\":{\"117\":2}}],[\"obtain\",{\"1\":{\"119\":1}}],[\"obtaining\",{\"0\":{\"119\":1,\"155\":1}}],[\"obtained\",{\"1\":{\"112\":1}}],[\"objects\",{\"0\":{\"136\":1},\"1\":{\"130\":1,\"134\":2,\"135\":1,\"136\":2,\"137\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"object\",{\"0\":{\"135\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1},\"1\":{\"83\":1,\"114\":1,\"115\":2,\"128\":1,\"134\":2,\"135\":4,\"136\":1,\"137\":3,\"138\":1,\"139\":4,\"140\":1}}],[\"old\",{\"1\":{\"110\":1}}],[\"out\",{\"1\":{\"153\":1}}],[\"outputs\",{\"1\":{\"155\":1}}],[\"output\",{\"0\":{\"96\":1,\"101\":1,\"103\":1},\"1\":{\"6\":2,\"9\":2,\"12\":2,\"15\":2,\"21\":2,\"24\":2,\"27\":2,\"33\":1,\"39\":1,\"42\":1,\"51\":2,\"54\":2,\"57\":2,\"60\":1,\"63\":1,\"71\":1,\"72\":1,\"77\":1,\"118\":3,\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"147\":1,\"149\":1,\"150\":1,\"156\":1,\"162\":1}}],[\"our\",{\"1\":{\"94\":1,\"105\":1,\"106\":1,\"107\":2,\"108\":1,\"157\":1}}],[\"organizing\",{\"1\":{\"134\":1}}],[\"order\",{\"1\":{\"126\":1}}],[\"or\",{\"1\":{\"75\":1,\"77\":1,\"78\":1,\"81\":2,\"82\":1,\"83\":1,\"92\":1,\"107\":1,\"109\":3,\"110\":2,\"114\":1,\"115\":2,\"117\":1,\"119\":1,\"125\":3,\"129\":1,\"134\":1,\"139\":1,\"142\":1,\"143\":1,\"145\":3,\"155\":1}}],[\"origins\",{\"1\":{\"114\":2}}],[\"origin\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1,\"114\":1}}],[\"ok\",{\"1\":{\"72\":1,\"103\":1}}],[\"others\",{\"1\":{\"83\":1}}],[\"otherwise\",{\"1\":{\"78\":1,\"112\":1}}],[\"other\",{\"1\":{\"66\":1,\"76\":1,\"80\":1,\"81\":2,\"83\":1,\"106\":1,\"109\":2,\"110\":1,\"117\":1,\"126\":1,\"141\":1,\"156\":1,\"162\":1}}],[\"opt\",{\"1\":{\"151\":1}}],[\"optional\",{\"1\":{\"75\":1}}],[\"option\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"options\",{\"0\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1},\"1\":{\"15\":1,\"39\":1,\"113\":1,\"117\":1}}],[\"opinion\",{\"1\":{\"83\":1}}],[\"operation\",{\"1\":{\"156\":1}}],[\"operations\",{\"1\":{\"64\":1,\"74\":1,\"157\":1}}],[\"openapi\",{\"1\":{\"154\":1}}],[\"openai\",{\"0\":{\"83\":1},\"1\":{\"75\":1,\"77\":4,\"82\":1,\"83\":3}}],[\"openid\",{\"1\":{\"117\":2}}],[\"open\",{\"1\":{\"83\":2,\"85\":1,\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"150\":1,\"151\":1,\"162\":1}}],[\"offers\",{\"1\":{\"142\":1}}],[\"offer\",{\"1\":{\"121\":1}}],[\"of\",{\"1\":{\"39\":2,\"74\":1,\"78\":2,\"80\":2,\"81\":2,\"83\":3,\"85\":1,\"114\":5,\"115\":1,\"117\":1,\"121\":1,\"125\":1,\"130\":2,\"131\":1,\"132\":1,\"133\":1,\"134\":2,\"135\":2,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"141\":2,\"145\":2,\"146\":2,\"155\":1}}],[\"once\",{\"1\":{\"78\":1,\"81\":1}}],[\"only\",{\"1\":{\"78\":1,\"83\":2,\"109\":1,\"121\":1,\"145\":1,\"146\":1}}],[\"ones\",{\"1\":{\"117\":1}}],[\"one\",{\"1\":{\"74\":1,\"80\":2,\"83\":1,\"115\":1}}],[\"onto\",{\"1\":{\"64\":1,\"74\":1}}],[\"on\",{\"0\":{\"117\":1},\"1\":{\"30\":1,\"45\":1,\"46\":1,\"64\":2,\"66\":1,\"67\":1,\"68\":1,\"74\":2,\"76\":1,\"77\":2,\"78\":1,\"83\":1,\"91\":1,\"92\":1,\"109\":4,\"110\":1,\"117\":2,\"118\":2,\"119\":1,\"125\":2,\"126\":1,\"137\":1,\"145\":1,\"146\":2,\"155\":1,\"156\":2,\"157\":1}}],[\"either\",{\"1\":{\"155\":1}}],[\"equivalent\",{\"1\":{\"130\":1,\"135\":2}}],[\"eval\",{\"1\":{\"125\":4}}],[\"every\",{\"1\":{\"109\":3,\"112\":3,\"143\":1,\"146\":1,\"156\":2,\"157\":1}}],[\"events\",{\"1\":{\"98\":11,\"100\":2,\"101\":1,\"102\":1,\"103\":1,\"109\":4,\"150\":1,\"151\":1,\"156\":1}}],[\"event\",{\"1\":{\"83\":1,\"85\":1,\"98\":4,\"109\":3,\"153\":1}}],[\"edit\",{\"1\":{\"120\":2,\"141\":2,\"142\":2,\"144\":2,\"145\":2}}],[\"escape\",{\"1\":{\"119\":1,\"144\":2,\"145\":1}}],[\"easily\",{\"1\":{\"112\":1}}],[\"each\",{\"1\":{\"64\":1,\"74\":1,\"134\":1}}],[\"error\",{\"1\":{\"110\":6}}],[\"etc\",{\"1\":{\"109\":1,\"110\":1}}],[\"etag\",{\"1\":{\"72\":1,\"103\":1,\"139\":3}}],[\"elaine\",{\"1\":{\"83\":1}}],[\"embedded\",{\"0\":{\"121\":1},\"1\":{\"120\":4,\"121\":3,\"122\":2,\"129\":2}}],[\"emits\",{\"1\":{\"109\":1}}],[\"email\",{\"1\":{\"80\":1,\"115\":2}}],[\"empty\",{\"1\":{\"31\":1,\"120\":1,\"122\":2,\"125\":2,\"128\":2,\"141\":1,\"142\":1,\"145\":1}}],[\"extract\",{\"1\":{\"155\":2}}],[\"external\",{\"0\":{\"123\":1,\"126\":1},\"1\":{\"120\":5,\"121\":3,\"123\":1,\"126\":1,\"128\":1,\"129\":3}}],[\"exit\",{\"1\":{\"150\":1,\"151\":1}}],[\"exists\",{\"1\":{\"144\":1}}],[\"existing\",{\"1\":{\"83\":1,\"161\":2}}],[\"exception\",{\"1\":{\"110\":2}}],[\"execution\",{\"1\":{\"124\":1,\"127\":1}}],[\"execute\",{\"1\":{\"77\":1}}],[\"exec\",{\"1\":{\"110\":1,\"151\":1}}],[\"experiencing\",{\"1\":{\"108\":1}}],[\"exposing\",{\"1\":{\"97\":1}}],[\"expose\",{\"1\":{\"72\":1,\"103\":1,\"123\":1,\"126\":1}}],[\"exposes\",{\"1\":{\"68\":1,\"78\":2}}],[\"exported\",{\"1\":{\"78\":1}}],[\"export\",{\"1\":{\"78\":1,\"155\":1}}],[\"examples\",{\"0\":{\"70\":1,\"88\":1,\"99\":1,\"166\":1},\"1\":{\"67\":2,\"77\":2,\"94\":1}}],[\"example\",{\"0\":{\"64\":1,\"74\":1,\"94\":1,\"96\":1,\"101\":1,\"103\":1,\"118\":1,\"122\":1,\"125\":1,\"128\":1,\"146\":1},\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"64\":2,\"67\":1,\"74\":1,\"77\":1,\"80\":1,\"94\":1,\"119\":1,\"120\":2,\"122\":1,\"124\":1,\"125\":3,\"127\":1,\"128\":5,\"136\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"146\":4,\"155\":1,\"162\":1}}],[\"encode\",{\"1\":{\"119\":1,\"144\":2,\"145\":1}}],[\"ensures\",{\"1\":{\"120\":1}}],[\"ensure\",{\"1\":{\"92\":1}}],[\"environment\",{\"0\":{\"124\":1,\"127\":1},\"1\":{\"120\":1,\"124\":1,\"127\":1}}],[\"environments\",{\"1\":{\"109\":1}}],[\"env\",{\"1\":{\"77\":1,\"114\":3,\"124\":1,\"127\":1}}],[\"enable\",{\"1\":{\"77\":1,\"120\":1}}],[\"enables\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"entire\",{\"1\":{\"110\":1}}],[\"entities\",{\"1\":{\"97\":1}}],[\"entity\",{\"0\":{\"150\":1},\"1\":{\"68\":2,\"78\":2,\"97\":1,\"109\":3,\"146\":3,\"156\":7,\"157\":1}}],[\"entry\",{\"1\":{\"69\":1,\"125\":2}}],[\"endpoint\",{\"0\":{\"146\":1},\"1\":{\"69\":1,\"78\":1,\"98\":1,\"109\":7,\"112\":2,\"131\":1,\"132\":1,\"133\":1,\"134\":2,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"146\":1,\"156\":4}}],[\"endpoints\",{\"0\":{\"69\":1,\"97\":1,\"98\":1},\"1\":{\"64\":1,\"68\":1,\"69\":1,\"74\":1,\"78\":3,\"97\":1,\"109\":1,\"112\":1,\"146\":3,\"154\":1,\"156\":6}}],[\"volume\",{\"1\":{\"134\":1}}],[\"v1\",{\"1\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"vect\",{\"1\":{\"128\":4}}],[\"verify\",{\"1\":{\"139\":1}}],[\"verified\",{\"1\":{\"69\":1}}],[\"version>\",{\"1\":{\"125\":1}}],[\"version\",{\"1\":{\"110\":1,\"125\":1,\"139\":1}}],[\"versatile\",{\"1\":{\"85\":1}}],[\"verbose\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"var=value\",{\"1\":{\"124\":1,\"127\":1}}],[\"varchar>\",{\"1\":{\"128\":2}}],[\"varchar\",{\"1\":{\"119\":6,\"125\":2,\"128\":4,\"141\":6,\"142\":3}}],[\"variables\",{\"0\":{\"124\":1,\"127\":1},\"1\":{\"124\":1,\"127\":1}}],[\"variable\",{\"1\":{\"119\":1}}],[\"various\",{\"1\":{\"113\":1,\"141\":1,\"156\":1}}],[\"valid\",{\"0\":{\"71\":1},\"1\":{\"83\":1,\"100\":1}}],[\"values\",{\"1\":{\"117\":1,\"118\":2,\"135\":1,\"143\":3}}],[\"value\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"83\":1,\"109\":1,\"114\":2,\"116\":1,\"128\":9,\"139\":1}}],[\"via\",{\"1\":{\"112\":1}}],[\"views\",{\"1\":{\"141\":2,\"144\":1,\"145\":5}}],[\"view\",{\"0\":{\"144\":1,\"145\":1,\"175\":1},\"1\":{\"109\":1,\"119\":3,\"144\":3,\"145\":7,\"155\":1}}],[\"visit\",{\"1\":{\"66\":1,\"76\":1}}],[\"v\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"71\":1,\"72\":1,\"100\":1,\"102\":1}}],[\"<version>0\",{\"1\":{\"125\":1}}],[\"<groupid>com\",{\"1\":{\"125\":1}}],[\"<dependency>\",{\"1\":{\"125\":1}}],[\"<migration\",{\"1\":{\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"<entity>\",{\"1\":{\"156\":11}}],[\"<entity\",{\"1\":{\"109\":3}}],[\"<\",{\"1\":{\"71\":3,\"72\":7,\"101\":3,\"103\":7,\"125\":1}}],[\"<secret>\",{\"1\":{\"50\":1,\"51\":2}}],[\"<spec>\",{\"1\":{\"5\":1,\"6\":2}}],[\"<realm>\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"<providerid>\",{\"1\":{\"50\":1,\"51\":2}}],[\"<clientid>\",{\"1\":{\"50\":1,\"51\":2}}],[\"<command>\",{\"1\":{\"29\":1,\"44\":1}}],[\"<config>\",{\"1\":{\"20\":1,\"21\":2}}],[\"<artifactid>risingwave\",{\"1\":{\"125\":1}}],[\"<args>\",{\"1\":{\"29\":1,\"44\":1}}],[\"<alias>\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"<name>\",{\"1\":{\"38\":1,\"39\":1}}],[\"<id>\",{\"1\":{\"5\":1,\"6\":1,\"11\":1,\"12\":1,\"14\":1,\"15\":1,\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"26\":1,\"27\":1}}],[\"|\",{\"1\":{\"5\":3,\"8\":2,\"11\":2,\"14\":2,\"20\":3,\"23\":2,\"26\":2,\"32\":1,\"38\":1,\"41\":1,\"50\":7,\"53\":4,\"56\":4,\"59\":1,\"62\":1}}],[\"high\",{\"1\":{\"83\":1}}],[\"happened\",{\"1\":{\"156\":1}}],[\"hand\",{\"1\":{\"109\":2,\"126\":1,\"156\":1}}],[\"hash\",{\"1\":{\"139\":1}}],[\"has\",{\"1\":{\"83\":2,\"118\":1,\"139\":1}}],[\"have\",{\"1\":{\"66\":1,\"76\":1,\"78\":1,\"81\":1,\"92\":1,\"107\":1,\"115\":1,\"121\":1,\"122\":1,\"125\":2,\"128\":1}}],[\"hold\",{\"1\":{\"130\":1,\"134\":1}}],[\"home\",{\"1\":{\"110\":1}}],[\"homebrew\",{\"1\":{\"65\":1,\"66\":2,\"75\":1,\"76\":2,\"92\":1}}],[\"however\",{\"1\":{\"134\":1}}],[\"how\",{\"0\":{\"112\":1},\"1\":{\"80\":1,\"109\":3,\"110\":1,\"111\":2}}],[\"host\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1}}],[\"here\",{\"1\":{\"117\":1,\"129\":1}}],[\"hello\",{\"1\":{\"100\":1,\"103\":1}}],[\"help\",{\"0\":{\"28\":1},\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"32\":1,\"33\":2,\"38\":1,\"39\":2,\"41\":1,\"42\":2,\"45\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":2,\"62\":1,\"63\":2,\"108\":1}}],[\"header\",{\"1\":{\"109\":2,\"112\":1,\"137\":1,\"139\":1,\"156\":1}}],[\"headers\",{\"1\":{\"72\":1,\"103\":1}}],[\"head\",{\"1\":{\"66\":1,\"76\":1}}],[\"http2\",{\"1\":{\"150\":1}}],[\"https\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":1,\"94\":1}}],[\"http\",{\"0\":{\"156\":1},\"1\":{\"64\":1,\"68\":1,\"69\":5,\"71\":3,\"72\":3,\"74\":1,\"78\":1,\"91\":1,\"96\":1,\"97\":1,\"98\":5,\"100\":1,\"101\":2,\"102\":1,\"103\":2,\"109\":1,\"112\":1,\"116\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"146\":6,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"152\":1,\"154\":1,\"155\":6,\"156\":6}}],[\"h\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"32\":1,\"33\":2,\"38\":1,\"39\":2,\"41\":1,\"42\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":2,\"62\":1,\"63\":2,\"71\":2,\"100\":2,\"122\":1,\"125\":1,\"128\":1,\"138\":1,\"139\":2,\"148\":1,\"152\":1}}],[\"flow\",{\"1\":{\"129\":1}}],[\"flexibility\",{\"1\":{\"121\":1}}],[\"facilitates\",{\"1\":{\"145\":1}}],[\"facebook\",{\"1\":{\"117\":3}}],[\"faq\",{\"0\":{\"109\":1}}],[\"functionality\",{\"1\":{\"134\":1}}],[\"function\",{\"0\":{\"120\":1,\"129\":1,\"171\":1},\"1\":{\"120\":8,\"121\":2,\"122\":3,\"123\":3,\"125\":5,\"126\":3,\"128\":6,\"129\":3}}],[\"functions\",{\"1\":{\"83\":3,\"85\":1,\"120\":11,\"121\":1,\"123\":1,\"125\":5,\"126\":2,\"128\":2,\"129\":10}}],[\"funds\",{\"1\":{\"81\":1}}],[\"fulfill\",{\"1\":{\"65\":1,\"75\":1}}],[\"frequently\",{\"0\":{\"109\":1}}],[\"fred\",{\"1\":{\"83\":1}}],[\"frontend\",{\"1\":{\"77\":1}}],[\"from\",{\"1\":{\"10\":1,\"15\":1,\"25\":1,\"39\":1,\"55\":1,\"74\":1,\"77\":1,\"80\":1,\"82\":1,\"83\":1,\"96\":4,\"110\":2,\"115\":1,\"119\":2,\"120\":2,\"128\":1,\"143\":1,\"144\":2,\"145\":4,\"154\":1}}],[\"fraud\",{\"0\":{\"83\":1},\"1\":{\"77\":1,\"82\":2,\"83\":2}}],[\"fetch\",{\"0\":{\"72\":1,\"102\":1,\"147\":1,\"161\":1},\"1\":{\"69\":2,\"78\":4,\"98\":2,\"102\":1,\"141\":1,\"156\":1,\"161\":1}}],[\"features\",{\"1\":{\"109\":1}}],[\"feature\",{\"1\":{\"1\":1,\"97\":1,\"134\":1}}],[\"first\",{\"1\":{\"125\":1}}],[\"firebase\",{\"1\":{\"85\":1}}],[\"find\",{\"1\":{\"77\":1,\"83\":1}}],[\"finish\",{\"1\":{\"67\":1,\"77\":1,\"82\":1}}],[\"filename\",{\"1\":{\"134\":1,\"162\":1}}],[\"files\",{\"1\":{\"36\":1,\"40\":1,\"109\":1,\"120\":1,\"134\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"file\",{\"1\":{\"31\":1,\"36\":1,\"37\":1,\"77\":1,\"83\":1,\"109\":4,\"111\":1,\"114\":1,\"120\":6,\"122\":2,\"123\":1,\"124\":1,\"125\":2,\"126\":2,\"127\":1,\"128\":3,\"129\":1,\"134\":1,\"135\":3,\"136\":1,\"137\":3,\"138\":7,\"139\":7,\"140\":2,\"141\":5,\"142\":6,\"143\":3,\"144\":5,\"145\":5,\"155\":2,\"160\":1,\"161\":2,\"162\":2}}],[\"fssl\",{\"1\":{\"66\":1,\"76\":1}}],[\"found\",{\"1\":{\"110\":1,\"112\":1,\"163\":1}}],[\"follow\",{\"1\":{\"111\":1}}],[\"follows\",{\"1\":{\"109\":2}}],[\"following\",{\"1\":{\"65\":1,\"66\":2,\"73\":1,\"75\":1,\"76\":2,\"77\":2,\"83\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"100\":1,\"104\":1,\"114\":2,\"115\":1,\"117\":1,\"118\":1,\"120\":3,\"122\":1,\"125\":4,\"128\":3,\"130\":1,\"134\":1,\"135\":1,\"141\":2,\"142\":2,\"144\":2,\"145\":2,\"146\":1,\"155\":2,\"156\":1,\"161\":1,\"162\":2}}],[\"folder\",{\"1\":{\"31\":1,\"94\":1,\"120\":1,\"122\":2,\"125\":3,\"128\":2,\"130\":1,\"135\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"form\",{\"1\":{\"123\":1}}],[\"formerly\",{\"1\":{\"117\":1}}],[\"formats\",{\"1\":{\"156\":2}}],[\"format\",{\"1\":{\"114\":1,\"120\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"for\",{\"1\":{\"1\":1,\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"16\":1,\"21\":1,\"24\":1,\"27\":1,\"30\":2,\"33\":1,\"34\":1,\"39\":1,\"42\":1,\"45\":2,\"46\":1,\"51\":1,\"52\":1,\"54\":1,\"57\":1,\"58\":1,\"60\":1,\"61\":1,\"63\":1,\"66\":1,\"67\":1,\"76\":1,\"77\":1,\"82\":1,\"83\":1,\"85\":1,\"97\":1,\"105\":2,\"109\":3,\"110\":2,\"114\":3,\"117\":3,\"119\":1,\"120\":3,\"121\":1,\"124\":1,\"125\":2,\"127\":1,\"128\":1,\"129\":2,\"130\":1,\"134\":3,\"135\":1,\"139\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":2,\"146\":1,\"154\":1,\"156\":2,\"157\":3,\"162\":2}}],[\"syntax\",{\"1\":{\"141\":2,\"142\":1,\"144\":1,\"145\":1}}],[\"system\",{\"1\":{\"83\":1,\"92\":1,\"134\":2}}],[\"split\",{\"1\":{\"125\":2,\"128\":1}}],[\"specify\",{\"1\":{\"145\":1}}],[\"specific\",{\"1\":{\"83\":1,\"109\":1,\"141\":1}}],[\"specifications\",{\"0\":{\"154\":1,\"155\":1},\"1\":{\"3\":1,\"7\":1,\"30\":1,\"45\":1,\"91\":1,\"146\":1,\"155\":2}}],[\"specification\",{\"0\":{\"156\":1,\"157\":1},\"1\":{\"3\":3,\"4\":1,\"6\":2,\"10\":1,\"12\":1,\"13\":1,\"15\":1,\"154\":2,\"155\":6,\"156\":1,\"157\":1}}],[\"specified\",{\"1\":{\"74\":1,\"109\":1}}],[\"spec\",{\"1\":{\"5\":1,\"6\":2,\"64\":5,\"74\":5,\"96\":2,\"155\":5}}],[\"src\",{\"1\":{\"125\":1}}],[\"save\",{\"1\":{\"145\":1,\"161\":1}}],[\"same\",{\"1\":{\"129\":1,\"142\":1,\"145\":1}}],[\"saml\",{\"1\":{\"117\":3}}],[\"safe\",{\"1\":{\"83\":6}}],[\"sse\",{\"0\":{\"150\":1},\"1\":{\"109\":1,\"153\":2,\"156\":1}}],[\"sso\",{\"0\":{\"46\":1,\"49\":1,\"52\":1,\"55\":1,\"117\":1},\"1\":{\"30\":1,\"45\":1,\"47\":1,\"50\":1,\"53\":1,\"56\":1,\"117\":3,\"118\":6}}],[\"scalarfunction\",{\"1\":{\"125\":3}}],[\"scopes\",{\"1\":{\"109\":1,\"114\":2}}],[\"schema\",{\"1\":{\"78\":3,\"142\":1,\"145\":1,\"156\":2,\"157\":1}}],[\"slack\",{\"1\":{\"106\":2}}],[\"so\",{\"1\":{\"121\":1}}],[\"sources\",{\"1\":{\"145\":1}}],[\"source\",{\"1\":{\"85\":1,\"145\":1}}],[\"something\",{\"1\":{\"83\":1,\"109\":1}}],[\"some\",{\"1\":{\"78\":1,\"109\":1,\"117\":1,\"143\":3,\"144\":1}}],[\"shepherd\",{\"1\":{\"147\":1,\"150\":1}}],[\"sharing\",{\"1\":{\"114\":1}}],[\"share\",{\"1\":{\"106\":1}}],[\"should\",{\"1\":{\"81\":1,\"83\":1,\"109\":1}}],[\"shows\",{\"1\":{\"13\":1}}],[\"show\",{\"0\":{\"13\":1},\"1\":{\"3\":2,\"6\":1,\"9\":1,\"12\":1,\"14\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"51\":1,\"54\":1,\"57\":1,\"78\":1,\"155\":2}}],[\"sh\",{\"1\":{\"66\":1,\"76\":1,\"151\":1}}],[\"sudo\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"supports\",{\"1\":{\"120\":1,\"129\":1,\"156\":1,\"157\":1}}],[\"supported\",{\"1\":{\"117\":2,\"120\":1,\"130\":1,\"135\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"support\",{\"0\":{\"90\":1,\"105\":1,\"108\":1,\"168\":1},\"1\":{\"105\":1,\"108\":2,\"109\":2,\"120\":2,\"129\":1,\"145\":1}}],[\"supporting\",{\"1\":{\"85\":1}}],[\"suite\",{\"1\":{\"85\":1}}],[\"summary\",{\"1\":{\"83\":2}}],[\"succeeds\",{\"1\":{\"120\":1,\"131\":1,\"132\":1,\"133\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"successfully\",{\"1\":{\"77\":2,\"96\":1,\"118\":2}}],[\"such\",{\"1\":{\"78\":1,\"112\":1,\"156\":1}}],[\"sure\",{\"1\":{\"65\":1,\"75\":1,\"125\":2}}],[\"subscribe\",{\"1\":{\"109\":1,\"156\":1,\"157\":1}}],[\"subsequent\",{\"1\":{\"83\":1}}],[\"sub\",{\"0\":{\"3\":1,\"18\":1,\"30\":1,\"36\":1,\"45\":1,\"48\":1},\"1\":{\"1\":1,\"16\":1,\"34\":1,\"46\":1}}],[\"sql\",{\"1\":{\"31\":1,\"77\":1,\"115\":1,\"120\":9,\"121\":1,\"129\":5,\"141\":1,\"142\":3,\"143\":2,\"144\":2,\"145\":2}}],[\"series\",{\"1\":{\"125\":4}}],[\"served\",{\"1\":{\"134\":1}}],[\"serves\",{\"1\":{\"134\":1,\"156\":2}}],[\"server\",{\"1\":{\"77\":1,\"84\":1,\"96\":1,\"109\":1,\"123\":1,\"126\":1,\"134\":1,\"146\":1,\"151\":1,\"156\":2,\"162\":1}}],[\"service\",{\"0\":{\"158\":1},\"1\":{\"109\":1,\"112\":1,\"116\":1,\"117\":1,\"158\":2}}],[\"select\",{\"1\":{\"119\":2,\"120\":3,\"122\":1,\"125\":3,\"128\":3,\"144\":2,\"145\":2}}],[\"section\",{\"1\":{\"146\":1}}],[\"security\",{\"1\":{\"85\":1}}],[\"second\",{\"1\":{\"81\":1,\"125\":1}}],[\"secret\",{\"1\":{\"50\":1,\"51\":2,\"114\":5,\"117\":2,\"118\":2}}],[\"sendpayment\",{\"1\":{\"119\":2,\"144\":2,\"145\":2}}],[\"sending\",{\"1\":{\"81\":1}}],[\"send\",{\"0\":{\"81\":1},\"1\":{\"81\":3,\"146\":1}}],[\"sent\",{\"1\":{\"80\":1,\"109\":1,\"156\":1}}],[\"see\",{\"1\":{\"80\":1,\"153\":1}}],[\"seeder\",{\"0\":{\"143\":1}}],[\"seeded\",{\"1\":{\"114\":1,\"115\":2}}],[\"seeding\",{\"0\":{\"115\":1}}],[\"seed\",{\"1\":{\"31\":1,\"77\":1,\"96\":1,\"115\":1,\"143\":3}}],[\"session\",{\"1\":{\"80\":1}}],[\"set\",{\"1\":{\"77\":1,\"78\":1,\"112\":2,\"114\":1,\"118\":1,\"145\":1}}],[\"settings\",{\"1\":{\"117\":1}}],[\"setting\",{\"0\":{\"67\":1,\"77\":1},\"1\":{\"109\":1}}],[\"separates\",{\"1\":{\"39\":1}}],[\"separate\",{\"1\":{\"15\":1}}],[\"simplifies\",{\"1\":{\"141\":1}}],[\"similar\",{\"1\":{\"83\":1,\"134\":1}}],[\"similarly\",{\"1\":{\"69\":1}}],[\"since\",{\"1\":{\"139\":1}}],[\"single\",{\"0\":{\"117\":1},\"1\":{\"30\":1,\"45\":1,\"117\":2}}],[\"sign\",{\"0\":{\"117\":1},\"1\":{\"30\":1,\"45\":1,\"46\":1,\"117\":2}}],[\"still\",{\"1\":{\"110\":1}}],[\"state\",{\"1\":{\"139\":1}}],[\"statement\",{\"1\":{\"129\":1}}],[\"static\",{\"1\":{\"125\":5}}],[\"status\",{\"1\":{\"110\":1,\"138\":1,\"139\":1,\"140\":1,\"144\":2}}],[\"stack\",{\"1\":{\"94\":1}}],[\"started\",{\"0\":{\"86\":1,\"167\":1},\"1\":{\"91\":1}}],[\"starting\",{\"1\":{\"81\":1}}],[\"starts\",{\"1\":{\"58\":1}}],[\"start\",{\"0\":{\"58\":1,\"95\":1},\"1\":{\"30\":2,\"45\":2,\"59\":1,\"65\":1,\"67\":2,\"75\":1,\"77\":3,\"94\":1,\"95\":2,\"109\":3,\"110\":1,\"111\":1,\"112\":1,\"122\":1,\"125\":2,\"128\":1,\"160\":1}}],[\"steps\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"step\",{\"0\":{\"93\":1,\"94\":1,\"95\":1,\"97\":1,\"104\":1},\"1\":{\"91\":2}}],[\"straightforward\",{\"1\":{\"144\":1}}],[\"structured\",{\"1\":{\"134\":1}}],[\"struct<key\",{\"1\":{\"128\":2}}],[\"struct\",{\"1\":{\"128\":1}}],[\"str\",{\"1\":{\"125\":2,\"128\":1}}],[\"string\",{\"1\":{\"83\":1,\"114\":7,\"125\":4}}],[\"streamline\",{\"1\":{\"142\":1}}],[\"streams\",{\"0\":{\"150\":1},\"1\":{\"141\":2,\"144\":1}}],[\"stream\",{\"0\":{\"141\":1,\"153\":1,\"173\":1},\"1\":{\"78\":6,\"83\":1,\"109\":3,\"119\":3,\"125\":4,\"141\":6,\"144\":1,\"145\":1,\"146\":1,\"150\":1,\"153\":2,\"156\":7,\"157\":1}}],[\"streaming\",{\"1\":{\"78\":2,\"85\":1,\"120\":1}}],[\"streampay\",{\"0\":{\"74\":1,\"78\":1},\"1\":{\"74\":1,\"77\":5,\"78\":21,\"83\":1,\"119\":3,\"141\":1,\"142\":1,\"143\":3,\"144\":3,\"145\":2,\"155\":1}}],[\"studio\",{\"1\":{\"78\":1,\"155\":1}}],[\"storing\",{\"1\":{\"134\":1}}],[\"storage\",{\"0\":{\"134\":1,\"172\":1},\"1\":{\"131\":2,\"132\":2,\"133\":2,\"134\":4,\"136\":2,\"137\":2,\"138\":2,\"139\":2,\"140\":2}}],[\"stored\",{\"1\":{\"67\":1,\"68\":1,\"77\":1,\"78\":1,\"97\":1,\"123\":1,\"126\":1}}],[\"stopping\",{\"0\":{\"73\":1,\"84\":1}}],[\"stops\",{\"1\":{\"61\":1}}],[\"stop\",{\"0\":{\"61\":1,\"104\":1},\"1\":{\"30\":2,\"45\":2,\"62\":1,\"73\":2,\"84\":2,\"104\":2,\"110\":2,\"122\":2,\"125\":2,\"128\":2}}],[\"s\",{\"1\":{\"1\":1,\"5\":1,\"6\":2,\"16\":1,\"39\":2,\"50\":1,\"51\":2,\"78\":2,\"97\":1,\"109\":1,\"115\":4,\"125\":5,\"134\":1,\"141\":1,\"146\":1,\"162\":1}}],[\"aqiacg==\",{\"1\":{\"153\":1}}],[\"aqiaca==\",{\"1\":{\"150\":1}}],[\"aqiaba==\",{\"1\":{\"150\":1}}],[\"aqiaag==\",{\"1\":{\"72\":1,\"103\":1}}],[\"ability\",{\"1\":{\"120\":1}}],[\"about\",{\"1\":{\"107\":1,\"154\":1,\"156\":2,\"157\":1}}],[\"at\",{\"1\":{\"110\":1}}],[\"auto\",{\"1\":{\"123\":1,\"126\":1}}],[\"automatically\",{\"1\":{\"64\":1,\"74\":1,\"85\":1,\"91\":1,\"150\":1,\"151\":1,\"160\":1}}],[\"authorization\",{\"1\":{\"109\":1,\"112\":1}}],[\"authenticating\",{\"1\":{\"112\":1}}],[\"authentication\",{\"0\":{\"111\":1,\"113\":1,\"169\":1},\"1\":{\"109\":6,\"111\":2,\"113\":1,\"114\":1,\"118\":1}}],[\"authenticate\",{\"1\":{\"112\":1,\"117\":1}}],[\"authenticated\",{\"0\":{\"119\":1},\"1\":{\"109\":3,\"119\":1}}],[\"amount\",{\"1\":{\"83\":1,\"119\":5,\"141\":1,\"145\":4}}],[\"advanced\",{\"1\":{\"120\":1}}],[\"advisable\",{\"1\":{\"83\":1}}],[\"adjust\",{\"1\":{\"118\":2,\"156\":1}}],[\"adjusted\",{\"1\":{\"109\":1}}],[\"admin\",{\"1\":{\"116\":4,\"134\":2,\"162\":1}}],[\"adapter\",{\"1\":{\"112\":1}}],[\"address\",{\"1\":{\"146\":2}}],[\"additional\",{\"1\":{\"117\":1,\"123\":1,\"126\":1,\"162\":1}}],[\"adding\",{\"0\":{\"124\":1,\"127\":1},\"1\":{\"109\":1}}],[\"added\",{\"1\":{\"39\":1,\"118\":1,\"153\":1}}],[\"adds\",{\"1\":{\"4\":1,\"19\":1,\"49\":1}}],[\"add\",{\"0\":{\"4\":1,\"19\":1,\"37\":1,\"49\":1},\"1\":{\"3\":2,\"5\":1,\"18\":2,\"20\":1,\"36\":1,\"38\":1,\"48\":2,\"50\":1,\"77\":1,\"117\":1,\"118\":2,\"120\":4,\"122\":1,\"123\":1,\"124\":1,\"125\":2,\"127\":1,\"128\":2,\"141\":2,\"142\":2,\"144\":2,\"145\":2,\"162\":2}}],[\"accept\",{\"1\":{\"156\":1}}],[\"accessing\",{\"1\":{\"154\":1}}],[\"accessible\",{\"1\":{\"112\":1}}],[\"access\",{\"1\":{\"71\":1,\"72\":2,\"101\":1,\"103\":2,\"109\":2,\"112\":1,\"121\":1,\"125\":3}}],[\"according\",{\"1\":{\"146\":1}}],[\"accommodate\",{\"1\":{\"120\":1,\"129\":1}}],[\"actual\",{\"1\":{\"138\":1,\"139\":1}}],[\"act\",{\"1\":{\"134\":1}}],[\"action\",{\"1\":{\"146\":1}}],[\"actions\",{\"1\":{\"130\":1,\"135\":1}}],[\"activities\",{\"1\":{\"78\":3}}],[\"acts\",{\"1\":{\"97\":1}}],[\"assigned\",{\"1\":{\"114\":1,\"115\":1}}],[\"assistance\",{\"1\":{\"106\":1}}],[\"asked\",{\"0\":{\"109\":1}}],[\"asynchronous\",{\"1\":{\"85\":2}}],[\"asyncapi\",{\"0\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"154\":1,\"155\":1},\"1\":{\"1\":1,\"2\":1,\"3\":4,\"4\":1,\"5\":1,\"6\":2,\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"30\":2,\"45\":2,\"64\":4,\"74\":4,\"78\":6,\"91\":2,\"96\":4,\"154\":3,\"155\":17,\"156\":1,\"157\":1}}],[\"as\",{\"1\":{\"78\":1,\"81\":1,\"82\":1,\"83\":2,\"97\":1,\"109\":1,\"112\":2,\"119\":5,\"120\":3,\"121\":2,\"122\":1,\"123\":1,\"125\":3,\"128\":4,\"129\":1,\"134\":2,\"144\":5,\"145\":6,\"146\":1,\"150\":1,\"151\":2,\"156\":1,\"162\":1}}],[\"after\",{\"1\":{\"77\":1,\"114\":1,\"120\":1,\"123\":1,\"126\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"162\":1}}],[\"ai\",{\"0\":{\"74\":1},\"1\":{\"83\":2}}],[\"awesome\",{\"1\":{\"71\":1}}],[\"apache\",{\"1\":{\"125\":1}}],[\"apt\",{\"1\":{\"122\":1,\"125\":1,\"128\":1}}],[\"apicurio\",{\"1\":{\"96\":2}}],[\"api\",{\"0\":{\"97\":1,\"164\":1},\"1\":{\"75\":1,\"77\":3,\"78\":1,\"110\":1,\"117\":1,\"134\":2,\"156\":1}}],[\"apis\",{\"0\":{\"68\":1,\"78\":1},\"1\":{\"78\":3,\"85\":1,\"141\":1,\"142\":1}}],[\"approach\",{\"1\":{\"91\":1}}],[\"approve\",{\"1\":{\"82\":2}}],[\"app\",{\"1\":{\"74\":1,\"83\":1,\"117\":2}}],[\"application\",{\"1\":{\"71\":2,\"72\":1,\"77\":1,\"100\":1,\"101\":1,\"103\":1,\"111\":1,\"112\":1,\"114\":2,\"115\":1,\"117\":1,\"141\":1,\"148\":1,\"152\":1}}],[\"aklivity\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":2,\"93\":1,\"94\":1,\"118\":2,\"125\":1}}],[\"always\",{\"1\":{\"144\":1}}],[\"also\",{\"1\":{\"119\":1,\"123\":1,\"126\":1,\"134\":1,\"143\":1}}],[\"already\",{\"1\":{\"110\":1}}],[\"alternative\",{\"1\":{\"85\":1}}],[\"although\",{\"1\":{\"83\":1}}],[\"alias\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"117\":2,\"118\":3}}],[\"allen\",{\"1\":{\"80\":3,\"83\":8,\"143\":3}}],[\"allows\",{\"1\":{\"144\":1}}],[\"allowed\",{\"1\":{\"114\":1}}],[\"allow\",{\"1\":{\"71\":1,\"72\":1,\"101\":1,\"103\":1,\"145\":1,\"158\":1}}],[\"all\",{\"0\":{\"131\":1,\"136\":1,\"147\":1},\"1\":{\"1\":1,\"3\":1,\"7\":1,\"16\":1,\"18\":1,\"22\":1,\"28\":1,\"34\":1,\"36\":1,\"40\":1,\"43\":1,\"46\":1,\"48\":1,\"52\":1,\"69\":1,\"78\":5,\"98\":1,\"119\":1,\"131\":1,\"136\":1,\"141\":1,\"145\":1,\"146\":1,\"156\":1}}],[\"array\",{\"1\":{\"125\":5,\"131\":1,\"136\":1}}],[\"arrayaccess\",{\"1\":{\"125\":1}}],[\"arrow\",{\"1\":{\"120\":1,\"126\":1,\"128\":1}}],[\"artifacts\",{\"1\":{\"158\":1}}],[\"artifactid>\",{\"1\":{\"125\":1}}],[\"article\",{\"1\":{\"43\":1,\"109\":2,\"120\":1,\"142\":1,\"144\":1,\"145\":1,\"154\":1,\"162\":1}}],[\"are\",{\"1\":{\"64\":2,\"69\":1,\"74\":1,\"78\":1,\"81\":1,\"109\":1,\"113\":1,\"115\":1,\"117\":4,\"121\":1,\"129\":1,\"130\":1,\"134\":1,\"135\":1,\"151\":1,\"156\":1}}],[\"argument\",{\"1\":{\"15\":1,\"39\":1}}],[\"arguments\",{\"1\":{\"15\":1,\"39\":1}}],[\"avro\",{\"1\":{\"156\":1}}],[\"avoid\",{\"1\":{\"15\":1}}],[\"available\",{\"0\":{\"98\":1,\"114\":1},\"1\":{\"1\":1,\"3\":1,\"7\":1,\"16\":1,\"22\":1,\"28\":1,\"34\":1,\"43\":1,\"46\":1,\"52\":1,\"69\":1,\"78\":1,\"112\":1,\"131\":1,\"134\":1,\"146\":1,\"155\":1,\"156\":1,\"158\":1}}],[\"annotate\",{\"1\":{\"126\":1}}],[\"answer\",{\"1\":{\"83\":1}}],[\"any\",{\"1\":{\"81\":1,\"109\":1,\"123\":1,\"126\":1,\"150\":1,\"151\":1,\"156\":1}}],[\"another\",{\"1\":{\"74\":1,\"145\":1}}],[\"and\",{\"1\":{\"31\":1,\"64\":2,\"66\":1,\"67\":1,\"74\":2,\"76\":1,\"77\":2,\"82\":1,\"83\":5,\"85\":3,\"91\":1,\"105\":1,\"106\":1,\"109\":6,\"111\":2,\"112\":2,\"115\":1,\"117\":1,\"119\":1,\"120\":7,\"121\":1,\"123\":1,\"125\":2,\"126\":2,\"128\":2,\"129\":4,\"134\":2,\"135\":1,\"137\":1,\"141\":5,\"142\":4,\"143\":1,\"144\":2,\"145\":2,\"146\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":7,\"157\":4,\"158\":2,\"162\":2}}],[\"an\",{\"0\":{\"137\":1,\"138\":1,\"139\":1,\"140\":1},\"1\":{\"3\":2,\"10\":1,\"13\":1,\"31\":1,\"48\":1,\"55\":1,\"64\":2,\"68\":1,\"69\":1,\"74\":3,\"77\":1,\"78\":1,\"85\":1,\"97\":1,\"98\":4,\"108\":1,\"109\":4,\"110\":2,\"112\":1,\"117\":1,\"118\":2,\"119\":1,\"120\":3,\"122\":2,\"123\":1,\"125\":2,\"128\":2,\"130\":1,\"131\":1,\"134\":3,\"135\":2,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":2,\"145\":2,\"146\":3,\"156\":3,\"162\":2}}],[\"a\",{\"0\":{\"71\":1,\"72\":1,\"100\":1,\"102\":1,\"132\":1,\"133\":1,\"136\":1,\"148\":1},\"1\":{\"3\":1,\"4\":1,\"18\":2,\"19\":1,\"25\":1,\"30\":1,\"31\":1,\"36\":1,\"37\":1,\"45\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"78\":1,\"80\":1,\"81\":3,\"82\":2,\"83\":3,\"85\":2,\"91\":1,\"100\":1,\"102\":1,\"109\":9,\"111\":1,\"112\":1,\"114\":2,\"115\":1,\"117\":1,\"118\":1,\"120\":7,\"122\":8,\"123\":2,\"125\":9,\"126\":1,\"128\":7,\"129\":1,\"130\":4,\"132\":2,\"133\":2,\"134\":6,\"135\":4,\"136\":1,\"138\":1,\"139\":3,\"140\":1,\"141\":2,\"142\":5,\"143\":1,\"144\":3,\"145\":5,\"153\":1,\"154\":1,\"157\":1,\"158\":1,\"160\":1,\"162\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
