const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":164,\"nextId\":164,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2#usage\",\"3\":\"2#sub-commands\",\"4\":\"2#asyncapi-add\",\"5\":\"2#usage-1\",\"6\":\"2#options\",\"7\":\"2#asyncapi-list\",\"8\":\"2#usage-2\",\"9\":\"2#options-1\",\"10\":\"2#asyncapi-remove\",\"11\":\"2#usage-3\",\"12\":\"2#options-2\",\"13\":\"2#asyncapi-show\",\"14\":\"2#usage-4\",\"15\":\"2#options-3\",\"16\":\"3\",\"17\":\"3#usage\",\"18\":\"3#sub-commands\",\"19\":\"3#config-add\",\"20\":\"3#usage-1\",\"21\":\"3#options\",\"22\":\"3#config-list\",\"23\":\"3#usage-2\",\"24\":\"3#options-1\",\"25\":\"3#config-remove\",\"26\":\"3#usage-3\",\"27\":\"3#options-2\",\"28\":\"4\",\"29\":\"4#usage\",\"30\":\"4#sub-commands\",\"31\":\"5\",\"32\":\"5#usage\",\"33\":\"5#options\",\"34\":\"6\",\"35\":\"6#usage\",\"36\":\"6#sub-commands\",\"37\":\"6#migration-add\",\"38\":\"6#usage-1\",\"39\":\"6#options\",\"40\":\"6#migration-list\",\"41\":\"6#usage-2\",\"42\":\"6#options-1\",\"43\":\"7\",\"44\":\"7#usage\",\"45\":\"7#sub-commands\",\"46\":\"8\",\"47\":\"8#usage\",\"48\":\"8#sub-commands\",\"49\":\"8#sso-add\",\"50\":\"8#usage-1\",\"51\":\"8#options\",\"52\":\"8#sso-list\",\"53\":\"8#usage-2\",\"54\":\"8#options-1\",\"55\":\"8#sso-remove\",\"56\":\"8#usage-3\",\"57\":\"8#options-2\",\"58\":\"9\",\"59\":\"9#usage\",\"60\":\"9#options\",\"61\":\"10\",\"62\":\"10#usage\",\"63\":\"10#options\",\"64\":\"11\",\"65\":\"11#prerequisites\",\"66\":\"11#installing-zillabase-cli\",\"67\":\"11#setting-up-the-project\",\"68\":\"11#using-the-petstore-apis\",\"69\":\"11#endpoints\",\"70\":\"11#examples\",\"71\":\"11#publish-a-valid-record\",\"72\":\"11#fetch-a-record\",\"73\":\"11#stopping-the-project\",\"74\":\"12\",\"75\":\"12#prerequisites\",\"76\":\"12#installing-zillabase-cli\",\"77\":\"12#setting-up-the-project\",\"78\":\"12#streampay-apis\",\"79\":\"12#using-the-project\",\"80\":\"12#login\",\"81\":\"12#send-money\",\"82\":\"12#transfer-requests\",\"83\":\"12#openai-fraud-risk-with-zillabase\",\"84\":\"12#stopping-the-project\",\"85\":\"13\",\"86\":\"13#getting-started\",\"87\":\"13#concepts\",\"88\":\"13#examples\",\"89\":\"13#support\",\"90\":\"14\",\"91\":\"14#prerequisites\",\"92\":\"14#install-zillabase-cli\",\"93\":\"14#integrate-your-project-with-zillabase\",\"94\":\"14#step-1-initializing-a-zillabase-project\",\"95\":\"14#step-2-defining-data-models-and-streams\",\"96\":\"14#step-3-defining-business-logic-via-python-or-java-functions-optional\",\"97\":\"14#step-4-calling-the-function-optional\",\"98\":\"14#step-5-setting-up-authentication-optional\",\"99\":\"14#step-6-pre-populate-data-during-startup-optional\",\"100\":\"14#step-7-start-zillabase\",\"101\":\"14#step-8-testing-the-endpoints\",\"102\":\"14#step-9-stop-zillabase\",\"103\":\"15\",\"104\":\"15#💬-developer-community\",\"105\":\"15#💡-product-partnership-inquiries\",\"106\":\"15#🆘-technical-support\",\"107\":\"16\",\"108\":\"17\",\"109\":\"18\",\"110\":\"18#how-it-works\",\"111\":\"19\",\"112\":\"19#available-config\",\"113\":\"19#seeding-user\",\"114\":\"19#default-configuration\",\"115\":\"20\",\"116\":\"20#example\",\"117\":\"21\",\"118\":\"22\",\"119\":\"23\",\"120\":\"23#example\",\"121\":\"24\",\"122\":\"24#adding-environment-variables\",\"123\":\"24#example\",\"124\":\"25\",\"125\":\"25#adding-environment-variables\",\"126\":\"25#example\",\"127\":\"26\",\"128\":\"30\",\"129\":\"31\",\"130\":\"32\",\"131\":\"33\",\"132\":\"34\",\"133\":\"35\",\"134\":\"35#fetch-all-pets\",\"135\":\"35#update-a-pet\",\"136\":\"35#get-the-previously-updated-data\",\"137\":\"35#consume-the-entity-streams-with-sse\",\"138\":\"35#consume-the-kafka-topic\",\"139\":\"35#create-new-pet-data\",\"140\":\"35#check-the-stream-consumer\",\"141\":\"36\",\"142\":\"36#obtaining-the-asyncapi-specifications\",\"143\":\"36#http-specification\",\"144\":\"36#kafka-specification\",\"145\":\"37\",\"146\":\"37#managing-zilla-configuration\",\"147\":\"37#providing-your-own-zilla-yaml-configuration\",\"148\":\"37#fetch-zilla-configuration\",\"149\":\"37#modifying-zilla-configuration\",\"150\":\"38\",\"151\":\"39\",\"152\":\"40\",\"153\":\"41\",\"154\":\"42\",\"155\":\"43\",\"156\":\"44\",\"157\":\"45\",\"158\":\"46\",\"159\":\"47\",\"160\":\"48\",\"161\":\"49\",\"162\":\"50\",\"163\":\"51\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,14],\"2\":[1,2],\"3\":[2,19],\"4\":[2,8],\"5\":[1,15],\"6\":[1,32],\"7\":[2,11],\"8\":[1,10],\"9\":[1,20],\"10\":[2,10],\"11\":[1,12],\"12\":[1,26],\"13\":[2,7],\"14\":[1,10],\"15\":[1,37],\"16\":[1,14],\"17\":[1,2],\"18\":[2,14],\"19\":[2,8],\"20\":[1,14],\"21\":[1,31],\"22\":[2,11],\"23\":[1,12],\"24\":[1,26],\"25\":[2,10],\"26\":[1,12],\"27\":[1,26],\"28\":[1,11],\"29\":[1,4],\"30\":[2,27],\"31\":[1,17],\"32\":[1,7],\"33\":[1,17],\"34\":[1,15],\"35\":[1,2],\"36\":[2,14],\"37\":[2,10],\"38\":[1,9],\"39\":[1,36],\"40\":[2,9],\"41\":[1,8],\"42\":[1,17],\"43\":[2,11],\"44\":[1,4],\"45\":[2,29],\"46\":[1,14],\"47\":[1,2],\"48\":[2,15],\"49\":[2,8],\"50\":[1,25],\"51\":[1,50],\"52\":[2,11],\"53\":[1,16],\"54\":[1,34],\"55\":[2,10],\"56\":[1,16],\"57\":[1,34],\"58\":[1,11],\"59\":[1,7],\"60\":[1,17],\"61\":[1,11],\"62\":[1,7],\"63\":[1,17],\"64\":[2,39],\"65\":[1,18],\"66\":[3,48],\"67\":[4,34],\"68\":[4,20],\"69\":[1,34],\"70\":[1],\"71\":[4,42],\"72\":[3,42],\"73\":[3,9],\"74\":[3,47],\"75\":[1,28],\"76\":[3,48],\"77\":[4,105],\"78\":[2,103],\"79\":[3],\"80\":[1,46],\"81\":[2,39],\"82\":[2,37],\"83\":[5,134],\"84\":[3,11],\"85\":[4,46],\"86\":[2],\"87\":[1],\"88\":[1],\"89\":[1],\"90\":[1,12],\"91\":[1,6],\"92\":[3,30],\"93\":[5],\"94\":[6,47],\"95\":[7,93],\"96\":[12,108],\"97\":[7,65],\"98\":[7,39],\"99\":[9,38],\"100\":[4,67],\"101\":[5,52],\"102\":[4,9],\"103\":[2,20],\"104\":[3,20],\"105\":[4,13],\"106\":[3,14],\"107\":[5,164],\"108\":[1,96],\"109\":[3,36],\"110\":[3,60],\"111\":[2,9],\"112\":[2,89],\"113\":[2,57],\"114\":[2,16],\"115\":[6,97],\"116\":[1,48],\"117\":[3,57],\"118\":[2,154],\"119\":[2,41],\"120\":[1,92],\"121\":[4,57],\"122\":[3,21],\"123\":[1,284],\"124\":[4,62],\"125\":[3,21],\"126\":[1,143],\"127\":[5,59],\"128\":[2,113],\"129\":[2,108],\"130\":[4,56],\"131\":[3,118],\"132\":[2,143],\"133\":[3,60],\"134\":[3,17],\"135\":[3,20],\"136\":[5,14],\"137\":[6,37],\"138\":[4,40],\"139\":[4,20],\"140\":[4,30],\"141\":[3,32],\"142\":[4,53],\"143\":[2,92],\"144\":[2,31],\"145\":[3,33],\"146\":[3],\"147\":[4,33],\"148\":[3,20],\"149\":[3,72],\"150\":[1,3],\"151\":[1],\"152\":[1],\"153\":[1],\"154\":[2],\"155\":[1],\"156\":[1],\"157\":[1],\"158\":[1],\"159\":[1],\"160\":[1],\"161\":[1],\"162\":[1],\"163\":[1]},\"averageFieldLength\":[2.27439024390244,36.5667068139539],\"storedFields\":{\"0\":{\"h\":\"\"},\"1\":{\"h\":\"asyncapi\",\"t\":[\"This command lists all the available sub-commands for Zillabase’s asyncapi feature.\"]},\"2\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi\"]},\"3\":{\"h\":\"Sub Commands\",\"t\":[\"add - Add a new AsyncAPI specification.\",\"list - Lists all the available AsyncAPI specifications.\",\"remove - Delete an AsyncAPI specification.\",\"show - Show an AsyncAPI specification details.\"]},\"4\":{\"h\":\"asyncapi add\",\"t\":[\"This command adds a new AsyncAPI specification.\"]},\"5\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi add [ --debug ] [ {-h | --help} ] [ --id <id> ] {-s | --spec} <spec> [ {-v | --verbose} ]\"]},\"6\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"AsyncAPI specification identifier.\",\"No\",\"-\",\"--id 123\",\"-s <spec>, --spec <spec>\",\"AsyncAPI specification location.\",\"Yes\",\"-\",\"-s ./spec.yaml\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"7\":{\"h\":\"asyncapi list\",\"t\":[\"This command lists all the available AsyncAPI specifications in the project.\"]},\"8\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi list [ --debug ] [ {-h | --help} ] [ {-v | --verbose} ]\"]},\"9\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"10\":{\"h\":\"asyncapi remove\",\"t\":[\"This command removes an AsyncAPI specification from the project.\"]},\"11\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi remove [ --debug ] [ {-h | --help} ] --id <id> [ {-v | --verbose} ]\"]},\"12\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"AsyncAPI specification identifier.\",\"No\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"13\":{\"h\":\"asyncapi show\",\"t\":[\"This command shows an AsyncAPI specification.\"]},\"14\":{\"h\":\"Usage\",\"t\":[\"zillabase asyncapi show [ --debug ] [ {-h | --help} ] [ {-v | --verbose} ] [--] <id>\"]},\"15\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\",\"--\",\"Used to separate command-line options from arguments to avoid confusion.\",\"No\",\"-\",\"-- argument\",\"<id>\",\"AsyncAPI specification identifier.\",\"Yes\",\"-\",\"123\"]},\"16\":{\"h\":\"config\",\"t\":[\"This command lists all the available sub-commands for managing the Zillabase’s configurations.\"]},\"17\":{\"h\":\"Usage\",\"t\":[\"zillabase config\"]},\"18\":{\"h\":\"Sub Commands\",\"t\":[\"add - Add a new Zillabase configuration.\",\"list - List all the Zillabase configurations.\",\"remove - Delete a Zillabase configuration.\"]},\"19\":{\"h\":\"config add\",\"t\":[\"This command adds a new Zillabase configuration.\"]},\"20\":{\"h\":\"Usage\",\"t\":[\"zillabase config add {-c | --config} <config> [ --debug ] [ {-h | --help} ] [ --id <id> ] [ {-v | --verbose} ]\"]},\"21\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-c <config>, --config <config>\",\"Config location\",\"Yes\",\"-\",\"-c ./config.yaml\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"Config identifier.\",\"No\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"22\":{\"h\":\"config list\",\"t\":[\"This command lists all the available Zillabase configurations in the project.\"]},\"23\":{\"h\":\"Usage\",\"t\":[\"zillabase config list [ --debug ] [ {-h | --help} ] --id <id> [ {-v | --verbose} ]\"]},\"24\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"Config identifier.\",\"Yes\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"25\":{\"h\":\"config remove\",\"t\":[\"This command removes a Zillabase configuration from the project.\"]},\"26\":{\"h\":\"Usage\",\"t\":[\"zillabase config remove [ --debug ] [ {-h | --help} ] --id <id> [ {-v | --verbose} ]\"]},\"27\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--id <id>\",\"Config identifier.\",\"Yes\",\"-\",\"--id 123\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"28\":{\"h\":\"Help\",\"t\":[\"This command lists all the available commands within Zillabase CLI.\"]},\"29\":{\"h\":\"Usage\",\"t\":[\"zillabase \\\\<command> [ <args> ]\"]},\"30\":{\"h\":\"Sub Commands\",\"t\":[\"init: Initialize a local project.\",\"start: Start containers for local development.\",\"stop: Stop containers for local development.\",\"asyncapi: Manage AsyncAPI specifications.\",\"config: Manage zilla configuration.\",\"migration: Manage migrations.\",\"sso: Manage single sign-on providers.\"]},\"31\":{\"h\":\"Init\",\"t\":[\"This command initializes a new Zillabase folder with an empty config.yaml and seed.sql file.\"]},\"32\":{\"h\":\"Usage\",\"t\":[\"zillabase init [ --debug ] [ {-h | --help} ]\"]},\"33\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"34\":{\"h\":\"migration\",\"t\":[\"This command lists all the available sub-commands for managing database migrations in Zillabase.\"]},\"35\":{\"h\":\"Usage\",\"t\":[\"zillabase migration\"]},\"36\":{\"h\":\"Sub Commands\",\"t\":[\"add - Create a new migration file locally.\",\"list - List all the local migration files.\"]},\"37\":{\"h\":\"migration add\",\"t\":[\"This command creates a new database migration file locally.\"]},\"38\":{\"h\":\"Usage\",\"t\":[\"zillabase migration add [ --debug ] [ {-h | --help} ] [--] <name>...\"]},\"39\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"--\",\"Separates command-line options from the list of arguments.\",\"No\",\"-\",\"-- argument\",\"<name>\",\"The name(s) of the migration(s) to be added.\",\"Yes\",\"-\",\"migration_name\"]},\"40\":{\"h\":\"migration list\",\"t\":[\"This command lists all the local migration files.\"]},\"41\":{\"h\":\"Usage\",\"t\":[\"zillabase migration list [ --debug ] [ {-h | --help} ]\"]},\"42\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"43\":{\"h\":\"Zillabase CLI\",\"t\":[\"This article lists all the available commands within the Zillabase CLI.\"]},\"44\":{\"h\":\"Usage\",\"t\":[\"zillabase <command> [ <args> ]\"]},\"45\":{\"h\":\"Sub Commands\",\"t\":[\"help - Display help information\",\"init - Initialize a local project\",\"start - Start containers for local development\",\"stop - Stop containers for local development\",\"asyncapi - Manage AsyncAPI specifications\",\"config - Manage Zilla configuration\",\"migration - Manage migrations\",\"sso - Manage single sign-on providers\"]},\"46\":{\"h\":\"sso\",\"t\":[\"This command lists all the available sub-commands for managing the sign-on providers.\"]},\"47\":{\"h\":\"Usage\",\"t\":[\"zillabase sso\"]},\"48\":{\"h\":\"Sub Commands\",\"t\":[\"add - Add a new identity provider.\",\"list - List all the identity providers.\",\"remove - Delete an identity provider.\"]},\"49\":{\"h\":\"sso add\",\"t\":[\"This command adds a new identity provider.\"]},\"50\":{\"h\":\"Usage\",\"t\":[\"zillabase sso add {-a | --alias} <alias> {-c | --client} <clientId> [ --debug ] [ {-h | --help} ] {-p | --provider} <providerId> {-r | --realm} <realm> {-s | --secret} <secret> [ {-v | --verbose} ]\"]},\"51\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-a <alias>, --alias <alias>\",\"Identity Provider Alias\",\"Yes\",\"-\",\"-a myalias\",\"-c <clientId>, --client <clientId>\",\"Client Id\",\"Yes\",\"-\",\"-c myclient123\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-p <providerId>, --provider <providerId>\",\"Identity Provider Name\",\"Yes\",\"-\",\"-p myprovider\",\"-r <realm>, --realm <realm>\",\"Keycloak Realm\",\"Yes\",\"-\",\"-r myrealm\",\"-s <secret>, --secret <secret>\",\"Client Secret\",\"Yes\",\"-\",\"-s mysecret\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"52\":{\"h\":\"sso list\",\"t\":[\"This command lists all the identity providers available for the project.\"]},\"53\":{\"h\":\"Usage\",\"t\":[\"zillabase sso list [ {-a | --alias} <alias> ] [ --debug ] [ {-h | --help} ] {-r | --realm} <realm> [ {-v | --verbose} ]\"]},\"54\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-a <alias>, --alias <alias>\",\"Identity Provider Alias\",\"No\",\"-\",\"-a myalias\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-r <realm>, --realm <realm>\",\"Keycloak Realm\",\"Yes\",\"-\",\"-r myrealm\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"55\":{\"h\":\"sso remove\",\"t\":[\"This command removes an identity provider from the project.\"]},\"56\":{\"h\":\"Usage\",\"t\":[\"zillabase sso remove {-a | --alias} <alias> [ --debug ] [ {-h | --help} ] {-r | --realm} <realm> [ {-v | --verbose} ]\"]},\"57\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"-a <alias>, --alias <alias>\",\"Identity Provider Alias\",\"Yes\",\"-\",\"-a myalias\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\",\"-r <realm>, --realm <realm>\",\"Keycloak Realm\",\"Yes\",\"-\",\"-r myrealm\",\"-v, --verbose\",\"Show verbose output.\",\"No\",\"-\",\"-v\"]},\"58\":{\"h\":\"Start\",\"t\":[\"This command starts the Zillabase containers for the local project development.\"]},\"59\":{\"h\":\"Usage\",\"t\":[\"zillabase start [ --debug ] [ {-h | --help} ]\"]},\"60\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"61\":{\"h\":\"Stop\",\"t\":[\"This command stops the Zillabase containers for the local project development.\"]},\"62\":{\"h\":\"Usage\",\"t\":[\"zillabase stop [ --debug ] [ {-h | --help} ]\"]},\"63\":{\"h\":\"Options\",\"t\":[\"Option\",\"Description\",\"Required\",\"Default Value\",\"Example\",\"--debug\",\"Enables detailed output for debugging.\",\"No\",\"-\",\"--debug\",\"-h, --help\",\"Display help information.\",\"No\",\"-\",\"-h\"]},\"64\":{\"h\":\"Petstore Example\",\"t\":[\"The Petstore example project implements the common Petstore example, where requests are proxied to Kafka.\",\"Zilla implements the REST endpoints defined in an AsyncAPI 3.x spec and proxies them onto Kafka topics defined in an AsyncAPI 3.x spec based on the operations defined in each spec. HTTP AsyncAPI 3.x spec and Kafka AsyncAPI 3.x spec are generated automatically based on the Kafka Cluster metadata information.\"]},\"65\":{\"h\":\"Prerequisites\",\"t\":[\"Before we start, make sure you fulfill the following requirements:\",\"Java 20+\",\"Homebrew package manager\",\"Docker\",\"Zillabase CLI\"]},\"66\":{\"h\":\"Installing Zillabase CLI\",\"t\":[\"If you don't have Zillabase CLI installed, install it with the following command:\",\"brew tap aklivity/tap brew install zillabase\",\"Info\",\"The Homebrew package manager is required. You can install it on MacOS and other Linux distributions. To install it, run the following command:\",\"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\"\"]},\"67\":{\"h\":\"Setting Up the Project\",\"t\":[\"Clone the Zillabase repository.\",\"git clone https://github.com/aklivity/zillabase.git\",\"The Petstore project is stored in the examples/petstore directory.\",\"go to the petstore project example directory on the cloned repository directory.\",\"cd examples/petstore\",\"Start the project and wait for the initialization process to finish.\",\"zillabase start\"]},\"68\":{\"h\":\"Using the Petstore APIs\",\"t\":[\"The Zillabase Petstore is an HTTP Kafka proxy that exposes common entity CRUD endpoints, with entity data stored on Kafka topics.\"]},\"69\":{\"h\":\"Endpoints\",\"t\":[\"Protocol\",\"Method\",\"Endpoint\",\"Topic\",\"Description\",\"HTTP\",\"POST\",\"/petstore_pets\",\"petstore_pets\",\"Create an entry.\",\"HTTP\",\"PUT\",\"/petstore_pets/{id}\",\"petstore_pets\",\"Update pet by the key.\",\"HTTP\",\"DELETE\",\"/petstore_pets/{id}\",\"petstore_pets\",\"Delete pet by the key.\",\"HTTP\",\"GET\",\"/petstore_pets\",\"petstore_pets\",\"Fetch all pets.\",\"HTTP\",\"GET\",\"/petstore_pets/{id}\",\"petstore_pets\",\"Fetch pet by the key.\",\"Similarly, endpoints are available to manage customers using /petstore_customers & /petstore_verified_customers.\"]},\"70\":{\"h\":\"Examples\"},\"71\":{\"h\":\"Publish a valid record\",\"t\":[\"curl -k -v -X POST http://localhost:8080/petstore_pets -H 'Idempotency-Key: 1' -H 'Content-Type: application/json' -d '{\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"Awesome Dog\\\"}'\",\"Output:\",\"> POST /petstore_pets HTTP/1.1 ... > Content-Type: application/json > Content-Length: 35 > < HTTP/1.1 204 No Content < Access-Control-Allow-Origin: * < * Connection #0 to host localhost left intact\"]},\"72\":{\"h\":\"Fetch a record\",\"t\":[\"curl -k -v http://localhost:8080/petstore_pets/1\",\"Output:\",\"> GET /petstore_pets/1 HTTP/1.1 ... < HTTP/1.1 200 OK < Content-Length: 33 < Content-Type: application/json < Etag: AQIAAg== < Access-Control-Allow-Origin: * < Access-Control-Expose-Headers: * < * Connection #0 to host localhost left intact {\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"Common Dog\\\"}%\"]},\"73\":{\"h\":\"Stopping the Project\",\"t\":[\"To stop the Zillabase project, run the following command:\",\"zillabase stop\"]},\"74\":{\"h\":\"StreamPay AI Example\",\"t\":[\"This example is an implementation of the StreamPay App designed to transfer payments from one user to another.\",\"Zilla implements the REST endpoints defined in an AsyncAPI 3.x spec and proxies them onto Kafka topics defined in an AsyncAPI 3.x spec based on the operations specified in each spec. Both HTTP AsyncAPI 3.x spec and Kafka AsyncAPI 3.x spec are generated automatically based on the Kafka Cluster metadata information.\"]},\"75\":{\"h\":\"Prerequisites\",\"t\":[\"Before we start, make sure you fulfill the following requirements:\",\"Java 20+\",\"Homebrew package manager\",\"Docker\",\"Zillabase CLI\",\"NodeJS (with npm or yarn)\",\"OpenAI API Key (Optional)\"]},\"76\":{\"h\":\"Installing Zillabase CLI\",\"t\":[\"If you don't have Zillabase CLI installed, install it with the following command:\",\"brew tap aklivity/tap brew install zillabase\",\"Info\",\"The Homebrew package manager is required. You can install it on MacOS and other Linux distributions. To install it, run the following command:\",\"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\"\"]},\"77\":{\"h\":\"Setting Up the Project\",\"t\":[\"Clone the Zillabase repository.\",\"git clone https://github.com/aklivity/zillabase.git\",\"The StreamPay project is stored in the examples/streampay directory.\",\"go to the streampay project example directory on the cloned repository directory.\",\"cd examples/streampay\",\"To enable the OpenAI fraud detection integration, you must use an OPENAI_API_KEY and add it to the zillabase/config.yaml file.\",\"udf: python: env: - OPENAI_API_KEY=<your OpenAI API key>\",\"Start the Zillabase project and wait for the initialization process to finish.\",\"zillabase start\",\"Output:\",\"latest: Pulling from aklivity/zillabase ... seed.sql processed successfully! ... Realm: zillabase created successfully. ... Config Server is populated with zilla.yaml\",\"Next, we'll set up the StreamPay UI. Install the dependencies with the following command:\",\"npm install # or yarn install\",\"Install quasar globally with the following command:\",\"npm install -g @quasar/cli\",\"Info\",\"You might need to execute rehash to find quasar on the path after installing quasar.\",\"Start the frontend application in development mode.\",\"quasar dev\"]},\"78\":{\"h\":\"StreamPay APIs\",\"t\":[\"The Zillabase Streampay exposes common entity CRUD endpoints, with the entity data stored on Kafka topics if Kafka's cleanup.policy=compact is set; otherwise, it exposes only Read mode endpoints.\",\"Zillabase leverages the AsyncAPI schema definitions to define all of the generated streaming APIs. You can export the generated API schema definition by running this Zillabase command:\",\"zillabase asyncapi show http-asyncapi >> asyncapi_REST_APIs.yaml\",\"Once the generated AsyncAPI schema is exported, you can copy it into the AsyncAPI Studio to get a complete picture of all the streaming APIs you have created.\",\"Some of the endpoints described are:\",\"Method\",\"Endpoint\",\"Topic\",\"Description\",\"POST\",\"/streampay_users\",\"dev.streampay_users\",\"Create an user.\",\"PUT\",\"/streampay_users/{id}\",\"dev.streampay_users\",\"Update user by the key.\",\"GET\",\"/streampay_users\",\"dev.streampay_users\",\"Fetch all users.\",\"GET\",\"/streampay_users/{id}\",\"dev.streampay_users\",\"Fetch user by the key.\",\"GET\",\"/streampay_balances-stream\",\"dev.streampay_balances\",\"Stream latest user's balance.\",\"POST\",\"/streampay_commands\",\"dev.streampay_commands\",\"Post command such as payment request or pay.\",\"GET\",\"/streampay_payment_requests\",\"dev.streampay_payment_requests\",\"Fetch all payment requests.\",\"GET\",\"/streampay_payment_requests/{id}\",\"dev.streampay_payment_requests\",\"Fetch payment request by key.\",\"GET\",\"/streampay_payment_requests-stream\",\"dev.streampay_payment_requests\",\"Stream new available payment request.\",\"GET\",\"/streampay_activities-stream\",\"dev.streampay_activities\",\"Stream all the activities.\"]},\"79\":{\"h\":\"Using the Project\"},\"80\":{\"h\":\"Login\",\"t\":[\"Login using Keycloak with one of the users pre-created in zillabase/config.yaml.\",\"keycloak: realm: zillabase users: - username: allen email: allen.doe@example.com name: Allen Doe password: Test@123\",\"You can log in from a different browser session to one of the other users to see how money is sent between them.\"]},\"81\":{\"h\":\"Send Money\",\"t\":[\"Once logged in, users should have a starting balance of money. You can:\",\"SEND OR REQUEST funds to any of the other users. Ideally, you can send or request to a second User you are logged in as.\",\"Sending money will immediately move money to the other user.\",\"Requesting money will send a transaction request to that user.\"]},\"82\":{\"h\":\"Transfer Requests\",\"t\":[\"A user with a transfer request can Approve or Reject the request. You can:\",\"Approve the payment. The money will be transferred to the requesting user.\",\"Reject the payment. The request will be removed from the list and marked as rejected.\",\"Wait for the OpenAI fraud check to finish to determine the potential fraud risk.\"]},\"83\":{\"h\":\"OpenAI Fraud Risk with Zillabase\",\"t\":[\"By leveraging the existing CQRS event stream that the Streampay app uses in Zillabase, we can create OpenAI query functions using the Python OpenAI library.\",\"When a new transaction request from Allen to transfer $3400 to Bertollo is created, the OpenAI query will be something similar to the following:\",\"==== Open AI Query ==== Use the below collection of safe and risky money transfer requests to answer the subsequent question and your opinion. Collection: \\\"\\\"\\\" Allen transferring $3200 to Bertollo is risky Allen transferring $3400 to Fred is safe Allen transferring $3900 to Greg is safe Allen transferring $2800 to Candice is safe Elaine transferring $4300 to Bertollo is safe \\\"\\\"\\\" Question: Should Allen transfer $3400 to Bertollo? ==== Open AI Result ==== { \\\"summary\\\": \\\"Based on the previous data, Allen transferring money to Bertollo has been identified as risky in one instance. Although Allen has made safe transfers to others, the specific transfer to Bertollo raises concerns. Therefore, it is advisable to consider the risk before proceeding.\\\", \\\"risk\\\": \\\"MEDIUM\\\" }\",\"This system prompt is used:\",\"You recommend the amount of fraud risk for money transfers between two people and respond only with a JSON object containing your summary and a numeric value of the risk as LOW, MEDIUM, or HIGH. Only return valid JSON string and no other markup.\",\"You can find the Python functions used in the zillabase/functions/python/fraud_check.py file.\"]},\"84\":{\"h\":\"Stopping the Project\",\"t\":[\"Close the Quasar development server (Ctrl+C), then stop the Zillabase project.\",\"zillabase stop\"]},\"85\":{\"h\":\"What is Zillabase?\",\"t\":[\"Zillabase is a modern alternative to Firebase, designed for real-time data processing and asynchronous workloads. It integrates a suite of streaming-native open-source tools to automatically build an event-driven backend. This includes real-time data models, user-defined functions, robust security, and versatile APIs (supporting both RESTful and asynchronous interactions).\"]},\"86\":{\"h\":\"Getting Started\"},\"87\":{\"h\":\"Concepts\"},\"88\":{\"h\":\"Examples\"},\"89\":{\"h\":\"Support\"},\"90\":{\"h\":\"Quickstart\",\"t\":[\"Learn how to integrate Zillabase with your project quickly using Zillabase CLI.\"]},\"91\":{\"h\":\"Prerequisites\",\"t\":[\"Java 20+\",\"Homebrew package manager\",\"Docker\"]},\"92\":{\"h\":\"Install Zillabase CLI\",\"t\":[\"Zillabase CLI is a CLI application that helps you generate and manage Zillabase configuration for your application. To install the CLI, run the following command:\",\"# add aklivity/tap to the brew source repository brew tap aklivity/tap # install zillabase brew install zillabase # test the installation zillabase\"]},\"93\":{\"h\":\"Integrate your Project with Zillabase\"},\"94\":{\"h\":\"Step 1: Initializing a Zillabase Project\",\"t\":[\"You can initialize a Zillabase project either from a new project’s directory or an existing project’s directory with the following command:\",\"zillabase init\",\"The command will initialize a new Zillabase folder with a config.yaml and seed.sql file. The config.yaml can be used to modify the Zillabase startup configuration, including authentication, environment variables, etc.\",\"Info\",\"The seed.sql file is executed during the initialization of the project.\"]},\"95\":{\"h\":\"Step 2: Defining Data Models and Streams\",\"t\":[\"The next step is to define a data model with database migrations. Database migration is used to apply changes to the database schema, including tables, views, streams, etc. Zillabase supports the following features for database migration:\",\"The Zillabase CLI migration command helps users create an empty migration file that can later be modified to define data models and streams.\",\"The migration file format is in SQL format, which is compatible with PostgreSQL syntax.\",\"Info\",\"Refer to this article for a complete SQL and supported reference.\",\"Define a table with an SQL-like syntax.\",\"zillabase migration add create_tables # output # Created migration 000000__create_tables.sql\",\"Open the generated SQL file and fill it with the following table definition.\",\"CREATE TABLE users( id varchar, username varchar, name varchar, PRIMARY KEY (id) );\",\"Create a new stream to track all of the user commands for the application.\",\"CREATE STREAM user_activities ( activity_name varchar, user_id varchar );\"]},\"96\":{\"h\":\"Step 3: Defining Business Logic via Python or Java Functions (OPTIONAL)\",\"t\":[\"In additional files, you can declare or define a user-defined function in SQL-like syntax. Currently, we only support additional files written in Python and Java.\",\"Info\",\"You can also use and start Zillabase without defining any additional Python or Java functions.\",\"Create a Python file in zillabase/functions/python/calculate_score.py with the following content.\",\"from arrow_udf import udf # for registering User Defined Functions import random @udf( input_types=[\\\"VARCHAR\\\"], result_type=\\\"INT\\\", ) def calculate_score(activity: str): if activity.lower() == \\\"good\\\": return 10 elif activity.lower() == \\\"bad\\\": return -10 elif activity.lower() == \\\"neutral\\\": return 2 return random.randint(-5, 5)\",\"Info\",\"Any external UDFs written in Python must be stored in zillabase/functions/python directory in order to be auto-picked by the Python UDF server.\",\"Next, we'll have to define the function in our migration files.\",\"zillabase migration add define_function # output # Created migration 000001__define_function.sql\",\"-- declare the user-defined function CREATE FUNCTION calculate_score(varchar) RETURNS int LANGUAGE python AS calculate_score;\"]},\"97\":{\"h\":\"Step 4: Calling the Function (OPTIONAL)\",\"t\":[\"We'll call the function inside a materialized view aggregating each user's activity scores. You can call the function just like you'd call a function in SQL.\",\"zillabase migration add activity_scores # output # Created migration 000002__activity_scores.sql\",\"CREATE MATERIALIZED VIEW activity_scores AS WITH activities AS ( SELECT user_id, calculate_score(activity_name)::int AS score FROM user_activities ), score AS ( SELECT user_id, SUM(score) as score FROM activities GROUP BY user_id ) SELECT id, name, score FROM score INNER JOIN users ON users.id = score.user_id;\",\"When a new stream message arrives, the activity_scores materialized view will be recomputed to keep the data fresh.\"]},\"98\":{\"h\":\"Step 5: Setting Up Authentication (OPTIONAL)\",\"t\":[\"You can define a data seed from the seed.sql file.\",\"Edit the config.yaml to add a predefined Keycloak users.\",\"# config keycloak: realm: zillabase users: - username: admin email: johndoe@example.com name: John Doe password: password client: client-id: activity redirects: - http://localhost:8084/*\"]},\"99\":{\"h\":\"Step 6: Pre-Populate Data During Startup (OPTIONAL)\",\"t\":[\"You can pre-populate data during startup by modifying the seed.sql file. This file will be run after the database migration is completed. In this example, modify the seed.sql file with the following content:\",\"INSERT INTO users (id, name) VALUES ('allen', 'allen'); INSERT INTO users (id, name) VALUES ('bertollo', 'bertollo');\"]},\"100\":{\"h\":\"Step 7: Start Zillabase\",\"t\":[\"Start Zillabase with the following command and wait for the initialization to finish.\",\"zillabase start # output # latest: Pulling from aklivity/zillabase # … # seed.sql processed successfully! # ... # Realm: zillabase created successfully. # ... # Config Server is populated with zilla.yaml\",\"Zillabase leverages the AsyncAPI schema definition to define the generated streaming APIs. You can create an asyncapi.yaml schema file by running the following command.\",\"zillabase asyncapi show http-asyncapi >> asyncapi_REST_APIs.yaml\",\"Once you have started Zillabase and generated your AsyncAPI schema, you can copy it into the AsyncAPI Studio to see a full list of all the streaming APIs you have created.\"]},\"101\":{\"h\":\"Step 8: Testing the Endpoints\",\"t\":[\"Authenticate through Keycloak to get the access token.\",\"curl -X POST 'http://localhost:8180/realms/zillabase/protocol/openid-connect/token' \\\\ -H 'Content-Type: application/x-www-form-urlencoded' \\\\ --data-urlencode 'client_id=activity' \\\\ --data-urlencode 'grant_type=password' \\\\ --data-urlencode 'username=admin \\\\ --data-urlencode 'password=password'\",\"Insert some activity.\",\"curl -X POST 'http://localhost:8080/user_activities' \\\\ -H 'Content-Type: application/json' -H ‘Authorization: Bearer access_token’ \\\\ --data ‘{\\\"activity_name\\\": \\\"good\\\", \\\"user_id\\\": \\\"allen\\\"}’\",\"Show the activity scores.\",\"curl -X GET 'http://localhost:8080/activity_scores' \\\\ -H ‘Authorization: Bearer access_token’\"]},\"102\":{\"h\":\"Step 9: Stop Zillabase\",\"t\":[\"You can stop Zillabase with the following command:\",\"zillabase stop\"]},\"103\":{\"h\":\"Community Support\",\"t\":[\"We're committed to providing comprehensive support for our developers and users. Choose the most convenient channel for your needs:\"]},\"104\":{\"h\":\"💬 Developer Community\",\"t\":[\"Join our Slack community to:\",\"Collaborate with other developers.\",\"Get real-time assistance.\",\"Share insights and best practices.\",\"Join Slack Community →\"]},\"105\":{\"h\":\"💡 Product & Partnership Inquiries\",\"t\":[\"Have questions about our products, pricing, or potential partnerships?\",\"Contact Our Team →\"]},\"106\":{\"h\":\"🆘 Technical Support\",\"t\":[\"Experiencing an issue? Our support team is ready to help.\",\"Create Support Ticket →\"]},\"107\":{\"h\":\"Frequently Asked Questions (FAQ)\",\"t\":[\"Does Zillabase support database transactions?\",\"No, currently, Zillabase does not support database transactions.\",\"How is authentication integrated with Zillabase?\",\"Authentication and user management features are integrated using Keycloak in Zillabase. During zillabase start, a Keycloak service is initialized by creating a specified realm, adding configured users, setting up client scopes, and registering a client. Update the zillabase/config.yaml file to modify the Keycloak configuration. Read this article for more information.\",\"If an authentication configuration is defined, is every endpoint now protected as authenticated user only?\",\"Yes. If an authentication configuration is defined, every endpoint will require an authenticated user to access it. This means that any request should include the bearer access token in the request authorization header.\",\"How do you get authenticated user information on Zillabase?\",\"Zilla injects the authentication information into the Kafka message header. Later, you can refer to the zilla_identity value in the stream or view definition to correlate an event with a user or to query something specific to the user. Read this article for more information.\",\"What was the difference between /<entity-name> and /<entity-name>-stream endpoints?\",\"The /<entity-name> endpoint is a regular REST endpoint that follows the request-response model. On the other hand, the /entity-name>-stream endpoint is a server-sent event (SSE) HTTP endpoint that emits events every time there's a new entity or updated entity. This endpoint follows the publish-subscribe model.\",\"What was the difference between zillabase/config.yaml and zilla.yaml?\",\"The zillabase/config.yaml is a file generated during project initialization. You can modify the Zillabase start-up configuration with the config file, including configuring authentication, environments for UDF, etc. On the other hand, Zilla.yaml is a Zilla configuration file that is generated during project start-up and adjusted depending on the models you defined before in the migration files. While it is usually not required, you can configure the Zilla configuration if you need some customization.\",\"How do I correlate the request event with the response events?\",\"You can use zilla_correlation_id to correlate request events and response events.\"]},\"108\":{\"h\":\"Troubleshooting\",\"t\":[\"How do I debug the running Zillabase project for error?\",\"To trace/ debug an error other than from an error message, you can check for the related Zillabase container logs, including Keycloak, Kafka, Zilla, RisingWave, etc.\",\"I got /home/linuxbrew/.linuxbrew/bin/zillabase: line 2: exec java: not found error when running Zillabase CLI\",\"The error was caused by missing Java dependencies on your machine. To run Zillabase CLI, you need at least Java version 20+ installed.\",\"I got Exception in thread \\\"main\\\" com.github.dockerjava.api.exception.ConflictException: Status 409: {\\\"message\\\": \\\"Conflict. The container name xxx is already in use by container yyy.\\\"} when running the zillabase start command.\",\"The error is caused by the previous Zillabase project, which is still running. You need to stop the old Zillabase project with zillabase stop command or delete the entire running Zillabase container group directly from Docker CLI or Docker Desktop.\"]},\"109\":{\"h\":\"Authentication in Zillabase\",\"t\":[\"Zillabase utilizes Keycloak to manage its user authentication. The Keycloak was configured through a config.yaml file and initialized during the zillabase start command. Follow this guide to learn how Keycloak is integrated with Zillabase and how to implement authentication in your application.\"]},\"110\":{\"h\":\"How it works\",\"t\":[\"If a Keycloak configuration is found, Zillabase will set up Keycloak during the start-up process and protect every available Zillabase endpoint. Otherwise, Zillabase won't set up Keycloak, and every endpoint is accessible by every user.\",\"To authenticate to protected endpoints, you'll need to provide an access token as the token bearer in the HTTP authorization header. This token is obtained by authenticating via the Keycloak service.\",\"Use Keycloak adapter libraries, such as keycloak-js to easily integrate Keycloak with your application.\"]},\"111\":{\"h\":\"Authentication Configuration\",\"t\":[\"There are various configurable authentication options in Zillabase.\"]},\"112\":{\"h\":\"Available Config\",\"t\":[\"You can set up Keycloak by providing the following configuration in zillabase/config.yaml file.\",\"Key\",\"Type\",\"Required\",\"Description\",\"keycloak.realm\",\"string\",\"Yes\",\"Represents the unique identifier of the Keycloak client.\",\"keycloak.scopes\",\"string[]\",\"No\",\"The scopes that will be assigned to the application realm.\",\"keycloak.client.client-id\",\"string\",\"Yes\",\"The keycloak client ID\",\"keycloak.client.origins\",\"string[]\",\"No\",\"A list of allowed origins for CORS (Cross-Origin Resource Sharing). Default value is [\\\"*\\\"].\",\"keycloak.client.root\",\"string\",\"No\",\"The base URL of the client application.\",\"keycloak.client.redirects\",\"string[]\",\"No\",\"A list of URLs to which Keycloak can redirect after user authentication or logout.\",\"keycloak.client.secret\",\"string\",\"No\",\"The client secret for confidential clients.\",\"keycloak.users\",\"User[]\",\"No\",\"Users object that will be seeded during project initialization.\",\"For the secret value, you can provide env instead of putting the secret directly with the following format: ${{ env.SECRET_ENV_KEY }}.\"]},\"113\":{\"h\":\"Seeding User\",\"t\":[\"You can provide a predefined user object that will be registered during the project initialization process. These users will be assigned to the application realm instead of the master realm. The user object must have the following properties.\",\"Key\",\"Description\",\"username\",\"The user's username.\",\"email\",\"The user's email.\",\"password\",\"The user's password.\",\"name\",\"The user's name.\",\"Info\",\"Users seeded from keycloak configuration are different and not related to the one that was seeded or defined in migration or seed.sql.\"]},\"114\":{\"h\":\"Default Configuration\",\"t\":[\"Name\",\"Value\",\"Keycloak Service URL\",\"http://localhost:8180\",\"Default/Admin Realm\",\"master\",\"Admin Credential\",\"username: admin password: admin\"]},\"115\":{\"h\":\"Managing Single Sign On (SSO)\",\"t\":[\"You can provide additional single sign-on options for Keycloak service through the Zillabase CLI. In general, you'll need to provide the following information to add an SSO provider.\",\"Name\",\"Description\",\"provider-id\",\"The unique identifier for the identity provider to be integrated.\",\"alias\",\"The alias name for the Single Sign-On (SSO) provider.\",\"client\",\"The name of the client application to be configured.\",\"realm\",\"The Keycloak realm in which the integration will take place.\",\"secret\",\"The secret key is used to authenticate with the SSO provider.\",\"The client and realm values are the ones that you defined before in Zillabase config.yaml. Here are some of the provider IDs that are supported:\",\"Name\",\"Provider ID\",\"Google\",\"google\",\"Facebook\",\"facebook\",\"Twitter\",\"twitter\",\"Generic Open ID Connect\",\"oidc\",\"SAML Providers\",\"saml\",\"Info\",\"Please refer to the Keycloak or the other providers' documentation to get more complete provider IDs that are supported.\"]},\"116\":{\"h\":\"Example\",\"t\":[\"Prepare a Zillabase project that has Authentication set up.\",\"Add an SSO provider.\",\"# adjust the values depending on your case zillabase sso add --provider google --client aklivity --alias google --realm zillabase --secret secret # output # Identity Provider added successfully\",\"List the SSO providers.\",\"zillabase sso list --realm zillabase # output # [ # { # \\\"alias\\\": \\\"google\\\", # \\\"providerId\\\": \\\"google\\\", # \\\"config\\\": { # \\\"clientId\\\": \\\"aklivity\\\" # } # } # ]\",\"To remove an SSO provider, use the following command.\",\"# adjust the values depending on your case zillabase sso remove --realm zillabase --alias google # output # The Identity Provider was successfully deleted\"]},\"117\":{\"h\":\"Obtaining Authenticated User\",\"t\":[\"To obtain an authenticated user on view or stream, you can use zilla_identity variable in the query. For example:\",\"-- zilla_identity in view CREATE VIEW user_transactions AS SELECT encode(zilla_identity, 'escape') AS user_id, -amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment' UNION ALL SELECT user_id AS user_id, amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment'; -- zilla_identify in stream CREATE STREAM streampay_commands( type VARCHAR, user_id VARCHAR, request_id VARCHAR, amount DOUBLE PRECISION, notes VARCHAR, zilla_correlation_id VARCHAR, zilla_identity VARCHAR, zilla_timestamp TIMESTAMP );\",\"We also provide zilla_correlation_id and zilla_timestamp in case you need it.\"]},\"118\":{\"h\":\"Defining Function\",\"t\":[\"Zillabase provides powerful tools for managing database migrations, including the ability to define custom functions. Users can create an empty migration file using the CLI to write PostgreSQL-like SQL that defines custom functions. These functions enable advanced data transformations and logic within the database. Backed by Risingwave, Zillabase ensures robust support for functions in a streaming database environment.\",\"Zillabase supports SQL functions, embedded functions (functions defined in SQL), and external user-defined functions (UDF) to accommodate business logic that cannot be covered with regular SQL. Currently, we support embedded functions written in Javascript, Python, and Rust and external user-defined functions written in Java and Python.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_function # output # Created migration 000001__create_table.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Create an external UDF implementation file. Create udf.py in zillabase/functions/python and copy the following function definition.\",\"from arrow_udf import udf # udf example with int result @udf(input_types=['INT', 'INT'], result_type='INT') def gcd(x, y): while y != 0: (x, y) = (y, x % y) return x\",\"Edit the migration file with the following content.\",\"-- declare function from an external user-defined function CREATE FUNCTION gcd(int, int) RETURNS int LANGUAGE python AS gcd; -- embedded function CREATE FUNCTION gcd2(a int, b int) RETURNS int LANGUAGE python AS $$ def gcd(a, b): while b != 0: a, b = b, a % b return a $$; -- SQL UDF CREATE FUNCTION add(INT, INT) RETURNS int LANGUAGE sql AS $$select $1 + $2$$;\",\"To test the query.\",\"-- test the external UDF select gcd(12, 4); -- test the embedded UDF select gcd2(12, 4); -- test the SQL UDF Select add(1, 2);\"]},\"119\":{\"h\":\"Embedded UDF\",\"t\":[\"In embedded functions, the function implementation is defined in the SQL function definition. Unlike external UDF, embedded UDF is run internally in Risingwave, so it does not offer as much flexibility as external UDF does. Because of this, embedded UDF are limited for computational purposes only and do not have access to external networks.\"]},\"120\":{\"h\":\"Example\",\"t\":[\"These steps will walk you through the UDF example in Python.\",\"Create an empty folder.\",\"mkdir udf-embedded # create a new folder cd udf-embedded # change the current directory\",\"Initialize an empty Zillabase project.\",\"zillabase init\",\"Create a new migration file.\",\"zillabase migration add create_function\",\"Define the function in the migration file.\",\"CREATE FUNCTION gcd(a int, b int) RETURNS int LANGUAGE python AS $$ def gcd(a, b): while b != 0: a, b = b, a % b return a $$;\",\"Run the project.\",\"zillabase start\",\"Connect to the database with PSQL.\",\"psql -U root -d dev -h localhost -p 4567\",\"Info\",\"If you don't have psql installed, install it with the following commands:\",\"Debian:\",\"sudo apt-get install -y postgresql-client\",\"MacOS:\",\"brew install libpq\",\"Run a query.\",\"select gcd(12, 4);\",\"Stop the project.\",\"zillabase stop\"]},\"121\":{\"h\":\"External UDF in Java\",\"t\":[\"To declare the function in Java, we'll use the risingwave-udf package. Your function will need to implement an interface to expose it as UDF. You can also add additional packages to the Maven project. After that, you need to declare the function in a migration file.\",\"Info\",\"Any external UDFs written in Java must be in a Maven project form and stored in zillabase/functions/java directory in order to be auto-picked by the Java UDF server.\"]},\"122\":{\"h\":\"Adding Environment Variables\",\"t\":[\"You can add environment variables during UDF execution by modifying the config.yaml file. For example:\",\"udf: java: env: - MY_VAR=value\"]},\"123\":{\"h\":\"Example\",\"t\":[\"Before we start, make sure you have the following requirements installed:\",\"Java Developer's Kit (JDK) version 11 or later.\",\"Apache Maven 3.0 or later.\",\"These steps will walk you through the UDF example in Java.\",\"Create an empty folder.\",\"mkdir udf-java # create a new folder cd udf-java # change the current directory\",\"Initialize an empty Zillabase project.\",\"zillabase init\",\"Create and go to zillabase/functions/java folder.\",\"mkdir -p zillabase/functions/java cd zillabase/functions/java\",\"Fill in the pom.xml file with the following contents.\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <groupId>io.aklivity.zillabase</groupId> <artifactId>risingwave-udf-example</artifactId> <version>0.1.0-SNAPSHOT</version> <name>udf-example</name> <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <maven.compiler.source>11</maven.compiler.source> <maven.compiler.target>11</maven.compiler.target> </properties> <dependencies> <!-- https://mvnrepository.com/artifact/com.risingwave/risingwave-udf --> <dependency> <groupId>com.risingwave</groupId> <artifactId>risingwave-udf</artifactId> <version>0.2.1</version> </dependency> </dependencies> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>3.0.0</version> <configuration> <argLine>--add-opens=java.base/java.nio=ALL-UNNAMED</argLine> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> <version>3.4.2</version> <configuration> <archive> <manifest> <mainClass>io.aklivity.zillabase.UdfExample</mainClass> </manifest> </archive> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> <finalName>risingwave-udf-example</finalName> <appendAssemblyId>false</appendAssemblyId> </configuration> <executions> <execution> <id>udf-example</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> </project>\",\"Create src/main/java/io/aklivity/zillabase folder.\",\"mkdir -p src/main/java/io/aklivity/zillabase\",\"Create UdfExample.java in the src/main/java/io/aklivity/zillabase path with the following contents.\",\"package io.aklivity.zillabase; import java.util.Iterator; import java.util.stream.IntStream; import java.util.stream.Stream; import com.risingwave.functions.ScalarFunction; import com.risingwave.functions.TableFunction; public class UdfExample { public static class Gcd implements ScalarFunction { public int eval(int a, int b) { while (b != 0) { int temp = b; b = a % b; a = temp; } return a; } } public static class ArrayAccess implements ScalarFunction { public String eval(String[] array, int index) { return array[index - 1]; } } public static class Series implements TableFunction { public Iterator<Integer> eval(int n) { return IntStream.range(0, n).iterator(); } } public static class Split implements TableFunction { public static class Row { public String word; public int length; } public Iterator<Row> eval(String str) { return Stream.of(str.split(\\\" \\\")) .map( s -> { Row row = new Row(); row.word = s; row.length = s.length(); return row; }) .iterator(); } } }\",\"Create a new migration file.\",\"zillabase migration add create_function\",\"Declare the function in the migration file.\",\"CREATE FUNCTION gcd(int, int) RETURNS int LANGUAGE java AS gcd; CREATE FUNCTION array_access(varchar[], int) RETURNS varchar LANGUAGE java AS array_access; CREATE FUNCTION series(int) RETURNS TABLE (x int) LANGUAGE java AS series;\",\"Run the project.\",\"zillabase start\",\"Connect to the database with PSQL.\",\"psql -U root -d dev -h localhost -p 4567\",\"Info\",\"If you don't have psql installed, install it with the following commands:\",\"Debian:\",\"sudo apt-get install -y postgresql-client\",\"MacOS:\",\"brew install libpq\",\"Run a query.\",\"select gcd(12, 4); select array_access('{\\\"first\\\", \\\"second\\\", \\\"third\\\"}', 2); select series(5);\",\"Stop the project.\",\"zillabase stop\",\"Info\",\"Refer to this repository for a more complete UDF Java example.\"]},\"124\":{\"h\":\"External UDF in Python\",\"t\":[\"To declare the function in Python, we'll use the arrow-udf package. You'll need to annotate the function that you want to expose, and then define the input and return types. On the other hand, you can also provide requirements.txt file in the zillabase/functions/python path in case you want to install additional Python packages. After that, you need to declare the function in a migration file.\",\"Info\",\"Any external UDFs written in Python must be stored in zillabase/functions/python directory in order to be auto-picked by the Python UDF server.\"]},\"125\":{\"h\":\"Adding Environment Variables\",\"t\":[\"You can add environment variables during UDF execution by modifying the config.yaml file. For example:\",\"udf: python: env: - MY_VAR=value\"]},\"126\":{\"h\":\"Example\",\"t\":[\"These steps will walk you through the UDF example in Python.\",\"Create an empty folder.\",\"mkdir udf-python # create a new folder cd udf-python # change the current directory\",\"Initialize an empty Zillabase project.\",\"zillabase init\",\"Create a requirements.txt file in zillabase/functions/python and add the following packages.\",\"numpy==2.1.3\",\"Create udf.py in zillabase/functions/python and copy the following function definition.\",\"from arrow_udf import udf import numpy as np # udf example with int result @udf(input_types=['INT', 'INT'], result_type='INT') def gcd(x, y): while y != 0: (x, y) = (y, x % y) return x # udf example with struct (object) result type @udf(input_types=['VARCHAR'], result_type='STRUCT<key: VARCHAR, value: VARCHAR>') def key_value(pair: str): key, value = pair.split('=') return {'key': key, 'value': value} # udf example that call external library @udf(input_types=['real[]', 'real[]'], result_type='real') def dot_vect(a, b): return np.dot(a, b)\",\"Create a new migration file.\",\"zillabase migration add create_function\",\"Declare the function in the migration file.\",\"CREATE FUNCTION gcd(int, int) RETURNS int LANGUAGE python AS gcd; CREATE FUNCTION key_value(varchar) RETURNS struct<key varchar, value varchar> LANGUAGE python AS key_value; CREATE FUNCTION dot_vect(real[], real[]) RETURNS real LANGUAGE python AS dot_vect;\",\"Run the project.\",\"zillabase start\",\"Connect to the database with PSQL.\",\"psql -U root -d dev -h localhost -p 4567\",\"Info\",\"If you don't have psql installed, install it with the following commands:\",\"Debian:\",\"sudo apt-get install -y postgresql-client\",\"MacOS:\",\"brew install libpq\",\"Run a query.\",\"select gcd(12, 4); select key_value('KEY=VALUE'); select dot_vect('{1.0, 2.0}', '{3.0, 4.0}');\",\"Stop the project.\",\"zillabase stop\",\"Info\",\"Refer to this repository for a more complete UDF Python example.\"]},\"127\":{\"h\":\"User Defined Function (UDF)\",\"t\":[\"Zillabase supports SQL functions, embedded functions (functions that are defined in SQL), and external user-defined functions (UDF) to accommodate business logic that cannot be covered with regular SQL. Currently, we support embedded functions written in Javascript, Python, and Rust and external user-defined functions written in Java and Python.\",\"In general, here is the flow for using user-defined functions:\",\"Define the function implementation in zillabase/functions/python or zillabase/functions/java (for external UDF).\",\"Declare the function definition in a migration file.\",\"Call the function in SQL statement the same way as you would call functions in SQL.\"]},\"128\":{\"h\":\"Defining Stream\",\"t\":[\"Zillabase simplifies the management of database migrations for various use cases, including streams. With its CLI, users can quickly create an empty migration file, which can be customized to define streams with PostgreSQL-like syntax. This stream is specific to Zillabase and does not relate to RisingWave syntax. A stream tracks all of the application's user commands. It creates a topic and produces CRUD APIs to produce and fetch the data. The stream can be consumed by other data models, including tables, views, and materialized views.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_stream # output # Created migration 000001__create_stream.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE STREAM streampay_commands( type VARCHAR, user_id VARCHAR, request_id VARCHAR, amount DOUBLE PRECISION, notes VARCHAR, zilla_correlation_id VARCHAR, zilla_identity VARCHAR, zilla_timestamp TIMESTAMP );\"]},\"129\":{\"h\":\"Defining Table\",\"t\":[\"Zillabase offers commands to streamline managing database migrations, which define or modify the database schema. Using the Zillabase CLI, users can generate an empty SQL-based migration file. This file can then be customized to include table definitions. Defining a table will create a Kafka topic with the same name, and RisingWave will provide an interface compatible with PostgreSQL-like syntax.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"A table defined will create a new topic, and CRUD APIs will be used to insert and query the data.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_table # output # Created migration 000001__create_table.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE TABLE streampay_users( id VARCHAR, name VARCHAR, username VARCHAR, initial_balance DOUBLE PRECISION, PRIMARY KEY (id) );\"]},\"130\":{\"h\":\"Initializing Database with Seeder\",\"t\":[\"Zillabase also provides a seed.sql file for every project created that will be run during project initialization. This file will be run after migration and can be used to seed or insert some initial data. You can perform some insert query from seed.sql file to initialize the database with initial data.\",\"-- insert some initial user data INSERT INTO streampay_users (id, name, username, initial_balance) VALUES ('allen', 'Allen Doe', 'allen', 10000); INSERT INTO streampay_users (id, name, username, initial_balance) VALUES ('bertollo', 'Bertollo Doe', 'bertollo', 10000); INSERT INTO streampay_users (id, name, username, initial_balance) VALUES ('candice', 'Candice Doe', 'candice', 10000);\"]},\"131\":{\"h\":\"Defining Materialized View\",\"t\":[\"Zillabase makes managing database migrations straightforward, including defining materialized views. The CLI allows users to generate a migration file that can be modified to include PostgreSQL-like syntax. A materialized view can consume streams, perform some transformation, and materialize it. The materialized view is always updated when new data is inserted into the stream.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_mv # output # Created migration 000001__create_mv.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE MATERIALIZED VIEW IF NOT EXISTS streampay_replies AS SELECT '400' AS status, encode(zilla_correlation_id, 'escape') AS correlation_id from streampay_commands where type NOT IN ('SendPayment', 'RequestPayment', 'RejectRequest') UNION SELECT '200' AS status, encode(zilla_correlation_id, 'escape') AS correlation_id from streampay_commands where type IN ('SendPayment', 'RequestPayment', 'RejectRequest');\"]},\"132\":{\"h\":\"Defining View\",\"t\":[\"Zillabase facilitates database migrations through an intuitive set of CLI commands. These migrations allow users to define or modify views within the database schema. By generating an empty migration file with Zillabase CLI, users can write PostgreSQL-compatible syntax to specify definitions of their views. RisingWave non-materialized views behave the same as regular relational database views, with data source support from sources, tables, views, or indexes.\",\"Info\",\"You can refer to this article for a complete supported SQL reference.\",\"A view can consume a stream or query from another table. Unlike the materialized view, it only provides a view that depends on the defined query and does not materialize the data. Best for cases where you want to save a view query but don't want the result to be materialized.\",\"Create the migration file with the following command:\",\"# command format # zillabase migration add <migration-name> # example zillabase migration add create_view # output # Created migration 000001__create_view.sql\",\"After the command succeeds, it prints the new migration file, which you can modify to define your data models. To modify the migration files, open the zillabase/migrations folder and edit the corresponding migration file.\",\"Edit the migration file with the following content.\",\"CREATE VIEW user_transactions AS SELECT encode(zilla_identity, 'escape') AS user_id, -amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment' UNION ALL SELECT user_id AS user_id, amount AS net_amount FROM streampay_commands WHERE type = 'SendPayment';\"]},\"133\":{\"h\":\"Endpoint Calls Example\",\"t\":[\"This example will go through all of the available endpoints for an entity using the Petstore project example. The project example provides the following endpoints:\",\"Info\",\"Not every entity is listed as this section only provides an example of an entity.\",\"Protocol\",\"Method/ Action\",\"Endpoint/ Channel\",\"HTTP\",\"GET\",\"/petstore_pets\",\"HTTP\",\"GET\",\"/petstore_pets/\",\"HTTP\",\"PUT\",\"/petstore_pets/\",\"HTTP\",\"POST\",\"/petstore_pets\",\"HTTP\",\"GET\",\"/petstore_pets-stream\",\"Kafka\",\"Receive\",\"dev.petstore_pets\",\"Kafka\",\"Send\",\"dev.petstore_pets\",\"According to the specifications, the HTTP server is on the localhost:8080 address, and the Kafka cluster is on the localhost:9092 address. Let's try those endpoints.\"]},\"134\":{\"h\":\"Fetch all pets\",\"t\":[\"curl -X GET http://localhost:8080/petstore_pets # output # [{\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Beagle\\\"},{\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"German Shepherd\\\"}]\"]},\"135\":{\"h\":\"Update a pet\",\"t\":[\"curl -X PUT http://localhost:8080/petstore_pets/234 -H \\\"Content-Type: application/json\\\" \\\\ --data '{\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Tippler\\\"}' # prints nothing\"]},\"136\":{\"h\":\"Get the previously updated data\",\"t\":[\"curl -X GET http://localhost:8080/petstore_pets/234 # output # {\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Tippler\\\"}\"]},\"137\":{\"h\":\"Consume the entity streams with SSE\",\"t\":[\"The command won't automatically exit as it listens to any new incoming events. Keep it open.\",\"curl -N --http2 http://localhost:8080/petstore_pets-stream # output # id:AQIABA== # data:{\\\"id\\\": \\\"123\\\", \\\"breed\\\": \\\"German Shepherd\\\"} # # id:AQIACA== # data:{\\\"id\\\": \\\"234\\\", \\\"breed\\\": \\\"Tippler\\\"}\"]},\"138\":{\"h\":\"Consume the Kafka topic\",\"t\":[\"The command won't automatically exit as it listens to any new incoming events. Keep it open.\",\"docker exec zillabase_kafka /opt/bitnami/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic dev.petstore_pets # prints nothing as there are no new incoming data\"]},\"139\":{\"h\":\"Create new pet data\",\"t\":[\"curl -X POST http://localhost:8080/petstore_pets -H \\\"Content-Type: application/json\\\" \\\\ --data '{\\\"id\\\": \\\"345\\\", \\\"breed\\\": \\\"koi\\\"}' # prints nothing\"]},\"140\":{\"h\":\"Check the Stream Consumer\",\"t\":[\"Go back to the SSE consumer and Kafka consumer. You'll see that these consumers receive a new event that prints out the added data.\",\"# SSE consumer # New stream data received # id:AQIACg== # data:{\\\"id\\\": \\\"345\\\", \\\"breed\\\": \\\"koi\\\"} # Kafka consumer # New stream data received # 345 # koi\"]},\"141\":{\"h\":\"Generated AsyncAPI Specifications\",\"t\":[\"After defining data models and streams, Zillabase provides a generated HTTP AsyncAPI and Kafka AsyncAPI for accessing the Zillabase endpoints. This specification is different from the OpenAPI specification.\",\"Info\",\"Read this article to learn more about AsyncAPI.\"]},\"142\":{\"h\":\"Obtaining the AsyncAPI Specifications\",\"t\":[\"Run either the Petstore or Streampay project example. On the project directory, run the following command to list the available AsyncAPI specifications.\",\"zillabase asyncapi list # outputs # Registered AsyncAPI Spec: # http-asyncapi # kafka-asyncapi\",\"By default, Zillabase generates two kinds of AsyncAPI specifications: HTTP AsyncAPI specification and Kafka AsyncAPI specification. To export the AsyncAPI specification, run the following commands.\",\"# this command extract the HTTP AsyncAPI specification to http-spec.yaml file zillabase asyncapi show http-asyncapi > http-spec.yaml # this command extract the Kafka AsyncAPI specification to kafka-spec.yaml file zillabase asyncapi show kafka-asyncapi > kafka-spec.yaml\",\"To view the generated AsyncAPI specification, you can use AsyncAPI Studio.\"]},\"143\":{\"h\":\"HTTP Specification\",\"t\":[\"The HTTP AsyncAPI specification provides information about the HTTP server and information about its available endpoints. For every entity defined, Zillabase serves the following HTTP endpoints:\",\"Method\",\"Endpoint\",\"Description\",\"GET\",\"/<entity>\",\"Fetch all entity data\",\"POST\",\"/<entity>\",\"Insert an entity data\",\"GET\",\"/<entity>/{id}\",\"Get entity data by id\",\"PUT\",\"/<entity>/{id}\",\"Update an entity data by id\",\"GET\",\"/<entity>-stream\",\"Stream entity data changes\",\"GET\",\"/<entity>-stream-identity\",\"Stream entity data changes\",\"The /<entity> and /<entity>/{id} endpoints are regular REST API endpoints. On the other hand, /<entity>-stream and /<entity>-stream-identity endpoints is an HTTP endpoint that serves server-sent events (SSE). You can subscribe/ consume any data changes that happened to the <entity> data with the stream endpoint.\",\"Refer to the message schema defined on the operation and channels to learn the schema for those endpoints. Every HTTP endpoint supports various input and output payload formats, such as JSON, Avro, and Protobuf. To adjust the payload formats, define the Content-Type and Accept header during the HTTP request.\"]},\"144\":{\"h\":\"Kafka Specification\",\"t\":[\"The Kafka AsyncAPI specification provides information about the Kafka cluster and schema definition for Kafka based on our data model and stream. It defines a channel for every entity and supports publish and subscribe operations for that channel.\"]},\"145\":{\"h\":\"Zilla Service Configuration\",\"t\":[\"Zillabase provides commands to manage the Zilla service configurations. These commands allow users to update the available config, upload the required artifacts (like certificates), and review the running configuration. When a configuration change occurs, the Zilla service can detect and redeploy the updated configuration.\"]},\"146\":{\"h\":\"Managing Zilla Configuration\"},\"147\":{\"h\":\"Providing Your Own configuration\",\"t\":[\"You can provide your own zilla.yaml configuration by creating a config file under zillabase/zilla directory. This way, during zillabase start command it won't automatically generate the Zilla configuration but will use the configuration you provide.\"]},\"148\":{\"h\":\"Fetch Zilla configuration\",\"t\":[\"Run the following command to fetch the existing Zilla configuration. This commands save the existing Zilla configuration file to zilla.yaml file.\",\"zillabase config list --id zilla.yaml > ./zilla.yaml\"]},\"149\":{\"h\":\"Modifying Zilla configuration\",\"t\":[\"Run the following command to modify the Zilla configuration generated by Zillabase.\",\"Open the file and modify the configuration.\",\"Info\",\"Refer to this article for a complete Zilla configuration reference.\",\"After modifying the configuration, upload the configuration file using the following command.\",\"zillabase config add -c ./zilla.yaml # output # Config Server is populated with ./zilla.yaml\",\"Info\",\"By default, the command will use the filename as the configuration id. To use an id other than its name, you can provide an additional --id parameter, for example:\",\"zillabase config add -c ./zilla.yaml --id zilla.yaml\",\"The Zillabase admin will detect the configuration changes and redeploy the updated configuration.\",\"Warning\",\"While it's possible, modifying this configuration is rarely required by the user.\"]},\"150\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"151\":{\"h\":\"Api\"},\"152\":{\"h\":\"Cli\"},\"153\":{\"h\":\"Examples\"},\"154\":{\"h\":\"Getting Started\"},\"155\":{\"h\":\"Support\"},\"156\":{\"h\":\"Authentication\"},\"157\":{\"h\":\"Products\"},\"158\":{\"h\":\"Function\"},\"159\":{\"h\":\"Storage\"},\"160\":{\"h\":\"Stream\"},\"161\":{\"h\":\"Table\"},\"162\":{\"h\":\"View\"},\"163\":{\"h\":\"Zilla\"}},\"dirtCount\":0,\"index\":[[\"+\",{\"1\":{\"118\":1}}],[\"🆘\",{\"0\":{\"106\":1}}],[\"💡\",{\"0\":{\"105\":1}}],[\"💬\",{\"0\":{\"104\":1}}],[\"→\",{\"1\":{\"104\":1,\"105\":1,\"106\":1}}],[\"9092\",{\"1\":{\"133\":1,\"138\":1}}],[\"9\",{\"0\":{\"102\":1}}],[\"8<\",{\"1\":{\"123\":1}}],[\"8180\",{\"1\":{\"101\":1,\"114\":1}}],[\"8\",{\"0\":{\"101\":1},\"1\":{\"123\":1}}],[\"8084\",{\"1\":{\"98\":1}}],[\"8080\",{\"1\":{\"71\":1,\"72\":1,\"101\":2,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1}}],[\"7\",{\"0\":{\"100\":1}}],[\"6\",{\"0\":{\"99\":1}}],[\"=\",{\"1\":{\"97\":1,\"117\":2,\"118\":4,\"120\":2,\"123\":7,\"126\":4,\"132\":2}}],[\"==\",{\"1\":{\"96\":3}}],[\"====\",{\"1\":{\"83\":4}}],[\"404\",{\"1\":{\"150\":1}}],[\"400\",{\"1\":{\"131\":1}}],[\"409\",{\"1\":{\"108\":1}}],[\"4567\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"4\",{\"0\":{\"97\":1},\"1\":{\"118\":2,\"120\":1,\"123\":5,\"126\":2}}],[\"5\",{\"0\":{\"98\":1},\"1\":{\"96\":2,\"123\":1}}],[\"234\",{\"1\":{\"134\":1,\"135\":2,\"136\":2,\"137\":1}}],[\"2<\",{\"1\":{\"123\":1}}],[\"2\",{\"0\":{\"95\":1},\"1\":{\"96\":1,\"108\":1,\"118\":1,\"123\":2,\"126\":1}}],[\"2001\",{\"1\":{\"123\":1}}],[\"200\",{\"1\":{\"72\":1,\"131\":1}}],[\"204\",{\"1\":{\"71\":1}}],[\"20+\",{\"1\":{\"65\":1,\"75\":1,\"91\":1,\"108\":1}}],[\"quickly\",{\"1\":{\"90\":1,\"128\":1}}],[\"quickstart\",{\"0\":{\"90\":1}}],[\"questions\",{\"0\":{\"107\":1},\"1\":{\"105\":1}}],[\"question\",{\"1\":{\"83\":2}}],[\"query\",{\"1\":{\"83\":3,\"107\":1,\"117\":1,\"118\":1,\"120\":1,\"123\":1,\"126\":1,\"129\":1,\"130\":1,\"132\":3}}],[\"quasar\",{\"1\":{\"77\":5,\"84\":1}}],[\"0<\",{\"1\":{\"123\":2}}],[\"000002\",{\"1\":{\"97\":1}}],[\"000001\",{\"1\":{\"96\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"000000\",{\"1\":{\"95\":1}}],[\"0\",{\"1\":{\"71\":1,\"72\":1,\"118\":2,\"120\":1,\"123\":13,\"126\":5}}],[\">>\",{\"1\":{\"78\":1,\"100\":1}}],[\">\",{\"1\":{\"71\":4,\"72\":1,\"123\":4,\"142\":2,\"148\":1}}],[\"jdk\",{\"1\":{\"123\":1}}],[\"js\",{\"1\":{\"110\":1}}],[\"json\",{\"1\":{\"71\":2,\"72\":1,\"83\":2,\"101\":1,\"135\":1,\"139\":1,\"143\":1}}],[\"john\",{\"1\":{\"98\":1}}],[\"johndoe\",{\"1\":{\"98\":1}}],[\"join\",{\"1\":{\"97\":1,\"104\":2}}],[\"just\",{\"1\":{\"97\":1}}],[\"javascript\",{\"1\":{\"118\":1,\"127\":1}}],[\"java\",{\"0\":{\"96\":1,\"121\":1},\"1\":{\"65\":1,\"75\":1,\"91\":1,\"96\":2,\"108\":3,\"118\":1,\"121\":4,\"122\":1,\"123\":19,\"127\":2}}],[\"1<\",{\"1\":{\"123\":1}}],[\"11\",{\"1\":{\"123\":1}}],[\"12\",{\"1\":{\"118\":2,\"120\":1,\"123\":1,\"126\":1}}],[\"123\",{\"1\":{\"6\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"71\":1,\"72\":1,\"80\":1,\"134\":1,\"137\":1}}],[\"10000\",{\"1\":{\"130\":3}}],[\"10\",{\"1\":{\"96\":2}}],[\"1\",{\"0\":{\"94\":1},\"1\":{\"71\":5,\"72\":6,\"118\":1,\"123\":3,\"126\":2}}],[\"util\",{\"1\":{\"123\":3}}],[\"utilizes\",{\"1\":{\"109\":1}}],[\"utf\",{\"1\":{\"123\":1}}],[\"u\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"under\",{\"1\":{\"147\":1}}],[\"unnamed<\",{\"1\":{\"123\":1}}],[\"unlike\",{\"1\":{\"119\":1,\"132\":1}}],[\"union\",{\"1\":{\"117\":1,\"131\":1,\"132\":1}}],[\"unique\",{\"1\":{\"112\":1,\"115\":1}}],[\"urls\",{\"1\":{\"112\":1}}],[\"url\",{\"1\":{\"112\":1,\"114\":1}}],[\"urlencode\",{\"1\":{\"101\":4}}],[\"urlencoded\",{\"1\":{\"101\":1}}],[\"ui\",{\"1\":{\"77\":1}}],[\"udfexample\",{\"1\":{\"123\":2}}],[\"udfexample<\",{\"1\":{\"123\":1}}],[\"udf<\",{\"1\":{\"123\":1}}],[\"udfs\",{\"1\":{\"96\":1,\"121\":1,\"124\":1}}],[\"udf\",{\"0\":{\"119\":1,\"121\":1,\"124\":1,\"127\":1},\"1\":{\"77\":1,\"96\":4,\"107\":1,\"118\":11,\"119\":4,\"120\":3,\"121\":3,\"122\":2,\"123\":7,\"124\":2,\"125\":2,\"126\":13,\"127\":2}}],[\"upload\",{\"1\":{\"145\":1,\"149\":1}}],[\"updated\",{\"0\":{\"136\":1},\"1\":{\"107\":1,\"131\":1,\"145\":1,\"149\":1}}],[\"update\",{\"0\":{\"135\":1},\"1\":{\"69\":1,\"78\":1,\"107\":1,\"143\":1,\"145\":1}}],[\"up\",{\"0\":{\"67\":1,\"77\":1,\"98\":1},\"1\":{\"77\":1,\"107\":3,\"110\":3,\"112\":1,\"116\":1}}],[\"usually\",{\"1\":{\"107\":1}}],[\"uses\",{\"1\":{\"83\":1}}],[\"use\",{\"1\":{\"77\":1,\"83\":1,\"96\":1,\"107\":1,\"108\":1,\"110\":1,\"116\":1,\"117\":1,\"121\":1,\"124\":1,\"128\":1,\"142\":1,\"147\":1,\"149\":2}}],[\"username=admin\",{\"1\":{\"101\":1}}],[\"username\",{\"1\":{\"80\":1,\"95\":1,\"98\":1,\"113\":2,\"114\":1,\"129\":1,\"130\":3}}],[\"users\",{\"1\":{\"78\":9,\"80\":3,\"81\":2,\"95\":2,\"97\":2,\"98\":2,\"99\":2,\"103\":1,\"107\":1,\"112\":2,\"113\":2,\"118\":1,\"128\":1,\"129\":2,\"130\":3,\"131\":1,\"132\":2,\"145\":1}}],[\"user\",{\"0\":{\"113\":1,\"117\":1,\"127\":1},\"1\":{\"74\":1,\"78\":4,\"81\":3,\"82\":2,\"85\":1,\"95\":3,\"96\":3,\"97\":6,\"101\":2,\"107\":6,\"109\":1,\"110\":1,\"112\":2,\"113\":6,\"117\":6,\"118\":3,\"127\":3,\"128\":2,\"130\":1,\"132\":4,\"149\":1}}],[\"used\",{\"1\":{\"15\":1,\"83\":2,\"94\":1,\"95\":1,\"115\":1,\"129\":1,\"130\":1}}],[\"using\",{\"0\":{\"68\":1,\"79\":1},\"1\":{\"69\":1,\"80\":1,\"83\":1,\"90\":1,\"107\":1,\"118\":1,\"127\":1,\"129\":1,\"133\":1,\"149\":1}}],[\"usage\",{\"0\":{\"2\":1,\"5\":1,\"8\":1,\"11\":1,\"14\":1,\"17\":1,\"20\":1,\"23\":1,\"26\":1,\"29\":1,\"32\":1,\"35\":1,\"38\":1,\"41\":1,\"44\":1,\"47\":1,\"50\":1,\"53\":1,\"56\":1,\"59\":1,\"62\":1}}],[\"gcd2\",{\"1\":{\"118\":2}}],[\"gcd\",{\"1\":{\"118\":5,\"120\":3,\"123\":4,\"126\":4}}],[\"guide\",{\"1\":{\"109\":1}}],[\"grant\",{\"1\":{\"101\":1}}],[\"groupid>\",{\"1\":{\"123\":4}}],[\"group\",{\"1\":{\"97\":1,\"108\":1}}],[\"greg\",{\"1\":{\"83\":1}}],[\"g\",{\"1\":{\"77\":1}}],[\"globally\",{\"1\":{\"77\":1}}],[\"german\",{\"1\":{\"134\":1,\"137\":1}}],[\"generic\",{\"1\":{\"115\":1}}],[\"generating\",{\"1\":{\"132\":1}}],[\"generates\",{\"1\":{\"142\":1}}],[\"generate\",{\"1\":{\"92\":1,\"129\":1,\"131\":1,\"147\":1}}],[\"generated\",{\"0\":{\"141\":1},\"1\":{\"64\":1,\"74\":1,\"78\":3,\"95\":1,\"100\":2,\"107\":2,\"141\":1,\"142\":1,\"149\":1}}],[\"general\",{\"1\":{\"115\":1,\"127\":1}}],[\"getting\",{\"0\":{\"86\":1,\"154\":1}}],[\"get\",{\"0\":{\"136\":1},\"1\":{\"69\":2,\"72\":1,\"78\":8,\"101\":2,\"104\":1,\"107\":1,\"115\":1,\"120\":1,\"123\":1,\"126\":1,\"133\":3,\"134\":1,\"136\":1,\"143\":5}}],[\"goals>\",{\"1\":{\"123\":1}}],[\"goal>\",{\"1\":{\"123\":1}}],[\"google\",{\"1\":{\"115\":2,\"116\":5}}],[\"good\",{\"1\":{\"96\":1,\"101\":1}}],[\"got\",{\"1\":{\"108\":2}}],[\"go\",{\"1\":{\"67\":1,\"77\":1,\"123\":1,\"133\":1,\"140\":1}}],[\"github\",{\"1\":{\"67\":1,\"77\":1,\"108\":1}}],[\"githubusercontent\",{\"1\":{\"66\":1,\"76\":1}}],[\"git\",{\"1\":{\"67\":2,\"77\":2}}],[\"$2$$\",{\"1\":{\"118\":1}}],[\"$2800\",{\"1\":{\"83\":1}}],[\"$1\",{\"1\":{\"118\":1}}],[\"$$select\",{\"1\":{\"118\":1}}],[\"$$\",{\"1\":{\"118\":2,\"120\":2}}],[\"$4300\",{\"1\":{\"83\":1}}],[\"$3900\",{\"1\":{\"83\":1}}],[\"$3200\",{\"1\":{\"83\":1}}],[\"$3400\",{\"1\":{\"83\":3}}],[\"$\",{\"1\":{\"66\":1,\"76\":1,\"112\":1}}],[\"bootstrap\",{\"1\":{\"138\":1}}],[\"both\",{\"1\":{\"74\":1,\"85\":1}}],[\"bitnami\",{\"1\":{\"138\":1}}],[\"bin\",{\"1\":{\"66\":1,\"76\":1,\"108\":1,\"138\":1}}],[\"b\",{\"1\":{\"118\":6,\"120\":6,\"123\":5,\"126\":2}}],[\"but\",{\"1\":{\"132\":1,\"147\":1}}],[\"business\",{\"0\":{\"96\":1},\"1\":{\"118\":1,\"127\":1}}],[\"build>\",{\"1\":{\"123\":1}}],[\"build\",{\"1\":{\"85\":1,\"123\":2}}],[\"browser\",{\"1\":{\"80\":1}}],[\"breed\",{\"1\":{\"71\":1,\"72\":1,\"134\":2,\"135\":1,\"136\":1,\"137\":2,\"139\":1,\"140\":1}}],[\"brew\",{\"1\":{\"66\":2,\"76\":2,\"92\":3,\"120\":1,\"123\":1,\"126\":1}}],[\"back\",{\"1\":{\"140\":1}}],[\"backed\",{\"1\":{\"118\":1}}],[\"backend\",{\"1\":{\"85\":1}}],[\"bad\",{\"1\":{\"96\":1}}],[\"balance\",{\"1\":{\"78\":1,\"81\":1,\"129\":1,\"130\":3}}],[\"balances\",{\"1\":{\"78\":2}}],[\"base\",{\"1\":{\"112\":1,\"123\":1}}],[\"based\",{\"1\":{\"64\":2,\"74\":2,\"83\":1,\"129\":1,\"144\":1}}],[\"bash\",{\"1\":{\"66\":1,\"76\":1}}],[\"by\",{\"1\":{\"69\":3,\"78\":4,\"83\":1,\"96\":1,\"97\":1,\"99\":1,\"100\":1,\"107\":1,\"108\":3,\"110\":2,\"112\":1,\"118\":1,\"121\":1,\"122\":1,\"124\":1,\"125\":1,\"128\":1,\"132\":1,\"142\":1,\"143\":2,\"147\":1,\"149\":3}}],[\"beagle\",{\"1\":{\"134\":1}}],[\"bearer\",{\"1\":{\"101\":2,\"107\":1,\"110\":1}}],[\"behave\",{\"1\":{\"132\":1}}],[\"because\",{\"1\":{\"119\":1}}],[\"best\",{\"1\":{\"104\":1,\"132\":1}}],[\"been\",{\"1\":{\"83\":1}}],[\"below\",{\"1\":{\"83\":1}}],[\"bertollo\",{\"1\":{\"83\":6,\"99\":2,\"130\":3}}],[\"between\",{\"1\":{\"80\":1,\"83\":1,\"107\":2}}],[\"before\",{\"1\":{\"65\":1,\"75\":1,\"83\":1,\"107\":1,\"115\":1,\"123\":1}}],[\"be\",{\"1\":{\"39\":1,\"82\":2,\"83\":1,\"94\":1,\"95\":1,\"96\":2,\"97\":1,\"99\":1,\"112\":2,\"113\":2,\"115\":2,\"118\":1,\"121\":2,\"124\":2,\"127\":1,\"128\":2,\"129\":2,\"130\":3,\"131\":1,\"132\":1}}],[\"xsd\",{\"1\":{\"123\":2}}],[\"xsi\",{\"1\":{\"123\":1}}],[\"xsi=\",{\"1\":{\"123\":1}}],[\"xmlschema\",{\"1\":{\"123\":1}}],[\"xmlns\",{\"1\":{\"123\":1}}],[\"xmlns=\",{\"1\":{\"123\":1}}],[\"xml\",{\"1\":{\"123\":2}}],[\"xxx\",{\"1\":{\"108\":1}}],[\"x\",{\"1\":{\"64\":4,\"71\":1,\"74\":4,\"101\":4,\"118\":4,\"123\":1,\"126\":4,\"134\":1,\"135\":1,\"136\":1,\"139\":1}}],[\"345\",{\"1\":{\"139\":1,\"140\":2}}],[\"33\",{\"1\":{\"72\":1}}],[\"35\",{\"1\":{\"71\":1}}],[\"3\",{\"0\":{\"96\":1},\"1\":{\"64\":4,\"74\":4,\"123\":1,\"126\":2}}],[\"kinds\",{\"1\":{\"142\":1}}],[\"kit\",{\"1\":{\"123\":1}}],[\"koi\",{\"1\":{\"139\":1,\"140\":2}}],[\"keep\",{\"1\":{\"97\":1,\"137\":1,\"138\":1}}],[\"key=value\",{\"1\":{\"126\":1}}],[\"key=<your\",{\"1\":{\"77\":1}}],[\"key>\",{\"1\":{\"77\":1}}],[\"key\",{\"1\":{\"69\":3,\"71\":1,\"75\":1,\"77\":1,\"78\":3,\"95\":1,\"112\":2,\"113\":1,\"115\":1,\"126\":7,\"129\":1}}],[\"keycloak\",{\"1\":{\"51\":1,\"54\":1,\"57\":1,\"80\":2,\"98\":2,\"101\":1,\"107\":3,\"108\":1,\"109\":3,\"110\":7,\"112\":12,\"113\":1,\"114\":1,\"115\":3}}],[\"k\",{\"1\":{\"71\":1,\"72\":1}}],[\"kafka\",{\"0\":{\"138\":1,\"144\":1},\"1\":{\"64\":4,\"68\":2,\"74\":3,\"78\":2,\"107\":1,\"108\":1,\"129\":1,\"133\":3,\"138\":3,\"140\":2,\"141\":1,\"142\":6,\"144\":3}}],[\"w3\",{\"1\":{\"123\":1}}],[\"write\",{\"1\":{\"118\":1,\"132\":1}}],[\"written\",{\"1\":{\"96\":2,\"118\":2,\"121\":1,\"124\":1,\"127\":2}}],[\"would\",{\"1\":{\"127\":1}}],[\"word\",{\"1\":{\"123\":2}}],[\"works\",{\"0\":{\"110\":1}}],[\"workloads\",{\"1\":{\"85\":1}}],[\"won\",{\"1\":{\"110\":1,\"137\":1,\"138\":1,\"147\":1}}],[\"warning\",{\"1\":{\"149\":1}}],[\"way\",{\"1\":{\"127\":1,\"147\":1}}],[\"want\",{\"1\":{\"124\":2,\"132\":2}}],[\"walk\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"was\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"113\":1,\"116\":1}}],[\"wait\",{\"1\":{\"67\":1,\"77\":1,\"82\":1,\"100\":1}}],[\"www\",{\"1\":{\"101\":1,\"123\":1}}],[\"while\",{\"1\":{\"107\":1,\"118\":2,\"120\":1,\"123\":1,\"126\":1,\"149\":1}}],[\"which\",{\"1\":{\"95\":1,\"108\":1,\"112\":1,\"115\":1,\"118\":1,\"128\":2,\"129\":2,\"131\":1,\"132\":1}}],[\"what\",{\"0\":{\"85\":1},\"1\":{\"107\":2}}],[\"when\",{\"1\":{\"83\":1,\"97\":1,\"108\":2,\"131\":1,\"145\":1}}],[\"where\",{\"1\":{\"64\":1,\"117\":2,\"131\":2,\"132\":3}}],[\"will\",{\"1\":{\"81\":2,\"82\":2,\"83\":1,\"94\":1,\"97\":1,\"99\":1,\"107\":1,\"110\":1,\"112\":2,\"113\":2,\"115\":1,\"120\":1,\"121\":1,\"123\":1,\"126\":1,\"129\":4,\"130\":2,\"133\":1,\"147\":1,\"149\":2}}],[\"without\",{\"1\":{\"96\":1}}],[\"with\",{\"0\":{\"83\":1,\"93\":1,\"130\":1,\"137\":1},\"1\":{\"31\":1,\"66\":1,\"68\":1,\"75\":1,\"76\":1,\"77\":3,\"78\":1,\"80\":1,\"82\":1,\"83\":1,\"90\":1,\"94\":2,\"95\":4,\"96\":1,\"97\":1,\"99\":1,\"100\":2,\"102\":1,\"104\":1,\"107\":4,\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"115\":1,\"118\":4,\"120\":2,\"123\":5,\"126\":4,\"127\":1,\"128\":4,\"129\":4,\"130\":1,\"131\":2,\"132\":4,\"143\":1,\"149\":1}}],[\"within\",{\"1\":{\"28\":1,\"43\":1,\"118\":1,\"132\":1}}],[\"we\",{\"1\":{\"65\":1,\"75\":1,\"77\":1,\"83\":1,\"96\":2,\"97\":1,\"103\":1,\"117\":1,\"118\":1,\"121\":1,\"123\":1,\"124\":1,\"127\":1}}],[\"rust\",{\"1\":{\"118\":1,\"127\":1}}],[\"running\",{\"1\":{\"78\":1,\"100\":1,\"108\":5,\"145\":1}}],[\"run\",{\"1\":{\"66\":1,\"73\":1,\"76\":1,\"92\":1,\"99\":1,\"108\":1,\"119\":1,\"120\":2,\"123\":2,\"126\":2,\"130\":2,\"142\":3,\"148\":1,\"149\":1}}],[\"row\",{\"1\":{\"123\":7}}],[\"root\",{\"1\":{\"112\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"robust\",{\"1\":{\"85\":1,\"118\":1}}],[\"risingwave<\",{\"1\":{\"123\":1}}],[\"risingwave\",{\"1\":{\"108\":1,\"118\":1,\"119\":1,\"121\":1,\"123\":4,\"128\":1,\"129\":1,\"132\":1}}],[\"risky\",{\"1\":{\"83\":3}}],[\"risk\",{\"0\":{\"83\":1},\"1\":{\"82\":1,\"83\":4}}],[\"rarely\",{\"1\":{\"149\":1}}],[\"range\",{\"1\":{\"123\":1}}],[\"randint\",{\"1\":{\"96\":1}}],[\"random\",{\"1\":{\"96\":2}}],[\"raises\",{\"1\":{\"83\":1}}],[\"raw\",{\"1\":{\"66\":1,\"76\":1}}],[\"r\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"redeploy\",{\"1\":{\"145\":1,\"149\":1}}],[\"redirect\",{\"1\":{\"112\":1}}],[\"redirects\",{\"1\":{\"98\":1,\"112\":1}}],[\"review\",{\"1\":{\"145\":1}}],[\"received\",{\"1\":{\"140\":2}}],[\"receive\",{\"1\":{\"133\":1,\"140\":1}}],[\"recomputed\",{\"1\":{\"97\":1}}],[\"recommend\",{\"1\":{\"83\":1}}],[\"record\",{\"0\":{\"71\":1,\"72\":1}}],[\"relational\",{\"1\":{\"132\":1}}],[\"relate\",{\"1\":{\"128\":1}}],[\"related\",{\"1\":{\"108\":1,\"113\":1}}],[\"replies\",{\"1\":{\"131\":1}}],[\"represents\",{\"1\":{\"112\":1}}],[\"repository\",{\"1\":{\"67\":2,\"77\":2,\"92\":1,\"123\":1,\"126\":1}}],[\"registered\",{\"1\":{\"113\":1,\"142\":1}}],[\"registering\",{\"1\":{\"96\":1,\"107\":1}}],[\"regular\",{\"1\":{\"107\":1,\"118\":1,\"127\":1,\"132\":1,\"143\":1}}],[\"re\",{\"1\":{\"103\":1}}],[\"reference\",{\"1\":{\"95\":1,\"118\":1,\"129\":1,\"131\":1,\"132\":1,\"149\":1}}],[\"refer\",{\"1\":{\"95\":1,\"107\":1,\"115\":1,\"118\":1,\"123\":1,\"126\":1,\"129\":1,\"131\":1,\"132\":1,\"143\":1,\"149\":1}}],[\"returns\",{\"1\":{\"96\":1,\"118\":3,\"120\":1,\"123\":3,\"126\":3}}],[\"return\",{\"1\":{\"83\":1,\"96\":4,\"118\":2,\"120\":1,\"123\":5,\"124\":1,\"126\":3}}],[\"resource\",{\"1\":{\"112\":1}}],[\"response\",{\"1\":{\"107\":3}}],[\"respond\",{\"1\":{\"83\":1}}],[\"result\",{\"1\":{\"83\":1,\"96\":1,\"118\":2,\"126\":5,\"132\":1}}],[\"restful\",{\"1\":{\"85\":1}}],[\"rest\",{\"1\":{\"64\":1,\"74\":1,\"78\":1,\"100\":1,\"107\":1,\"143\":1}}],[\"rejectrequest\",{\"1\":{\"131\":2}}],[\"rejected\",{\"1\":{\"82\":1}}],[\"reject\",{\"1\":{\"82\":2}}],[\"real\",{\"1\":{\"85\":2,\"104\":1,\"126\":6}}],[\"realms\",{\"1\":{\"101\":1}}],[\"realm\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"77\":1,\"80\":1,\"98\":1,\"100\":1,\"107\":1,\"112\":2,\"113\":2,\"114\":1,\"115\":3,\"116\":3}}],[\"ready\",{\"1\":{\"106\":1}}],[\"read\",{\"1\":{\"78\":1,\"107\":2,\"141\":1}}],[\"rehash\",{\"1\":{\"77\":1}}],[\"requestpayment\",{\"1\":{\"131\":2}}],[\"requesting\",{\"1\":{\"81\":1,\"82\":1}}],[\"request\",{\"1\":{\"78\":3,\"81\":3,\"82\":3,\"83\":1,\"107\":5,\"117\":1,\"128\":1,\"143\":1}}],[\"requests\",{\"0\":{\"82\":1},\"1\":{\"64\":1,\"78\":7,\"83\":1}}],[\"require\",{\"1\":{\"107\":1}}],[\"requirements\",{\"1\":{\"65\":1,\"75\":1,\"123\":1,\"124\":1,\"126\":1}}],[\"required\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"66\":1,\"76\":1,\"107\":1,\"112\":1,\"145\":1,\"149\":1}}],[\"removed\",{\"1\":{\"82\":1}}],[\"removes\",{\"1\":{\"10\":1,\"25\":1,\"55\":1}}],[\"remove\",{\"0\":{\"10\":1,\"25\":1,\"55\":1},\"1\":{\"3\":1,\"11\":1,\"18\":1,\"26\":1,\"48\":1,\"56\":1,\"116\":2}}],[\"phase>\",{\"1\":{\"123\":1}}],[\"psql\",{\"1\":{\"120\":3,\"123\":3,\"126\":3}}],[\"plugins>\",{\"1\":{\"123\":1}}],[\"plugins<\",{\"1\":{\"123\":2}}],[\"plugin>\",{\"1\":{\"123\":2}}],[\"plugin<\",{\"1\":{\"123\":2}}],[\"please\",{\"1\":{\"115\":1}}],[\"place\",{\"1\":{\"115\":1}}],[\"picked\",{\"1\":{\"96\":1,\"121\":1,\"124\":1}}],[\"picture\",{\"1\":{\"78\":1}}],[\"py\",{\"1\":{\"83\":1,\"96\":1,\"118\":1,\"126\":1}}],[\"python\",{\"0\":{\"96\":1,\"124\":1},\"1\":{\"77\":1,\"83\":3,\"96\":8,\"118\":5,\"120\":2,\"124\":6,\"125\":1,\"126\":9,\"127\":3}}],[\"perform\",{\"1\":{\"130\":1,\"131\":1}}],[\"people\",{\"1\":{\"83\":1}}],[\"pet\",{\"0\":{\"135\":1,\"139\":1},\"1\":{\"69\":3}}],[\"pets\",{\"0\":{\"134\":1},\"1\":{\"69\":11,\"71\":2,\"72\":2,\"133\":7,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1}}],[\"petstore\",{\"0\":{\"64\":1,\"68\":1},\"1\":{\"64\":2,\"67\":4,\"68\":1,\"69\":12,\"71\":2,\"72\":2,\"133\":8,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"142\":1}}],[\"possible\",{\"1\":{\"149\":1}}],[\"postgresql\",{\"1\":{\"95\":1,\"118\":1,\"120\":1,\"123\":1,\"126\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"post\",{\"1\":{\"69\":1,\"71\":2,\"78\":3,\"101\":2,\"133\":1,\"139\":1,\"143\":1}}],[\"pom\",{\"1\":{\"123\":3}}],[\"powerful\",{\"1\":{\"118\":1}}],[\"populate\",{\"0\":{\"99\":1},\"1\":{\"99\":1}}],[\"populated\",{\"1\":{\"77\":1,\"100\":1,\"149\":1}}],[\"potential\",{\"1\":{\"82\":1,\"105\":1}}],[\"policy=compact\",{\"1\":{\"78\":1}}],[\"parameter\",{\"1\":{\"149\":1}}],[\"partnerships\",{\"1\":{\"105\":1}}],[\"partnership\",{\"0\":{\"105\":1}}],[\"pair\",{\"1\":{\"126\":2}}],[\"password=password\",{\"1\":{\"101\":1}}],[\"password\",{\"1\":{\"80\":1,\"98\":2,\"113\":2,\"114\":1}}],[\"payload\",{\"1\":{\"143\":2}}],[\"pay\",{\"1\":{\"78\":1}}],[\"payment\",{\"1\":{\"78\":10,\"82\":2}}],[\"payments\",{\"1\":{\"74\":1}}],[\"path\",{\"1\":{\"77\":1,\"123\":1,\"124\":1}}],[\"packages\",{\"1\":{\"121\":1,\"124\":1,\"126\":1}}],[\"package\",{\"1\":{\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"91\":1,\"121\":1,\"123\":1,\"124\":1}}],[\"public\",{\"1\":{\"123\":12}}],[\"publish\",{\"0\":{\"71\":1},\"1\":{\"107\":1,\"144\":1}}],[\"purposes\",{\"1\":{\"119\":1}}],[\"pulling\",{\"1\":{\"77\":1,\"100\":1}}],[\"putting\",{\"1\":{\"112\":1}}],[\"put\",{\"1\":{\"69\":1,\"78\":1,\"133\":1,\"135\":1,\"143\":1}}],[\"prints\",{\"1\":{\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"135\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"pricing\",{\"1\":{\"105\":1}}],[\"primary\",{\"1\":{\"95\":1,\"129\":1}}],[\"practices\",{\"1\":{\"104\":1}}],[\"precision\",{\"1\":{\"117\":1,\"128\":1,\"129\":1}}],[\"prepare\",{\"1\":{\"116\":1}}],[\"predefined\",{\"1\":{\"98\":1,\"113\":1}}],[\"previously\",{\"0\":{\"136\":1}}],[\"previous\",{\"1\":{\"83\":1,\"108\":1}}],[\"pre\",{\"0\":{\"99\":1},\"1\":{\"80\":1,\"99\":1}}],[\"prerequisites\",{\"0\":{\"65\":1,\"75\":1,\"91\":1}}],[\"produce\",{\"1\":{\"128\":1}}],[\"produces\",{\"1\":{\"128\":1}}],[\"products\",{\"0\":{\"157\":1},\"1\":{\"105\":1}}],[\"product\",{\"0\":{\"105\":1}}],[\"properties>\",{\"1\":{\"123\":1}}],[\"properties\",{\"1\":{\"113\":1}}],[\"protobuf\",{\"1\":{\"143\":1}}],[\"protocol\",{\"1\":{\"69\":1,\"101\":1,\"133\":1}}],[\"protect\",{\"1\":{\"110\":1}}],[\"protected\",{\"1\":{\"107\":1,\"110\":1}}],[\"provides\",{\"1\":{\"118\":1,\"130\":1,\"132\":1,\"133\":2,\"141\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"provide\",{\"1\":{\"110\":1,\"112\":1,\"113\":1,\"115\":2,\"117\":1,\"124\":1,\"129\":1,\"147\":2,\"149\":1}}],[\"providerid\",{\"1\":{\"116\":1}}],[\"provider\",{\"1\":{\"48\":2,\"49\":1,\"50\":1,\"51\":3,\"54\":1,\"55\":1,\"57\":1,\"115\":8,\"116\":5}}],[\"providers\",{\"1\":{\"30\":1,\"45\":1,\"46\":1,\"48\":1,\"52\":1,\"115\":2,\"116\":1}}],[\"providing\",{\"0\":{\"147\":1},\"1\":{\"103\":1,\"112\":1}}],[\"prompt\",{\"1\":{\"83\":1}}],[\"proceeding\",{\"1\":{\"83\":1}}],[\"processing\",{\"1\":{\"85\":1}}],[\"processed\",{\"1\":{\"77\":1,\"100\":1}}],[\"process\",{\"1\":{\"67\":1,\"77\":1,\"110\":1,\"113\":1}}],[\"proxy\",{\"1\":{\"68\":1}}],[\"proxies\",{\"1\":{\"64\":1,\"74\":1}}],[\"proxied\",{\"1\":{\"64\":1}}],[\"project>\",{\"1\":{\"123\":1}}],[\"project\",{\"0\":{\"67\":1,\"73\":1,\"77\":1,\"79\":1,\"84\":1,\"93\":1,\"94\":1},\"1\":{\"7\":1,\"10\":1,\"22\":1,\"25\":1,\"30\":1,\"45\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"64\":1,\"67\":3,\"73\":1,\"77\":3,\"84\":1,\"90\":1,\"94\":4,\"107\":2,\"108\":3,\"112\":1,\"113\":1,\"116\":1,\"120\":3,\"121\":2,\"123\":4,\"126\":3,\"130\":2,\"133\":2,\"142\":2}}],[\"p\",{\"1\":{\"50\":1,\"51\":2,\"120\":1,\"123\":3,\"126\":1}}],[\"mv\",{\"1\":{\"131\":2}}],[\"mvnrepository\",{\"1\":{\"123\":1}}],[\"mkdir\",{\"1\":{\"120\":1,\"123\":3,\"126\":1}}],[\"much\",{\"1\":{\"119\":1}}],[\"must\",{\"1\":{\"77\":1,\"96\":1,\"113\":1,\"121\":1,\"124\":1}}],[\"missing\",{\"1\":{\"108\":1}}],[\"might\",{\"1\":{\"77\":1}}],[\"migrations\",{\"1\":{\"30\":1,\"34\":1,\"45\":1,\"95\":1,\"118\":2,\"128\":2,\"129\":2,\"131\":2,\"132\":3}}],[\"migration\",{\"0\":{\"34\":1,\"37\":1,\"40\":1},\"1\":{\"30\":1,\"35\":1,\"36\":2,\"37\":1,\"38\":1,\"39\":2,\"40\":1,\"41\":1,\"45\":1,\"95\":7,\"96\":3,\"97\":2,\"99\":1,\"107\":1,\"113\":1,\"118\":9,\"120\":3,\"121\":1,\"123\":3,\"124\":1,\"126\":3,\"127\":1,\"128\":9,\"129\":9,\"130\":1,\"131\":9,\"132\":9}}],[\"means\",{\"1\":{\"107\":1}}],[\"message\",{\"1\":{\"97\":1,\"107\":1,\"108\":2,\"143\":1}}],[\"medium\",{\"1\":{\"83\":2}}],[\"method\",{\"1\":{\"69\":1,\"78\":1,\"133\":1,\"143\":1}}],[\"metadata\",{\"1\":{\"64\":1,\"74\":1}}],[\"more\",{\"1\":{\"107\":2,\"115\":1,\"123\":1,\"126\":1,\"141\":1}}],[\"most\",{\"1\":{\"103\":1}}],[\"modified\",{\"1\":{\"95\":1,\"131\":1}}],[\"modifying\",{\"0\":{\"149\":1},\"1\":{\"99\":1,\"122\":1,\"125\":1,\"149\":2}}],[\"modify\",{\"1\":{\"94\":1,\"99\":1,\"107\":2,\"118\":2,\"128\":2,\"129\":3,\"131\":2,\"132\":3,\"149\":2}}],[\"modelversion>\",{\"1\":{\"123\":1}}],[\"model\",{\"1\":{\"95\":1,\"107\":2,\"144\":1}}],[\"models\",{\"0\":{\"95\":1},\"1\":{\"85\":1,\"95\":1,\"107\":1,\"118\":1,\"128\":2,\"129\":1,\"131\":1,\"132\":1,\"141\":1}}],[\"modern\",{\"1\":{\"85\":1}}],[\"mode\",{\"1\":{\"77\":1,\"78\":1}}],[\"move\",{\"1\":{\"81\":1}}],[\"money\",{\"0\":{\"81\":1},\"1\":{\"80\":1,\"81\":4,\"82\":1,\"83\":3}}],[\"materialize\",{\"1\":{\"131\":1,\"132\":1}}],[\"materialized\",{\"0\":{\"131\":1},\"1\":{\"97\":3,\"128\":1,\"131\":4,\"132\":3}}],[\"map\",{\"1\":{\"123\":1}}],[\"manifest>\",{\"1\":{\"123\":1}}],[\"management\",{\"1\":{\"107\":1,\"128\":1}}],[\"manager\",{\"1\":{\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"91\":1}}],[\"manage\",{\"1\":{\"30\":4,\"45\":4,\"69\":1,\"92\":1,\"109\":1,\"145\":1}}],[\"managing\",{\"0\":{\"115\":1,\"146\":1},\"1\":{\"16\":1,\"34\":1,\"46\":1,\"118\":1,\"129\":1,\"131\":1}}],[\"maven\",{\"1\":{\"121\":2,\"123\":9}}],[\"master\",{\"1\":{\"113\":1,\"114\":1}}],[\"mainclass>\",{\"1\":{\"123\":1}}],[\"main\",{\"1\":{\"108\":1,\"123\":3}}],[\"machine\",{\"1\":{\"108\":1}}],[\"macos\",{\"1\":{\"66\":1,\"76\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"markup\",{\"1\":{\"83\":1}}],[\"marked\",{\"1\":{\"82\":1}}],[\"made\",{\"1\":{\"83\":1}}],[\"makes\",{\"1\":{\"131\":1}}],[\"make\",{\"1\":{\"65\":1,\"75\":1,\"123\":1}}],[\"my\",{\"1\":{\"122\":1,\"125\":1}}],[\"mysecret\",{\"1\":{\"51\":1}}],[\"myrealm\",{\"1\":{\"51\":1,\"54\":1,\"57\":1}}],[\"myprovider\",{\"1\":{\"51\":1}}],[\"myclient123\",{\"1\":{\"51\":1}}],[\"myalias\",{\"1\":{\"51\":1,\"54\":1,\"57\":1}}],[\"zilla\",{\"0\":{\"145\":1,\"146\":1,\"148\":1,\"149\":1,\"163\":1},\"1\":{\"30\":1,\"45\":1,\"64\":1,\"74\":1,\"77\":1,\"100\":1,\"107\":7,\"108\":1,\"117\":9,\"128\":3,\"131\":2,\"132\":1,\"145\":2,\"147\":3,\"148\":5,\"149\":6}}],[\"zillabase<\",{\"1\":{\"123\":1}}],[\"zillabase\",{\"0\":{\"43\":1,\"66\":1,\"76\":1,\"83\":1,\"85\":1,\"92\":1,\"93\":1,\"94\":1,\"100\":1,\"102\":1,\"109\":1},\"1\":{\"1\":1,\"2\":1,\"5\":1,\"8\":1,\"11\":1,\"14\":1,\"16\":1,\"17\":1,\"18\":3,\"19\":1,\"20\":1,\"22\":1,\"23\":1,\"25\":1,\"26\":1,\"28\":1,\"29\":1,\"31\":1,\"32\":1,\"34\":1,\"35\":1,\"38\":1,\"41\":1,\"43\":1,\"44\":1,\"47\":1,\"50\":1,\"53\":1,\"56\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":2,\"67\":3,\"68\":1,\"73\":2,\"75\":1,\"76\":2,\"77\":7,\"78\":4,\"80\":2,\"83\":2,\"84\":2,\"85\":1,\"90\":2,\"92\":5,\"94\":4,\"95\":3,\"96\":4,\"97\":1,\"98\":1,\"100\":7,\"101\":1,\"102\":2,\"107\":10,\"108\":10,\"109\":3,\"110\":3,\"111\":1,\"112\":1,\"115\":2,\"116\":7,\"118\":7,\"120\":5,\"121\":1,\"123\":13,\"124\":2,\"126\":7,\"127\":3,\"128\":5,\"129\":5,\"130\":1,\"131\":4,\"132\":5,\"138\":1,\"141\":2,\"142\":4,\"143\":1,\"145\":1,\"147\":2,\"148\":1,\"149\":4}}],[\"certificates\",{\"1\":{\"145\":1}}],[\"cases\",{\"1\":{\"128\":1,\"132\":1}}],[\"case\",{\"1\":{\"116\":2,\"117\":1,\"124\":1}}],[\"caused\",{\"1\":{\"108\":2}}],[\"calls\",{\"0\":{\"133\":1}}],[\"call\",{\"1\":{\"97\":3,\"126\":1,\"127\":2}}],[\"calling\",{\"0\":{\"97\":1}}],[\"calculate\",{\"1\":{\"96\":4,\"97\":1}}],[\"cannot\",{\"1\":{\"118\":1,\"127\":1}}],[\"candice\",{\"1\":{\"83\":1,\"130\":3}}],[\"can\",{\"1\":{\"66\":1,\"76\":1,\"78\":2,\"80\":1,\"81\":2,\"82\":2,\"83\":2,\"94\":2,\"95\":1,\"96\":2,\"97\":1,\"98\":1,\"99\":1,\"100\":2,\"102\":1,\"107\":4,\"108\":1,\"112\":3,\"113\":1,\"115\":1,\"117\":1,\"118\":3,\"121\":1,\"122\":1,\"124\":1,\"125\":1,\"128\":4,\"129\":4,\"130\":2,\"131\":4,\"132\":4,\"142\":1,\"143\":1,\"145\":1,\"147\":1,\"149\":1}}],[\"change\",{\"1\":{\"120\":1,\"123\":1,\"126\":1,\"145\":1}}],[\"changes\",{\"1\":{\"95\":1,\"143\":3,\"149\":1}}],[\"channels\",{\"1\":{\"143\":1}}],[\"channel\",{\"1\":{\"103\":1,\"133\":1,\"144\":2}}],[\"choose\",{\"1\":{\"103\":1}}],[\"check\",{\"0\":{\"140\":1},\"1\":{\"82\":1,\"83\":1,\"108\":1}}],[\"ctrl+c\",{\"1\":{\"84\":1}}],[\"cqrs\",{\"1\":{\"83\":1}}],[\"customized\",{\"1\":{\"128\":1,\"129\":1}}],[\"customization\",{\"1\":{\"107\":1}}],[\"custom\",{\"1\":{\"118\":2}}],[\"customers\",{\"1\":{\"69\":3}}],[\"current\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"currently\",{\"1\":{\"96\":1,\"107\":1,\"118\":1,\"127\":1}}],[\"curl\",{\"1\":{\"66\":1,\"71\":1,\"72\":1,\"76\":1,\"101\":3,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1}}],[\"credential\",{\"1\":{\"114\":1}}],[\"creating\",{\"1\":{\"107\":1,\"147\":1}}],[\"created\",{\"1\":{\"77\":1,\"78\":1,\"80\":1,\"83\":1,\"95\":1,\"96\":1,\"97\":1,\"100\":2,\"118\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1}}],[\"creates\",{\"1\":{\"37\":1,\"128\":1}}],[\"create\",{\"0\":{\"139\":1},\"1\":{\"36\":1,\"69\":1,\"78\":1,\"83\":1,\"95\":6,\"96\":2,\"97\":1,\"100\":1,\"106\":1,\"117\":2,\"118\":9,\"120\":5,\"123\":10,\"126\":9,\"128\":5,\"129\":6,\"131\":4,\"132\":4}}],[\"cross\",{\"1\":{\"112\":1}}],[\"crud\",{\"1\":{\"68\":1,\"78\":1,\"128\":1,\"129\":1}}],[\"cd\",{\"1\":{\"67\":1,\"77\":1,\"120\":1,\"123\":2,\"126\":1}}],[\"class\",{\"1\":{\"123\":6}}],[\"close\",{\"1\":{\"84\":1}}],[\"cloned\",{\"1\":{\"67\":1,\"77\":1}}],[\"clone\",{\"1\":{\"67\":2,\"77\":2}}],[\"cleanup\",{\"1\":{\"78\":1}}],[\"cluster\",{\"1\":{\"64\":1,\"74\":1,\"133\":1,\"144\":1}}],[\"clientid\",{\"1\":{\"116\":1}}],[\"clients\",{\"1\":{\"112\":1}}],[\"client\",{\"1\":{\"50\":1,\"51\":3,\"98\":2,\"101\":1,\"107\":2,\"112\":10,\"115\":3,\"116\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"cli\",{\"0\":{\"43\":1,\"66\":1,\"76\":1,\"92\":1,\"152\":1},\"1\":{\"28\":1,\"43\":1,\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"77\":1,\"90\":1,\"92\":3,\"95\":1,\"108\":3,\"115\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":2}}],[\"c\",{\"1\":{\"20\":1,\"21\":2,\"50\":1,\"51\":2,\"66\":1,\"76\":1,\"149\":2}}],[\"covered\",{\"1\":{\"118\":1,\"127\":1}}],[\"corresponding\",{\"1\":{\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"correlation\",{\"1\":{\"107\":1,\"117\":2,\"128\":1,\"131\":4}}],[\"correlate\",{\"1\":{\"107\":3}}],[\"cors\",{\"1\":{\"112\":1}}],[\"collaborate\",{\"1\":{\"104\":1}}],[\"collection\",{\"1\":{\"83\":2}}],[\"copy\",{\"1\":{\"78\":1,\"100\":1,\"118\":1,\"126\":1}}],[\"compiler\",{\"1\":{\"123\":4}}],[\"computational\",{\"1\":{\"119\":1}}],[\"comprehensive\",{\"1\":{\"103\":1}}],[\"compatible\",{\"1\":{\"95\":1,\"129\":1,\"132\":1}}],[\"completed\",{\"1\":{\"99\":1}}],[\"complete\",{\"1\":{\"78\":1,\"95\":1,\"115\":1,\"118\":1,\"123\":1,\"126\":1,\"129\":1,\"131\":1,\"132\":1,\"149\":1}}],[\"com\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":1,\"80\":1,\"98\":1,\"108\":1,\"123\":4}}],[\"committed\",{\"1\":{\"103\":1}}],[\"community\",{\"0\":{\"103\":1,\"104\":1},\"1\":{\"104\":2}}],[\"common\",{\"1\":{\"64\":1,\"68\":1,\"72\":1,\"78\":1}}],[\"commands\",{\"0\":{\"3\":1,\"18\":1,\"30\":1,\"36\":1,\"45\":1,\"48\":1},\"1\":{\"1\":1,\"16\":1,\"28\":1,\"34\":1,\"43\":1,\"46\":1,\"78\":2,\"95\":1,\"117\":3,\"120\":1,\"123\":1,\"126\":1,\"128\":2,\"129\":1,\"131\":2,\"132\":3,\"142\":1,\"145\":2,\"148\":1}}],[\"command\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"15\":1,\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"28\":1,\"31\":1,\"34\":1,\"37\":1,\"39\":1,\"40\":1,\"46\":1,\"49\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"66\":2,\"73\":1,\"76\":2,\"77\":2,\"78\":2,\"92\":1,\"94\":2,\"95\":1,\"100\":2,\"102\":1,\"108\":2,\"109\":1,\"116\":1,\"118\":3,\"128\":3,\"129\":3,\"131\":3,\"132\":3,\"137\":1,\"138\":1,\"142\":3,\"147\":1,\"148\":1,\"149\":3}}],[\"console\",{\"1\":{\"138\":1}}],[\"consumers\",{\"1\":{\"140\":1}}],[\"consumer\",{\"0\":{\"140\":1},\"1\":{\"138\":1,\"140\":4}}],[\"consume\",{\"0\":{\"137\":1,\"138\":1},\"1\":{\"131\":1,\"132\":1,\"143\":1}}],[\"consumed\",{\"1\":{\"128\":1}}],[\"consider\",{\"1\":{\"83\":1}}],[\"convenient\",{\"1\":{\"103\":1}}],[\"connect\",{\"1\":{\"101\":1,\"115\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"connection\",{\"1\":{\"71\":1,\"72\":1}}],[\"concepts\",{\"0\":{\"87\":1}}],[\"concerns\",{\"1\":{\"83\":1}}],[\"contact\",{\"1\":{\"105\":1}}],[\"container\",{\"1\":{\"108\":4}}],[\"containers\",{\"1\":{\"30\":2,\"45\":2,\"58\":1,\"61\":1}}],[\"containing\",{\"1\":{\"83\":1}}],[\"control\",{\"1\":{\"71\":1,\"72\":2}}],[\"contents\",{\"1\":{\"123\":2}}],[\"content\",{\"1\":{\"71\":4,\"72\":2,\"96\":1,\"99\":1,\"101\":2,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"135\":1,\"139\":1,\"143\":1}}],[\"confidential\",{\"1\":{\"112\":1}}],[\"configurable\",{\"1\":{\"111\":1}}],[\"configuration>\",{\"1\":{\"123\":2}}],[\"configuration\",{\"0\":{\"111\":1,\"114\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1},\"1\":{\"18\":2,\"19\":1,\"25\":1,\"30\":1,\"45\":1,\"92\":1,\"94\":1,\"107\":6,\"110\":1,\"112\":1,\"113\":1,\"145\":3,\"147\":3,\"148\":2,\"149\":9}}],[\"configurations\",{\"1\":{\"16\":1,\"18\":1,\"22\":1,\"145\":1}}],[\"configure\",{\"1\":{\"107\":1}}],[\"configured\",{\"1\":{\"107\":1,\"109\":1,\"115\":1}}],[\"configuring\",{\"1\":{\"107\":1}}],[\"config\",{\"0\":{\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"112\":1},\"1\":{\"17\":1,\"20\":2,\"21\":4,\"23\":1,\"24\":1,\"26\":1,\"27\":1,\"30\":1,\"31\":1,\"45\":1,\"77\":2,\"80\":1,\"94\":2,\"98\":2,\"100\":1,\"107\":4,\"109\":1,\"112\":1,\"115\":1,\"116\":1,\"122\":1,\"125\":1,\"145\":1,\"147\":1,\"148\":1,\"149\":3}}],[\"conflict\",{\"1\":{\"108\":1}}],[\"conflictexception\",{\"1\":{\"108\":1}}],[\"confusion\",{\"1\":{\"15\":1}}],[\"txt\",{\"1\":{\"124\":1,\"126\":1}}],[\"twitter\",{\"1\":{\"115\":2}}],[\"two\",{\"1\":{\"83\":1,\"142\":1}}],[\"try\",{\"1\":{\"133\":1}}],[\"troubleshooting\",{\"0\":{\"108\":1}}],[\"trace\",{\"1\":{\"108\":1}}],[\"tracks\",{\"1\":{\"128\":1}}],[\"track\",{\"1\":{\"95\":1}}],[\"transformation\",{\"1\":{\"131\":1}}],[\"transformations\",{\"1\":{\"118\":1}}],[\"transfers\",{\"1\":{\"83\":2}}],[\"transferring\",{\"1\":{\"83\":6}}],[\"transferred\",{\"1\":{\"82\":1}}],[\"transfer\",{\"0\":{\"82\":1},\"1\":{\"74\":1,\"82\":1,\"83\":4}}],[\"transactions\",{\"1\":{\"107\":2,\"117\":1,\"132\":1}}],[\"transaction\",{\"1\":{\"81\":1,\"83\":1}}],[\"tippler\",{\"1\":{\"135\":1,\"136\":1,\"137\":1}}],[\"ticket\",{\"1\":{\"106\":1}}],[\"timestamp\",{\"1\":{\"117\":3,\"128\":2}}],[\"time\",{\"1\":{\"85\":2,\"104\":1,\"107\":1}}],[\"temp\",{\"1\":{\"123\":2}}],[\"technical\",{\"0\":{\"106\":1}}],[\"team\",{\"1\":{\"105\":1,\"106\":1}}],[\"testing\",{\"0\":{\"101\":1}}],[\"test\",{\"1\":{\"80\":1,\"92\":1,\"118\":4}}],[\"target>\",{\"1\":{\"123\":1}}],[\"target>11<\",{\"1\":{\"123\":1}}],[\"take\",{\"1\":{\"115\":1}}],[\"tablefunction\",{\"1\":{\"123\":3}}],[\"table\",{\"0\":{\"129\":1,\"161\":1},\"1\":{\"95\":3,\"118\":1,\"123\":1,\"129\":6,\"132\":1}}],[\"tables\",{\"1\":{\"95\":3,\"128\":1,\"132\":1}}],[\"tap\",{\"1\":{\"66\":2,\"76\":2,\"92\":3}}],[\"types\",{\"1\":{\"124\":1}}],[\"types=\",{\"1\":{\"96\":1,\"118\":1,\"126\":3}}],[\"type=password\",{\"1\":{\"101\":1}}],[\"type=\",{\"1\":{\"96\":1,\"118\":1,\"126\":3}}],[\"type\",{\"1\":{\"71\":2,\"72\":1,\"101\":2,\"112\":1,\"117\":3,\"126\":1,\"128\":1,\"131\":2,\"132\":2,\"135\":1,\"139\":1,\"143\":1}}],[\"t\",{\"1\":{\"66\":1,\"76\":1,\"110\":1,\"120\":1,\"123\":1,\"126\":1,\"132\":1,\"137\":1,\"138\":1,\"147\":1}}],[\"token\",{\"1\":{\"101\":4,\"107\":1,\"110\":3}}],[\"tools\",{\"1\":{\"85\":1,\"118\":1}}],[\"topic\",{\"0\":{\"138\":1},\"1\":{\"69\":1,\"78\":1,\"128\":1,\"129\":2,\"138\":1}}],[\"topics\",{\"1\":{\"64\":1,\"68\":1,\"74\":1,\"78\":1}}],[\"to\",{\"1\":{\"15\":2,\"39\":1,\"64\":1,\"66\":1,\"67\":2,\"69\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":2,\"76\":1,\"77\":6,\"78\":2,\"80\":2,\"81\":4,\"82\":3,\"83\":14,\"85\":2,\"90\":1,\"92\":2,\"94\":1,\"95\":6,\"96\":2,\"97\":1,\"98\":1,\"100\":3,\"101\":1,\"103\":1,\"104\":1,\"106\":1,\"107\":7,\"108\":3,\"109\":3,\"110\":4,\"112\":2,\"113\":2,\"115\":7,\"116\":1,\"117\":1,\"118\":7,\"119\":1,\"120\":1,\"121\":6,\"123\":3,\"124\":6,\"126\":2,\"127\":1,\"128\":6,\"129\":6,\"130\":2,\"131\":5,\"132\":7,\"133\":1,\"137\":1,\"138\":1,\"140\":1,\"141\":1,\"142\":5,\"143\":4,\"145\":2,\"148\":2,\"149\":3}}],[\"those\",{\"1\":{\"133\":1,\"143\":1}}],[\"third\",{\"1\":{\"123\":1}}],[\"this\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"28\":1,\"31\":1,\"34\":1,\"37\":1,\"40\":1,\"43\":1,\"46\":1,\"49\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"74\":1,\"78\":1,\"83\":1,\"85\":1,\"95\":1,\"99\":2,\"107\":4,\"109\":1,\"110\":1,\"118\":1,\"119\":1,\"123\":1,\"126\":1,\"128\":1,\"129\":2,\"130\":1,\"131\":1,\"132\":1,\"133\":2,\"141\":2,\"142\":2,\"147\":1,\"148\":1,\"149\":2}}],[\"thread\",{\"1\":{\"108\":1}}],[\"through\",{\"1\":{\"101\":1,\"109\":1,\"115\":1,\"120\":1,\"123\":1,\"126\":1,\"132\":1,\"133\":1}}],[\"than\",{\"1\":{\"108\":1,\"149\":1}}],[\"that\",{\"1\":{\"68\":1,\"81\":1,\"83\":1,\"92\":1,\"95\":1,\"107\":4,\"112\":2,\"113\":2,\"115\":3,\"116\":1,\"118\":2,\"121\":1,\"124\":2,\"126\":1,\"127\":2,\"130\":1,\"131\":1,\"132\":1,\"140\":2,\"143\":2,\"144\":1}}],[\"their\",{\"1\":{\"132\":1}}],[\"these\",{\"1\":{\"113\":1,\"118\":1,\"120\":1,\"123\":1,\"126\":1,\"132\":1,\"140\":1,\"145\":1}}],[\"there\",{\"1\":{\"107\":1,\"111\":1,\"138\":1}}],[\"therefore\",{\"1\":{\"83\":1}}],[\"then\",{\"1\":{\"84\":1,\"124\":1,\"129\":1}}],[\"them\",{\"1\":{\"64\":1,\"74\":1,\"80\":1}}],[\"the\",{\"0\":{\"67\":1,\"68\":1,\"73\":1,\"77\":1,\"79\":1,\"84\":1,\"97\":1,\"101\":1,\"136\":1,\"137\":1,\"138\":1,\"140\":1,\"142\":1},\"1\":{\"1\":1,\"3\":1,\"7\":2,\"10\":1,\"16\":2,\"18\":1,\"22\":2,\"25\":1,\"28\":1,\"34\":1,\"36\":1,\"39\":3,\"40\":1,\"43\":2,\"46\":2,\"48\":1,\"52\":2,\"55\":1,\"58\":2,\"61\":2,\"64\":5,\"65\":1,\"66\":3,\"67\":7,\"68\":1,\"69\":3,\"73\":2,\"74\":4,\"75\":1,\"76\":3,\"77\":15,\"78\":12,\"80\":2,\"81\":2,\"82\":9,\"83\":14,\"84\":2,\"92\":4,\"94\":7,\"95\":9,\"96\":4,\"97\":4,\"98\":2,\"99\":4,\"100\":7,\"101\":2,\"102\":1,\"103\":1,\"107\":25,\"108\":9,\"109\":2,\"110\":4,\"112\":12,\"113\":10,\"115\":17,\"116\":5,\"117\":1,\"118\":17,\"119\":2,\"120\":8,\"121\":5,\"122\":1,\"123\":13,\"124\":8,\"125\":1,\"126\":10,\"127\":5,\"128\":13,\"129\":13,\"130\":1,\"131\":12,\"132\":15,\"133\":9,\"137\":1,\"138\":1,\"140\":2,\"141\":2,\"142\":9,\"143\":13,\"144\":2,\"145\":6,\"147\":2,\"148\":3,\"149\":14}}],[\"y\",{\"1\":{\"118\":5,\"120\":1,\"123\":1,\"126\":6}}],[\"yyy\",{\"1\":{\"108\":1}}],[\"yarn\",{\"1\":{\"75\":1,\"77\":1}}],[\"yaml\",{\"1\":{\"6\":1,\"21\":1,\"31\":1,\"77\":2,\"78\":1,\"80\":1,\"94\":2,\"98\":1,\"100\":3,\"107\":5,\"109\":1,\"112\":1,\"115\":1,\"122\":1,\"125\":1,\"142\":4,\"147\":1,\"148\":3,\"149\":4}}],[\"your\",{\"0\":{\"93\":1,\"147\":1},\"1\":{\"83\":2,\"90\":1,\"92\":1,\"100\":1,\"103\":1,\"108\":1,\"109\":1,\"110\":1,\"116\":2,\"118\":1,\"121\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"147\":1}}],[\"you\",{\"1\":{\"65\":1,\"66\":2,\"75\":1,\"76\":2,\"77\":2,\"78\":3,\"80\":1,\"81\":3,\"82\":1,\"83\":2,\"92\":1,\"94\":1,\"96\":2,\"97\":2,\"98\":1,\"99\":1,\"100\":4,\"102\":1,\"107\":7,\"108\":3,\"110\":1,\"112\":2,\"113\":1,\"115\":3,\"117\":2,\"118\":2,\"120\":2,\"121\":2,\"122\":1,\"123\":3,\"124\":5,\"125\":1,\"126\":2,\"127\":1,\"128\":1,\"129\":2,\"130\":1,\"131\":2,\"132\":3,\"140\":1,\"142\":1,\"143\":1,\"147\":2,\"149\":1}}],[\"yes\",{\"1\":{\"6\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"39\":1,\"51\":5,\"54\":1,\"57\":2,\"107\":1,\"112\":2}}],[\"language\",{\"1\":{\"96\":1,\"118\":3,\"120\":1,\"123\":3,\"126\":3}}],[\"later\",{\"1\":{\"95\":1,\"107\":1,\"123\":2}}],[\"latest\",{\"1\":{\"77\":1,\"78\":1,\"100\":1}}],[\"lower\",{\"1\":{\"96\":3}}],[\"low\",{\"1\":{\"83\":1}}],[\"logout\",{\"1\":{\"112\":1}}],[\"logs\",{\"1\":{\"108\":1}}],[\"logic\",{\"0\":{\"96\":1},\"1\":{\"118\":2,\"127\":1}}],[\"login\",{\"0\":{\"80\":1},\"1\":{\"80\":1}}],[\"logged\",{\"1\":{\"81\":2}}],[\"log\",{\"1\":{\"80\":1}}],[\"localhost\",{\"1\":{\"71\":2,\"72\":2,\"98\":1,\"101\":3,\"114\":1,\"120\":1,\"123\":1,\"126\":1,\"133\":2,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1}}],[\"locally\",{\"1\":{\"36\":1,\"37\":1}}],[\"local\",{\"1\":{\"30\":3,\"36\":1,\"40\":1,\"45\":3,\"58\":1,\"61\":1}}],[\"location\",{\"1\":{\"6\":1,\"21\":1}}],[\"ll\",{\"1\":{\"77\":1,\"96\":1,\"97\":1,\"110\":1,\"115\":1,\"121\":1,\"124\":2,\"140\":1}}],[\"let\",{\"1\":{\"133\":1}}],[\"least\",{\"1\":{\"108\":1}}],[\"learn\",{\"1\":{\"90\":1,\"109\":1,\"141\":1,\"143\":1}}],[\"leveraging\",{\"1\":{\"83\":1}}],[\"leverages\",{\"1\":{\"78\":1,\"100\":1}}],[\"left\",{\"1\":{\"71\":1,\"72\":1}}],[\"length\",{\"1\":{\"71\":1,\"72\":1,\"123\":3}}],[\"libpq\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"libraries\",{\"1\":{\"110\":1}}],[\"library\",{\"1\":{\"83\":1,\"126\":1}}],[\"limited\",{\"1\":{\"119\":1}}],[\"like\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"145\":1}}],[\"linuxbrew\",{\"1\":{\"108\":2}}],[\"linux\",{\"1\":{\"66\":1,\"76\":1}}],[\"line\",{\"1\":{\"15\":1,\"39\":1,\"108\":1}}],[\"listens\",{\"1\":{\"137\":1,\"138\":1}}],[\"listed\",{\"1\":{\"133\":1}}],[\"list\",{\"0\":{\"7\":1,\"22\":1,\"40\":1,\"52\":1},\"1\":{\"3\":1,\"8\":1,\"18\":2,\"23\":1,\"36\":2,\"39\":1,\"41\":1,\"48\":2,\"53\":1,\"82\":1,\"100\":1,\"112\":2,\"116\":2,\"142\":2,\"148\":1}}],[\"lists\",{\"1\":{\"1\":1,\"3\":1,\"7\":1,\"16\":1,\"22\":1,\"28\":1,\"34\":1,\"40\":1,\"43\":1,\"46\":1,\"52\":1}}],[\"io\",{\"1\":{\"123\":4}}],[\"i\",{\"1\":{\"107\":1,\"108\":3}}],[\"import\",{\"1\":{\"96\":2,\"118\":1,\"123\":5,\"126\":2}}],[\"implement\",{\"1\":{\"109\":1,\"121\":1}}],[\"implementation\",{\"1\":{\"74\":1,\"118\":1,\"119\":1,\"127\":1}}],[\"implements\",{\"1\":{\"64\":2,\"74\":1,\"123\":4}}],[\"immediately\",{\"1\":{\"81\":1}}],[\"issue\",{\"1\":{\"106\":1}}],[\"is\",{\"0\":{\"85\":1},\"1\":{\"66\":1,\"67\":1,\"68\":1,\"74\":1,\"76\":1,\"77\":2,\"78\":2,\"80\":1,\"83\":8,\"85\":1,\"92\":1,\"94\":1,\"95\":4,\"99\":1,\"100\":1,\"106\":1,\"107\":11,\"108\":3,\"109\":1,\"110\":3,\"112\":1,\"115\":1,\"119\":2,\"127\":1,\"128\":1,\"131\":2,\"133\":3,\"141\":1,\"143\":1,\"149\":2}}],[\"iterator<row>\",{\"1\":{\"123\":1}}],[\"iterator<integer>\",{\"1\":{\"123\":1}}],[\"iterator\",{\"1\":{\"123\":3}}],[\"its\",{\"1\":{\"109\":1,\"128\":1,\"143\":1,\"149\":1}}],[\"it\",{\"0\":{\"110\":1},\"1\":{\"66\":3,\"76\":3,\"77\":1,\"78\":2,\"83\":1,\"85\":1,\"95\":1,\"100\":1,\"107\":2,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"123\":1,\"126\":1,\"128\":2,\"129\":1,\"131\":2,\"132\":2,\"137\":2,\"138\":2,\"144\":1,\"147\":1,\"149\":1}}],[\"if\",{\"1\":{\"66\":1,\"76\":1,\"78\":1,\"96\":1,\"107\":3,\"110\":1,\"120\":1,\"123\":1,\"126\":1,\"131\":1}}],[\"incoming\",{\"1\":{\"137\":1,\"138\":2}}],[\"include\",{\"1\":{\"107\":1,\"129\":1,\"131\":1}}],[\"includes\",{\"1\":{\"85\":1}}],[\"including\",{\"1\":{\"94\":1,\"95\":1,\"107\":1,\"108\":1,\"118\":1,\"128\":2,\"131\":1}}],[\"indexes\",{\"1\":{\"132\":1}}],[\"index\",{\"1\":{\"123\":2}}],[\"injects\",{\"1\":{\"107\":1}}],[\"inquiries\",{\"0\":{\"105\":1}}],[\"inner\",{\"1\":{\"97\":1}}],[\"instead\",{\"1\":{\"112\":1,\"113\":1}}],[\"instance\",{\"1\":{\"83\":1,\"123\":1}}],[\"installation\",{\"1\":{\"92\":1}}],[\"install\",{\"0\":{\"92\":1},\"1\":{\"66\":6,\"76\":6,\"77\":5,\"92\":3,\"120\":3,\"123\":3,\"124\":1,\"126\":3}}],[\"installed\",{\"1\":{\"66\":1,\"76\":1,\"108\":1,\"120\":1,\"123\":2,\"126\":1}}],[\"installing\",{\"0\":{\"66\":1,\"76\":1},\"1\":{\"77\":1}}],[\"insights\",{\"1\":{\"104\":1}}],[\"inside\",{\"1\":{\"97\":1}}],[\"inserted\",{\"1\":{\"131\":1}}],[\"insert\",{\"1\":{\"99\":2,\"101\":1,\"129\":1,\"130\":6,\"143\":1}}],[\"input\",{\"1\":{\"96\":1,\"118\":1,\"124\":1,\"126\":3,\"143\":1}}],[\"intuitive\",{\"1\":{\"132\":1}}],[\"intstream\",{\"1\":{\"123\":2}}],[\"int\",{\"1\":{\"96\":2,\"97\":1,\"118\":13,\"120\":3,\"123\":13,\"126\":7}}],[\"interface\",{\"1\":{\"121\":1,\"129\":1}}],[\"internally\",{\"1\":{\"119\":1}}],[\"interactions\",{\"1\":{\"85\":1}}],[\"integrated\",{\"1\":{\"107\":2,\"109\":1,\"115\":1}}],[\"integrate\",{\"0\":{\"93\":1},\"1\":{\"90\":1,\"110\":1}}],[\"integrates\",{\"1\":{\"85\":1}}],[\"integration\",{\"1\":{\"77\":1,\"115\":1}}],[\"into\",{\"1\":{\"78\":1,\"99\":2,\"100\":1,\"107\":1,\"130\":3,\"131\":1}}],[\"intact\",{\"1\":{\"71\":1,\"72\":1}}],[\"info\",{\"1\":{\"66\":1,\"76\":1,\"77\":1,\"94\":1,\"95\":1,\"96\":2,\"113\":1,\"115\":1,\"118\":1,\"120\":1,\"121\":1,\"123\":2,\"124\":1,\"126\":2,\"129\":1,\"131\":1,\"132\":1,\"133\":1,\"141\":1,\"149\":2}}],[\"information\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"45\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"64\":1,\"74\":1,\"107\":4,\"115\":1,\"143\":2,\"144\":1}}],[\"initial\",{\"1\":{\"129\":1,\"130\":6}}],[\"initializing\",{\"0\":{\"94\":1,\"130\":1}}],[\"initialization\",{\"1\":{\"67\":1,\"77\":1,\"94\":1,\"100\":1,\"107\":1,\"112\":1,\"113\":1,\"130\":1}}],[\"initialized\",{\"1\":{\"107\":1,\"109\":1}}],[\"initializes\",{\"1\":{\"31\":1}}],[\"initialize\",{\"1\":{\"30\":1,\"45\":1,\"94\":2,\"120\":1,\"123\":1,\"126\":1,\"130\":1}}],[\"init\",{\"0\":{\"31\":1},\"1\":{\"30\":1,\"32\":1,\"45\":1,\"94\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"in\",{\"0\":{\"109\":1,\"121\":1,\"124\":1},\"1\":{\"7\":1,\"22\":1,\"34\":1,\"64\":3,\"67\":1,\"74\":3,\"77\":2,\"80\":2,\"81\":2,\"83\":3,\"95\":1,\"96\":8,\"97\":1,\"99\":1,\"107\":4,\"108\":2,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"115\":3,\"117\":4,\"118\":5,\"119\":3,\"120\":2,\"121\":6,\"123\":4,\"124\":7,\"126\":4,\"127\":8,\"131\":2}}],[\"id>\",{\"1\":{\"123\":1}}],[\"ids\",{\"1\":{\"115\":2}}],[\"id=activity\",{\"1\":{\"101\":1}}],[\"ideally\",{\"1\":{\"81\":1}}],[\"idempotency\",{\"1\":{\"71\":1}}],[\"identify\",{\"1\":{\"117\":1}}],[\"identified\",{\"1\":{\"83\":1}}],[\"identifier\",{\"1\":{\"6\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"112\":1,\"115\":1}}],[\"identity\",{\"1\":{\"48\":3,\"49\":1,\"51\":2,\"52\":1,\"54\":1,\"55\":1,\"57\":1,\"107\":1,\"115\":1,\"116\":2,\"117\":4,\"128\":1,\"132\":1,\"143\":2}}],[\"id\",{\"1\":{\"5\":1,\"6\":2,\"11\":1,\"12\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"51\":1,\"69\":3,\"71\":1,\"72\":1,\"78\":3,\"95\":3,\"97\":6,\"98\":1,\"99\":2,\"101\":1,\"107\":1,\"112\":2,\"115\":3,\"117\":7,\"128\":3,\"129\":2,\"130\":3,\"131\":4,\"132\":3,\"134\":2,\"135\":1,\"136\":1,\"137\":4,\"139\":1,\"140\":2,\"143\":5,\"148\":1,\"149\":4}}],[\"during\",{\"0\":{\"99\":1},\"1\":{\"94\":1,\"99\":1,\"107\":3,\"109\":1,\"110\":1,\"112\":1,\"113\":1,\"122\":1,\"125\":1,\"130\":1,\"143\":1,\"147\":1}}],[\"driven\",{\"1\":{\"85\":1}}],[\"d\",{\"1\":{\"71\":1,\"97\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"data\",{\"0\":{\"95\":1,\"99\":1,\"136\":1,\"139\":1},\"1\":{\"68\":1,\"78\":1,\"83\":1,\"85\":2,\"95\":2,\"97\":1,\"98\":1,\"99\":1,\"101\":5,\"118\":2,\"128\":3,\"129\":2,\"130\":3,\"131\":2,\"132\":3,\"135\":1,\"137\":2,\"138\":1,\"139\":1,\"140\":4,\"141\":1,\"143\":8,\"144\":1}}],[\"database\",{\"0\":{\"130\":1},\"1\":{\"34\":1,\"37\":1,\"95\":4,\"99\":1,\"107\":2,\"118\":3,\"120\":1,\"123\":1,\"126\":1,\"128\":1,\"129\":2,\"130\":1,\"131\":1,\"132\":3}}],[\"directly\",{\"1\":{\"108\":1,\"112\":1}}],[\"directory\",{\"1\":{\"67\":3,\"77\":3,\"94\":2,\"96\":1,\"120\":1,\"121\":1,\"123\":1,\"124\":1,\"126\":1,\"142\":1,\"147\":1}}],[\"difference\",{\"1\":{\"107\":2}}],[\"different\",{\"1\":{\"80\":1,\"113\":1,\"141\":1}}],[\"distributions\",{\"1\":{\"66\":1,\"76\":1}}],[\"display\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"45\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"dot\",{\"1\":{\"126\":5}}],[\"double\",{\"1\":{\"117\":1,\"128\":1,\"129\":1}}],[\"documentation\",{\"1\":{\"115\":1}}],[\"dockerjava\",{\"1\":{\"108\":1}}],[\"docker\",{\"1\":{\"65\":1,\"75\":1,\"91\":1,\"108\":2,\"138\":1}}],[\"do\",{\"1\":{\"107\":2,\"108\":1,\"119\":1}}],[\"does\",{\"1\":{\"107\":2,\"119\":2,\"128\":1,\"132\":1}}],[\"doe\",{\"1\":{\"80\":2,\"98\":1,\"130\":3}}],[\"dog\",{\"1\":{\"71\":1,\"72\":1}}],[\"don\",{\"1\":{\"66\":1,\"76\":1,\"120\":1,\"123\":1,\"126\":1,\"132\":1}}],[\"debian\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"debugging\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"debug\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"32\":1,\"33\":2,\"38\":1,\"39\":2,\"41\":1,\"42\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":2,\"62\":1,\"63\":2,\"108\":2}}],[\"depends\",{\"1\":{\"132\":1}}],[\"dependency>\",{\"1\":{\"123\":1}}],[\"dependencies<\",{\"1\":{\"123\":1}}],[\"dependencies>\",{\"1\":{\"123\":1}}],[\"dependencies\",{\"1\":{\"77\":1,\"108\":1}}],[\"depending\",{\"1\":{\"107\":1,\"116\":2}}],[\"declare\",{\"1\":{\"96\":2,\"118\":1,\"121\":2,\"123\":1,\"124\":2,\"126\":1,\"127\":1}}],[\"developer\",{\"0\":{\"104\":1},\"1\":{\"123\":1}}],[\"developers\",{\"1\":{\"103\":1,\"104\":1}}],[\"development\",{\"1\":{\"30\":2,\"45\":2,\"58\":1,\"61\":1,\"77\":1,\"84\":1}}],[\"dev\",{\"1\":{\"77\":1,\"78\":10,\"120\":1,\"123\":1,\"126\":1,\"133\":2,\"138\":1}}],[\"detect\",{\"1\":{\"145\":1,\"149\":1}}],[\"detection\",{\"1\":{\"77\":1}}],[\"determine\",{\"1\":{\"82\":1}}],[\"detailed\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"details\",{\"1\":{\"3\":1}}],[\"desktop\",{\"1\":{\"108\":1}}],[\"descriptorrefs>\",{\"1\":{\"123\":1}}],[\"descriptorref>\",{\"1\":{\"123\":1}}],[\"description\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"69\":1,\"78\":1,\"112\":1,\"113\":1,\"115\":1,\"143\":1}}],[\"described\",{\"1\":{\"78\":1}}],[\"designed\",{\"1\":{\"74\":1,\"85\":1}}],[\"def\",{\"1\":{\"96\":1,\"118\":2,\"120\":1,\"126\":3}}],[\"defining\",{\"0\":{\"95\":1,\"96\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1},\"1\":{\"96\":1,\"129\":1,\"131\":1,\"141\":1}}],[\"definition\",{\"1\":{\"78\":1,\"95\":1,\"100\":1,\"107\":1,\"118\":1,\"119\":1,\"126\":1,\"127\":1,\"144\":1}}],[\"definitions\",{\"1\":{\"78\":1,\"129\":1,\"132\":1}}],[\"defines\",{\"1\":{\"118\":1,\"144\":1}}],[\"define\",{\"1\":{\"78\":1,\"95\":3,\"96\":4,\"98\":1,\"100\":1,\"118\":2,\"120\":1,\"124\":1,\"127\":1,\"128\":2,\"129\":2,\"131\":1,\"132\":2,\"143\":1}}],[\"defined\",{\"0\":{\"127\":1},\"1\":{\"64\":3,\"74\":2,\"85\":1,\"96\":3,\"107\":3,\"113\":1,\"115\":1,\"118\":4,\"119\":1,\"127\":4,\"129\":1,\"132\":1,\"143\":2}}],[\"default\",{\"0\":{\"114\":1},\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"112\":1,\"114\":1,\"142\":1,\"149\":1}}],[\"deleted\",{\"1\":{\"116\":1}}],[\"delete\",{\"1\":{\"3\":1,\"18\":1,\"48\":1,\"69\":2,\"108\":1}}],[\"np\",{\"1\":{\"126\":2}}],[\"npm\",{\"1\":{\"75\":1,\"77\":2}}],[\"numpy\",{\"1\":{\"126\":1}}],[\"numpy==2\",{\"1\":{\"126\":1}}],[\"numeric\",{\"1\":{\"83\":1}}],[\"n\",{\"1\":{\"123\":2,\"137\":1}}],[\"nio=all\",{\"1\":{\"123\":1}}],[\"native\",{\"1\":{\"85\":1}}],[\"name>\",{\"1\":{\"107\":4,\"118\":1,\"123\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"name\",{\"1\":{\"39\":2,\"51\":1,\"80\":1,\"95\":2,\"97\":2,\"98\":1,\"99\":2,\"101\":1,\"108\":1,\"113\":2,\"114\":1,\"115\":4,\"129\":2,\"130\":3,\"149\":1}}],[\"networks\",{\"1\":{\"119\":1}}],[\"net\",{\"1\":{\"117\":2,\"132\":2}}],[\"neutral\",{\"1\":{\"96\":1}}],[\"needs\",{\"1\":{\"103\":1}}],[\"need\",{\"1\":{\"77\":1,\"107\":1,\"108\":2,\"110\":1,\"115\":1,\"117\":1,\"121\":2,\"124\":2}}],[\"next\",{\"1\":{\"77\":1,\"95\":1,\"96\":1}}],[\"new\",{\"0\":{\"139\":1},\"1\":{\"3\":1,\"4\":1,\"18\":1,\"19\":1,\"31\":1,\"36\":1,\"37\":1,\"48\":1,\"49\":1,\"78\":1,\"83\":1,\"94\":2,\"95\":1,\"97\":1,\"107\":1,\"118\":1,\"120\":2,\"123\":3,\"126\":2,\"128\":1,\"129\":2,\"131\":2,\"132\":1,\"137\":1,\"138\":2,\"140\":3}}],[\"non\",{\"1\":{\"132\":1}}],[\"now\",{\"1\":{\"107\":1}}],[\"nothing\",{\"1\":{\"135\":1,\"138\":1,\"139\":1}}],[\"notes\",{\"1\":{\"117\":1,\"128\":1}}],[\"not\",{\"1\":{\"107\":2,\"108\":1,\"113\":1,\"119\":2,\"128\":1,\"131\":2,\"132\":1,\"133\":1,\"150\":1}}],[\"nodejs\",{\"1\":{\"75\":1}}],[\"no\",{\"1\":{\"6\":4,\"9\":3,\"12\":4,\"15\":4,\"21\":4,\"24\":3,\"27\":3,\"33\":2,\"39\":3,\"42\":2,\"51\":3,\"54\":4,\"57\":3,\"60\":2,\"63\":2,\"71\":1,\"83\":1,\"107\":1,\"112\":6,\"138\":1}}],[\"own\",{\"0\":{\"147\":1},\"1\":{\"147\":1}}],[\"occurs\",{\"1\":{\"145\":1}}],[\"oidc\",{\"1\":{\"115\":1}}],[\"obtain\",{\"1\":{\"117\":1}}],[\"obtaining\",{\"0\":{\"117\":1,\"142\":1}}],[\"obtained\",{\"1\":{\"110\":1}}],[\"object\",{\"1\":{\"83\":1,\"112\":1,\"113\":2,\"126\":1}}],[\"old\",{\"1\":{\"108\":1}}],[\"out\",{\"1\":{\"140\":1}}],[\"outputs\",{\"1\":{\"142\":1}}],[\"output\",{\"1\":{\"6\":2,\"9\":2,\"12\":2,\"15\":2,\"21\":2,\"24\":2,\"27\":2,\"33\":1,\"39\":1,\"42\":1,\"51\":2,\"54\":2,\"57\":2,\"60\":1,\"63\":1,\"71\":1,\"72\":1,\"77\":1,\"95\":1,\"96\":1,\"97\":1,\"100\":1,\"116\":3,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"134\":1,\"136\":1,\"137\":1,\"143\":1,\"149\":1}}],[\"our\",{\"1\":{\"96\":1,\"103\":1,\"104\":1,\"105\":2,\"106\":1,\"144\":1}}],[\"org\",{\"1\":{\"123\":4}}],[\"order\",{\"1\":{\"96\":1,\"121\":1,\"124\":1}}],[\"or\",{\"0\":{\"96\":1},\"1\":{\"75\":1,\"77\":1,\"78\":1,\"81\":2,\"82\":1,\"83\":1,\"94\":1,\"96\":2,\"105\":1,\"107\":3,\"108\":2,\"112\":1,\"113\":2,\"115\":1,\"117\":1,\"123\":2,\"127\":1,\"129\":1,\"130\":1,\"132\":3,\"142\":1}}],[\"origins\",{\"1\":{\"112\":2}}],[\"origin\",{\"1\":{\"71\":1,\"72\":1,\"112\":1}}],[\"ok\",{\"1\":{\"72\":1}}],[\"others\",{\"1\":{\"83\":1}}],[\"otherwise\",{\"1\":{\"78\":1,\"110\":1}}],[\"other\",{\"1\":{\"66\":1,\"76\":1,\"80\":1,\"81\":2,\"83\":1,\"104\":1,\"107\":2,\"108\":1,\"115\":1,\"124\":1,\"128\":1,\"143\":1,\"149\":1}}],[\"opt\",{\"1\":{\"138\":1}}],[\"optional\",{\"0\":{\"96\":1,\"97\":1,\"98\":1,\"99\":1},\"1\":{\"75\":1}}],[\"option\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"options\",{\"0\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1},\"1\":{\"15\":1,\"39\":1,\"111\":1,\"115\":1}}],[\"opinion\",{\"1\":{\"83\":1}}],[\"operation\",{\"1\":{\"143\":1}}],[\"operations\",{\"1\":{\"64\":1,\"74\":1,\"144\":1}}],[\"openapi\",{\"1\":{\"141\":1}}],[\"openai\",{\"0\":{\"83\":1},\"1\":{\"75\":1,\"77\":4,\"82\":1,\"83\":3}}],[\"opens=java\",{\"1\":{\"123\":1}}],[\"openid\",{\"1\":{\"101\":1}}],[\"open\",{\"1\":{\"83\":2,\"85\":1,\"95\":1,\"115\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"137\":1,\"138\":1,\"149\":1}}],[\"offers\",{\"1\":{\"129\":1}}],[\"offer\",{\"1\":{\"119\":1}}],[\"of\",{\"1\":{\"39\":2,\"74\":1,\"78\":3,\"80\":2,\"81\":2,\"83\":3,\"85\":1,\"94\":1,\"95\":1,\"100\":1,\"112\":5,\"113\":1,\"115\":2,\"119\":1,\"123\":1,\"128\":2,\"132\":2,\"133\":2,\"142\":1}}],[\"once\",{\"1\":{\"78\":1,\"81\":1,\"100\":1}}],[\"only\",{\"1\":{\"78\":1,\"83\":2,\"96\":1,\"107\":1,\"119\":1,\"132\":1,\"133\":1}}],[\"ones\",{\"1\":{\"115\":1}}],[\"one\",{\"1\":{\"74\":1,\"80\":2,\"83\":1,\"113\":1}}],[\"onto\",{\"1\":{\"64\":1,\"74\":1}}],[\"on\",{\"0\":{\"115\":1},\"1\":{\"30\":1,\"45\":1,\"46\":1,\"64\":2,\"66\":1,\"67\":1,\"68\":1,\"74\":2,\"76\":1,\"77\":2,\"78\":1,\"83\":1,\"97\":1,\"107\":4,\"108\":1,\"115\":2,\"116\":2,\"117\":1,\"124\":1,\"132\":1,\"133\":2,\"142\":1,\"143\":2,\"144\":1}}],[\"eval\",{\"1\":{\"123\":4}}],[\"every\",{\"1\":{\"107\":3,\"110\":3,\"130\":1,\"133\":1,\"143\":2,\"144\":1}}],[\"events\",{\"1\":{\"107\":4,\"137\":1,\"138\":1,\"143\":1}}],[\"event\",{\"1\":{\"83\":1,\"85\":1,\"107\":3,\"140\":1}}],[\"escape\",{\"1\":{\"117\":1,\"131\":2,\"132\":1}}],[\"easily\",{\"1\":{\"110\":1}}],[\"each\",{\"1\":{\"64\":1,\"74\":1,\"97\":1}}],[\"error\",{\"1\":{\"108\":6}}],[\"edit\",{\"1\":{\"98\":1,\"118\":2,\"128\":2,\"129\":2,\"131\":2,\"132\":2}}],[\"elif\",{\"1\":{\"96\":2}}],[\"elaine\",{\"1\":{\"83\":1}}],[\"etc\",{\"1\":{\"94\":1,\"95\":1,\"107\":1,\"108\":1}}],[\"etag\",{\"1\":{\"72\":1}}],[\"either\",{\"1\":{\"94\":1,\"142\":1}}],[\"embedded\",{\"0\":{\"119\":1},\"1\":{\"118\":4,\"119\":3,\"120\":2,\"127\":2}}],[\"emits\",{\"1\":{\"107\":1}}],[\"email\",{\"1\":{\"80\":1,\"98\":1,\"113\":2}}],[\"empty\",{\"1\":{\"31\":1,\"95\":1,\"118\":1,\"120\":2,\"123\":2,\"126\":2,\"128\":1,\"129\":1,\"132\":1}}],[\"extract\",{\"1\":{\"142\":2}}],[\"external\",{\"0\":{\"121\":1,\"124\":1},\"1\":{\"96\":1,\"118\":5,\"119\":3,\"121\":1,\"124\":1,\"126\":1,\"127\":3}}],[\"exit\",{\"1\":{\"137\":1,\"138\":1}}],[\"exists\",{\"1\":{\"131\":1}}],[\"existing\",{\"1\":{\"83\":1,\"94\":1,\"148\":2}}],[\"exception\",{\"1\":{\"108\":2}}],[\"executions>\",{\"1\":{\"123\":1}}],[\"execution>\",{\"1\":{\"123\":1}}],[\"execution\",{\"1\":{\"122\":1,\"125\":1}}],[\"executed\",{\"1\":{\"94\":1}}],[\"execute\",{\"1\":{\"77\":1}}],[\"exec\",{\"1\":{\"108\":1,\"138\":1}}],[\"experiencing\",{\"1\":{\"106\":1}}],[\"exported\",{\"1\":{\"78\":1}}],[\"export\",{\"1\":{\"78\":1,\"142\":1}}],[\"expose\",{\"1\":{\"72\":1,\"121\":1,\"124\":1}}],[\"exposes\",{\"1\":{\"68\":1,\"78\":2}}],[\"example<\",{\"1\":{\"123\":4}}],[\"examples\",{\"0\":{\"70\":1,\"88\":1,\"153\":1},\"1\":{\"67\":2,\"77\":2}}],[\"example\",{\"0\":{\"64\":1,\"74\":1,\"116\":1,\"120\":1,\"123\":1,\"126\":1,\"133\":1},\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"64\":2,\"67\":1,\"74\":1,\"77\":1,\"80\":1,\"98\":1,\"99\":1,\"117\":1,\"118\":2,\"120\":1,\"122\":1,\"123\":2,\"125\":1,\"126\":5,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"133\":4,\"142\":1,\"149\":1}}],[\"encoding=\",{\"1\":{\"123\":1}}],[\"encode\",{\"1\":{\"117\":1,\"131\":2,\"132\":1}}],[\"ensures\",{\"1\":{\"118\":1}}],[\"environments\",{\"1\":{\"107\":1}}],[\"environment\",{\"0\":{\"122\":1,\"125\":1},\"1\":{\"94\":1,\"118\":1,\"122\":1,\"125\":1}}],[\"env\",{\"1\":{\"77\":1,\"112\":3,\"122\":1,\"125\":1}}],[\"enable\",{\"1\":{\"77\":1,\"118\":1}}],[\"enables\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1}}],[\"entire\",{\"1\":{\"108\":1}}],[\"entity\",{\"0\":{\"137\":1},\"1\":{\"68\":2,\"78\":2,\"107\":3,\"133\":3,\"143\":7,\"144\":1}}],[\"entry\",{\"1\":{\"69\":1}}],[\"endpoint\",{\"0\":{\"133\":1},\"1\":{\"69\":1,\"78\":1,\"107\":7,\"110\":2,\"133\":1,\"143\":4}}],[\"endpoints\",{\"0\":{\"69\":1,\"101\":1},\"1\":{\"64\":1,\"68\":1,\"69\":1,\"74\":1,\"78\":3,\"107\":1,\"110\":1,\"133\":3,\"141\":1,\"143\":6}}],[\"vect\",{\"1\":{\"126\":4}}],[\"version>\",{\"1\":{\"123\":4}}],[\"version=\",{\"1\":{\"123\":1}}],[\"version\",{\"1\":{\"108\":1,\"123\":1}}],[\"versatile\",{\"1\":{\"85\":1}}],[\"verified\",{\"1\":{\"69\":1}}],[\"verbose\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"view\",{\"0\":{\"131\":1,\"132\":1,\"162\":1},\"1\":{\"97\":3,\"107\":1,\"117\":3,\"131\":3,\"132\":7,\"142\":1}}],[\"views\",{\"1\":{\"95\":1,\"128\":2,\"131\":1,\"132\":5}}],[\"via\",{\"0\":{\"96\":1},\"1\":{\"110\":1}}],[\"var=value\",{\"1\":{\"122\":1,\"125\":1}}],[\"variable\",{\"1\":{\"117\":1}}],[\"variables\",{\"0\":{\"122\":1,\"125\":1},\"1\":{\"94\":1,\"122\":1,\"125\":1}}],[\"various\",{\"1\":{\"111\":1,\"128\":1,\"143\":1}}],[\"varchar>\",{\"1\":{\"126\":2}}],[\"varchar\",{\"1\":{\"95\":5,\"96\":2,\"117\":6,\"123\":2,\"126\":4,\"128\":6,\"129\":3}}],[\"valid\",{\"0\":{\"71\":1},\"1\":{\"83\":1}}],[\"values\",{\"1\":{\"99\":2,\"115\":1,\"116\":2,\"130\":3}}],[\"value\",{\"1\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1,\"39\":1,\"42\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"83\":1,\"107\":1,\"112\":2,\"114\":1,\"126\":9}}],[\"v\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"71\":1,\"72\":1}}],[\"<goal>single<\",{\"1\":{\"123\":1}}],[\"<goals>\",{\"1\":{\"123\":1}}],[\"<groupid>org\",{\"1\":{\"123\":2}}],[\"<groupid>com\",{\"1\":{\"123\":1}}],[\"<groupid>io\",{\"1\":{\"123\":1}}],[\"<execution>\",{\"1\":{\"123\":1}}],[\"<executions>\",{\"1\":{\"123\":1}}],[\"<entity>\",{\"1\":{\"143\":11}}],[\"<entity\",{\"1\":{\"107\":3}}],[\"<finalname>risingwave\",{\"1\":{\"123\":1}}],[\"<descriptorref>jar\",{\"1\":{\"123\":1}}],[\"<descriptorrefs>\",{\"1\":{\"123\":1}}],[\"<dependency>\",{\"1\":{\"123\":1}}],[\"<dependencies>\",{\"1\":{\"123\":1}}],[\"<version>3\",{\"1\":{\"123\":2}}],[\"<version>0\",{\"1\":{\"123\":2}}],[\"<phase>package<\",{\"1\":{\"123\":1}}],[\"<plugin>\",{\"1\":{\"123\":2}}],[\"<plugins>\",{\"1\":{\"123\":1}}],[\"<properties>\",{\"1\":{\"123\":1}}],[\"<project\",{\"1\":{\"123\":2}}],[\"<providerid>\",{\"1\":{\"50\":1,\"51\":2}}],[\"<build>\",{\"1\":{\"123\":1}}],[\"<mainclass>io\",{\"1\":{\"123\":1}}],[\"<manifest>\",{\"1\":{\"123\":1}}],[\"<maven\",{\"1\":{\"123\":2}}],[\"<modelversion>4\",{\"1\":{\"123\":1}}],[\"<migration\",{\"1\":{\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"<\",{\"1\":{\"71\":3,\"72\":7,\"123\":18}}],[\"<secret>\",{\"1\":{\"50\":1,\"51\":2}}],[\"<spec>\",{\"1\":{\"5\":1,\"6\":2}}],[\"<realm>\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"<clientid>\",{\"1\":{\"50\":1,\"51\":2}}],[\"<configuration>\",{\"1\":{\"123\":2}}],[\"<config>\",{\"1\":{\"20\":1,\"21\":2}}],[\"<command>\",{\"1\":{\"29\":1,\"44\":1}}],[\"<appendassemblyid>false<\",{\"1\":{\"123\":1}}],[\"<archive>\",{\"1\":{\"123\":1}}],[\"<argline>\",{\"1\":{\"123\":1}}],[\"<args>\",{\"1\":{\"29\":1,\"44\":1}}],[\"<artifactid>maven\",{\"1\":{\"123\":2}}],[\"<artifactid>risingwave\",{\"1\":{\"123\":2}}],[\"<alias>\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2}}],[\"<name>udf\",{\"1\":{\"123\":1}}],[\"<name>\",{\"1\":{\"38\":1,\"39\":1}}],[\"<id>udf\",{\"1\":{\"123\":1}}],[\"<id>\",{\"1\":{\"5\":1,\"6\":1,\"11\":1,\"12\":1,\"14\":1,\"15\":1,\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"26\":1,\"27\":1}}],[\"|\",{\"1\":{\"5\":3,\"8\":2,\"11\":2,\"14\":2,\"20\":3,\"23\":2,\"26\":2,\"32\":1,\"38\":1,\"41\":1,\"50\":7,\"53\":4,\"56\":4,\"59\":1,\"62\":1}}],[\"high\",{\"1\":{\"83\":1}}],[\"happened\",{\"1\":{\"143\":1}}],[\"hand\",{\"1\":{\"107\":2,\"124\":1,\"143\":1}}],[\"has\",{\"1\":{\"83\":2,\"116\":1}}],[\"have\",{\"1\":{\"66\":1,\"76\":1,\"78\":1,\"81\":1,\"96\":1,\"100\":2,\"105\":1,\"113\":1,\"119\":1,\"120\":1,\"123\":2,\"126\":1}}],[\"home\",{\"1\":{\"108\":1}}],[\"homebrew\",{\"1\":{\"65\":1,\"66\":2,\"75\":1,\"76\":2,\"91\":1}}],[\"how\",{\"0\":{\"110\":1},\"1\":{\"80\":1,\"90\":1,\"107\":3,\"108\":1,\"109\":2}}],[\"host\",{\"1\":{\"71\":1,\"72\":1}}],[\"here\",{\"1\":{\"115\":1,\"127\":1}}],[\"header\",{\"1\":{\"107\":2,\"110\":1,\"143\":1}}],[\"headers\",{\"1\":{\"72\":1}}],[\"head\",{\"1\":{\"66\":1,\"76\":1}}],[\"helps\",{\"1\":{\"92\":1,\"95\":1}}],[\"help\",{\"0\":{\"28\":1},\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"32\":1,\"33\":2,\"38\":1,\"39\":2,\"41\":1,\"42\":2,\"45\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":2,\"62\":1,\"63\":2,\"106\":1}}],[\"http2\",{\"1\":{\"137\":1}}],[\"https\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":1,\"123\":1}}],[\"http\",{\"0\":{\"143\":1},\"1\":{\"64\":1,\"68\":1,\"69\":5,\"71\":3,\"72\":3,\"74\":1,\"78\":1,\"98\":1,\"100\":1,\"101\":3,\"107\":1,\"110\":1,\"114\":1,\"123\":4,\"133\":6,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1,\"141\":1,\"142\":6,\"143\":6}}],[\"h\",{\"1\":{\"5\":1,\"6\":2,\"8\":1,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":2,\"20\":1,\"21\":2,\"23\":1,\"24\":2,\"26\":1,\"27\":2,\"32\":1,\"33\":2,\"38\":1,\"39\":2,\"41\":1,\"42\":2,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":2,\"62\":1,\"63\":2,\"71\":2,\"101\":4,\"120\":1,\"123\":1,\"126\":1,\"135\":1,\"139\":1}}],[\"flow\",{\"1\":{\"127\":1}}],[\"flexibility\",{\"1\":{\"119\":1}}],[\"facilitates\",{\"1\":{\"132\":1}}],[\"facebook\",{\"1\":{\"115\":2}}],[\"faq\",{\"0\":{\"107\":1}}],[\"full\",{\"1\":{\"100\":1}}],[\"fulfill\",{\"1\":{\"65\":1,\"75\":1}}],[\"function\",{\"0\":{\"97\":1,\"118\":1,\"127\":1,\"158\":1},\"1\":{\"96\":6,\"97\":3,\"118\":8,\"119\":2,\"120\":3,\"121\":3,\"123\":5,\"124\":3,\"126\":6,\"127\":3}}],[\"functions\",{\"0\":{\"96\":1},\"1\":{\"83\":3,\"85\":1,\"96\":4,\"118\":11,\"119\":1,\"121\":1,\"123\":5,\"124\":2,\"126\":2,\"127\":10}}],[\"funds\",{\"1\":{\"81\":1}}],[\"frequently\",{\"0\":{\"107\":1}}],[\"fresh\",{\"1\":{\"97\":1}}],[\"fred\",{\"1\":{\"83\":1}}],[\"frontend\",{\"1\":{\"77\":1}}],[\"from\",{\"1\":{\"10\":1,\"15\":1,\"25\":1,\"39\":1,\"55\":1,\"74\":1,\"77\":1,\"80\":1,\"82\":1,\"83\":1,\"94\":1,\"96\":1,\"97\":3,\"98\":1,\"100\":1,\"108\":2,\"113\":1,\"117\":2,\"118\":2,\"126\":1,\"130\":1,\"131\":2,\"132\":4,\"141\":1}}],[\"fraud\",{\"0\":{\"83\":1},\"1\":{\"77\":1,\"82\":2,\"83\":2}}],[\"fetch\",{\"0\":{\"72\":1,\"134\":1,\"148\":1},\"1\":{\"69\":2,\"78\":4,\"128\":1,\"143\":1,\"148\":1}}],[\"features\",{\"1\":{\"95\":1,\"107\":1}}],[\"feature\",{\"1\":{\"1\":1}}],[\"first\",{\"1\":{\"123\":1}}],[\"firebase\",{\"1\":{\"85\":1}}],[\"fill\",{\"1\":{\"95\":1,\"123\":1}}],[\"filename\",{\"1\":{\"149\":1}}],[\"files\",{\"1\":{\"36\":1,\"40\":1,\"96\":3,\"107\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"file\",{\"1\":{\"31\":1,\"36\":1,\"37\":1,\"77\":1,\"83\":1,\"94\":2,\"95\":3,\"96\":1,\"98\":1,\"99\":3,\"100\":1,\"107\":4,\"109\":1,\"112\":1,\"118\":6,\"120\":2,\"121\":1,\"122\":1,\"123\":3,\"124\":2,\"125\":1,\"126\":3,\"127\":1,\"128\":5,\"129\":6,\"130\":3,\"131\":5,\"132\":5,\"142\":2,\"147\":1,\"148\":2,\"149\":2}}],[\"finalname>\",{\"1\":{\"123\":1}}],[\"find\",{\"1\":{\"77\":1,\"83\":1}}],[\"finish\",{\"1\":{\"67\":1,\"77\":1,\"82\":1,\"100\":1}}],[\"fssl\",{\"1\":{\"66\":1,\"76\":1}}],[\"found\",{\"1\":{\"108\":1,\"110\":1,\"150\":1}}],[\"follow\",{\"1\":{\"109\":1}}],[\"follows\",{\"1\":{\"107\":2}}],[\"following\",{\"1\":{\"65\":1,\"66\":2,\"73\":1,\"75\":1,\"76\":2,\"77\":2,\"83\":1,\"92\":1,\"94\":1,\"95\":2,\"96\":1,\"99\":1,\"100\":2,\"102\":1,\"112\":2,\"113\":1,\"115\":1,\"116\":1,\"118\":3,\"120\":1,\"123\":4,\"126\":3,\"128\":2,\"129\":2,\"131\":2,\"132\":2,\"133\":1,\"142\":2,\"143\":1,\"148\":1,\"149\":2}}],[\"folder\",{\"1\":{\"31\":1,\"94\":1,\"118\":1,\"120\":2,\"123\":4,\"126\":2,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"form\",{\"1\":{\"101\":1,\"121\":1}}],[\"formats\",{\"1\":{\"143\":2}}],[\"format\",{\"1\":{\"95\":2,\"112\":1,\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"for\",{\"1\":{\"1\":1,\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"16\":1,\"21\":1,\"24\":1,\"27\":1,\"30\":2,\"33\":1,\"34\":1,\"39\":1,\"42\":1,\"45\":2,\"46\":1,\"51\":1,\"52\":1,\"54\":1,\"57\":1,\"58\":1,\"60\":1,\"61\":1,\"63\":1,\"67\":1,\"77\":1,\"82\":1,\"83\":1,\"85\":1,\"92\":1,\"95\":3,\"96\":1,\"100\":1,\"103\":2,\"107\":3,\"108\":2,\"112\":3,\"115\":3,\"117\":1,\"118\":3,\"119\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":2,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":2,\"133\":1,\"141\":1,\"143\":2,\"144\":3,\"149\":2}}],[\"split\",{\"1\":{\"123\":2,\"126\":1}}],[\"specify\",{\"1\":{\"132\":1}}],[\"specific\",{\"1\":{\"83\":1,\"107\":1,\"128\":1}}],[\"specifications\",{\"0\":{\"141\":1,\"142\":1},\"1\":{\"3\":1,\"7\":1,\"30\":1,\"45\":1,\"133\":1,\"142\":2}}],[\"specification\",{\"0\":{\"143\":1,\"144\":1},\"1\":{\"3\":3,\"4\":1,\"6\":2,\"10\":1,\"12\":1,\"13\":1,\"15\":1,\"141\":2,\"142\":6,\"143\":1,\"144\":1}}],[\"specified\",{\"1\":{\"74\":1,\"107\":1}}],[\"spec\",{\"1\":{\"5\":1,\"6\":2,\"64\":5,\"74\":5,\"142\":5}}],[\"src\",{\"1\":{\"123\":3}}],[\"snapshot<\",{\"1\":{\"123\":1}}],[\"save\",{\"1\":{\"132\":1,\"148\":1}}],[\"same\",{\"1\":{\"127\":1,\"129\":1,\"132\":1}}],[\"saml\",{\"1\":{\"115\":2}}],[\"safe\",{\"1\":{\"83\":6}}],[\"sse\",{\"0\":{\"137\":1},\"1\":{\"107\":1,\"140\":2,\"143\":1}}],[\"sso\",{\"0\":{\"46\":1,\"49\":1,\"52\":1,\"55\":1,\"115\":1},\"1\":{\"30\":1,\"45\":1,\"47\":1,\"50\":1,\"53\":1,\"56\":1,\"115\":3,\"116\":6}}],[\"slack\",{\"1\":{\"104\":2}}],[\"scalarfunction\",{\"1\":{\"123\":3}}],[\"scopes\",{\"1\":{\"107\":1,\"112\":2}}],[\"scores\",{\"1\":{\"97\":5,\"101\":2}}],[\"score\",{\"1\":{\"96\":4,\"97\":8}}],[\"schemalocation=\",{\"1\":{\"123\":1}}],[\"schema\",{\"1\":{\"78\":3,\"95\":1,\"100\":3,\"129\":1,\"132\":1,\"143\":2,\"144\":1}}],[\"syntax\",{\"1\":{\"95\":2,\"96\":1,\"128\":2,\"129\":1,\"131\":1,\"132\":1}}],[\"system\",{\"1\":{\"83\":1}}],[\"so\",{\"1\":{\"119\":1}}],[\"sources\",{\"1\":{\"132\":1}}],[\"source>\",{\"1\":{\"123\":1}}],[\"source>11<\",{\"1\":{\"123\":1}}],[\"sourceencoding>\",{\"1\":{\"123\":1}}],[\"sourceencoding>utf\",{\"1\":{\"123\":1}}],[\"source\",{\"1\":{\"85\":1,\"92\":1,\"132\":1}}],[\"something\",{\"1\":{\"83\":1,\"107\":1}}],[\"some\",{\"1\":{\"78\":1,\"101\":1,\"107\":1,\"115\":1,\"130\":3,\"131\":1}}],[\"shepherd\",{\"1\":{\"134\":1,\"137\":1}}],[\"sharing\",{\"1\":{\"112\":1}}],[\"share\",{\"1\":{\"104\":1}}],[\"should\",{\"1\":{\"81\":1,\"83\":1,\"107\":1}}],[\"shows\",{\"1\":{\"13\":1}}],[\"show\",{\"0\":{\"13\":1},\"1\":{\"3\":2,\"6\":1,\"9\":1,\"12\":1,\"14\":1,\"15\":1,\"21\":1,\"24\":1,\"27\":1,\"51\":1,\"54\":1,\"57\":1,\"78\":1,\"100\":1,\"101\":1,\"142\":2}}],[\"sh\",{\"1\":{\"66\":1,\"76\":1,\"138\":1}}],[\"sudo\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"sum\",{\"1\":{\"97\":1}}],[\"summary\",{\"1\":{\"83\":2}}],[\"supported\",{\"1\":{\"95\":1,\"115\":2,\"118\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"supports\",{\"1\":{\"95\":1,\"118\":1,\"127\":1,\"143\":1,\"144\":1}}],[\"support\",{\"0\":{\"89\":1,\"103\":1,\"106\":1,\"155\":1},\"1\":{\"96\":1,\"103\":1,\"106\":2,\"107\":2,\"118\":2,\"127\":1,\"132\":1}}],[\"supporting\",{\"1\":{\"85\":1}}],[\"suite\",{\"1\":{\"85\":1}}],[\"succeeds\",{\"1\":{\"118\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1}}],[\"successfully\",{\"1\":{\"77\":2,\"100\":2,\"116\":2}}],[\"such\",{\"1\":{\"78\":1,\"110\":1,\"143\":1}}],[\"surefire\",{\"1\":{\"123\":1}}],[\"sure\",{\"1\":{\"65\":1,\"75\":1,\"123\":1}}],[\"subscribe\",{\"1\":{\"107\":1,\"143\":1,\"144\":1}}],[\"subsequent\",{\"1\":{\"83\":1}}],[\"sub\",{\"0\":{\"3\":1,\"18\":1,\"30\":1,\"36\":1,\"45\":1,\"48\":1},\"1\":{\"1\":1,\"16\":1,\"34\":1,\"46\":1}}],[\"sql\",{\"1\":{\"31\":1,\"77\":1,\"94\":2,\"95\":5,\"96\":2,\"97\":2,\"98\":1,\"99\":2,\"100\":1,\"113\":1,\"118\":9,\"119\":1,\"127\":5,\"128\":1,\"129\":3,\"130\":2,\"131\":2,\"132\":2}}],[\"series\",{\"1\":{\"123\":4}}],[\"serves\",{\"1\":{\"143\":2}}],[\"server\",{\"1\":{\"77\":1,\"84\":1,\"96\":1,\"100\":1,\"107\":1,\"121\":1,\"124\":1,\"133\":1,\"138\":1,\"143\":2,\"149\":1}}],[\"service\",{\"0\":{\"145\":1},\"1\":{\"107\":1,\"110\":1,\"114\":1,\"115\":1,\"145\":2}}],[\"select\",{\"1\":{\"97\":3,\"117\":2,\"118\":3,\"120\":1,\"123\":3,\"126\":3,\"131\":2,\"132\":2}}],[\"section\",{\"1\":{\"133\":1}}],[\"security\",{\"1\":{\"85\":1}}],[\"second\",{\"1\":{\"81\":1,\"123\":1}}],[\"secret\",{\"1\":{\"50\":1,\"51\":2,\"112\":5,\"115\":2,\"116\":2}}],[\"sendpayment\",{\"1\":{\"117\":2,\"131\":2,\"132\":2}}],[\"sending\",{\"1\":{\"81\":1}}],[\"send\",{\"0\":{\"81\":1},\"1\":{\"81\":3,\"133\":1}}],[\"sent\",{\"1\":{\"80\":1,\"107\":1,\"143\":1}}],[\"see\",{\"1\":{\"80\":1,\"100\":1,\"140\":1}}],[\"seeder\",{\"0\":{\"130\":1}}],[\"seeded\",{\"1\":{\"112\":1,\"113\":2}}],[\"seeding\",{\"0\":{\"113\":1}}],[\"seed\",{\"1\":{\"31\":1,\"77\":1,\"94\":2,\"98\":2,\"99\":2,\"100\":1,\"113\":1,\"130\":3}}],[\"session\",{\"1\":{\"80\":1}}],[\"set\",{\"1\":{\"77\":1,\"78\":1,\"110\":2,\"112\":1,\"116\":1,\"132\":1}}],[\"setting\",{\"0\":{\"67\":1,\"77\":1,\"98\":1},\"1\":{\"107\":1}}],[\"separates\",{\"1\":{\"39\":1}}],[\"separate\",{\"1\":{\"15\":1}}],[\"simplifies\",{\"1\":{\"128\":1}}],[\"similar\",{\"1\":{\"83\":1}}],[\"similarly\",{\"1\":{\"69\":1}}],[\"sign\",{\"0\":{\"115\":1},\"1\":{\"30\":1,\"45\":1,\"46\":1,\"115\":2}}],[\"single\",{\"0\":{\"115\":1},\"1\":{\"30\":1,\"45\":1,\"115\":2}}],[\"still\",{\"1\":{\"108\":1}}],[\"statement\",{\"1\":{\"127\":1}}],[\"static\",{\"1\":{\"123\":5}}],[\"status\",{\"1\":{\"108\":1,\"131\":2}}],[\"startup\",{\"0\":{\"99\":1},\"1\":{\"94\":1,\"99\":1}}],[\"started\",{\"0\":{\"86\":1,\"154\":1},\"1\":{\"100\":1}}],[\"starting\",{\"1\":{\"81\":1}}],[\"starts\",{\"1\":{\"58\":1}}],[\"start\",{\"0\":{\"58\":1,\"100\":1},\"1\":{\"30\":2,\"45\":2,\"59\":1,\"65\":1,\"67\":2,\"75\":1,\"77\":3,\"96\":1,\"100\":2,\"107\":3,\"108\":1,\"109\":1,\"110\":1,\"120\":1,\"123\":2,\"126\":1,\"147\":1}}],[\"steps\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"step\",{\"0\":{\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1},\"1\":{\"95\":1}}],[\"straightforward\",{\"1\":{\"131\":1}}],[\"struct<key\",{\"1\":{\"126\":2}}],[\"struct\",{\"1\":{\"126\":1}}],[\"str\",{\"1\":{\"96\":1,\"123\":2,\"126\":1}}],[\"string\",{\"1\":{\"83\":1,\"112\":7,\"123\":4}}],[\"streamline\",{\"1\":{\"129\":1}}],[\"streams\",{\"0\":{\"95\":1,\"137\":1},\"1\":{\"95\":2,\"128\":2,\"131\":1,\"141\":1}}],[\"stream\",{\"0\":{\"128\":1,\"140\":1,\"160\":1},\"1\":{\"78\":6,\"83\":1,\"95\":2,\"97\":1,\"107\":3,\"117\":3,\"123\":4,\"128\":6,\"131\":1,\"132\":1,\"133\":1,\"137\":1,\"140\":2,\"143\":7,\"144\":1}}],[\"streaming\",{\"1\":{\"78\":2,\"85\":1,\"100\":2,\"118\":1}}],[\"streampay\",{\"0\":{\"74\":1,\"78\":1},\"1\":{\"74\":1,\"77\":5,\"78\":21,\"83\":1,\"117\":3,\"128\":1,\"129\":1,\"130\":3,\"131\":3,\"132\":2,\"142\":1}}],[\"studio\",{\"1\":{\"78\":1,\"100\":1,\"142\":1}}],[\"storage\",{\"0\":{\"159\":1}}],[\"stored\",{\"1\":{\"67\":1,\"68\":1,\"77\":1,\"78\":1,\"96\":1,\"121\":1,\"124\":1}}],[\"stopping\",{\"0\":{\"73\":1,\"84\":1}}],[\"stops\",{\"1\":{\"61\":1}}],[\"stop\",{\"0\":{\"61\":1,\"102\":1},\"1\":{\"30\":2,\"45\":2,\"62\":1,\"73\":2,\"84\":2,\"102\":2,\"108\":2,\"120\":2,\"123\":2,\"126\":2}}],[\"s\",{\"1\":{\"1\":1,\"5\":1,\"6\":2,\"16\":1,\"39\":2,\"50\":1,\"51\":2,\"78\":2,\"94\":2,\"97\":1,\"107\":1,\"113\":4,\"123\":4,\"128\":1,\"133\":1,\"149\":1}}],[\"aqiacg==\",{\"1\":{\"140\":1}}],[\"aqiaca==\",{\"1\":{\"137\":1}}],[\"aqiaba==\",{\"1\":{\"137\":1}}],[\"aqiaag==\",{\"1\":{\"72\":1}}],[\"ability\",{\"1\":{\"118\":1}}],[\"about\",{\"1\":{\"105\":1,\"141\":1,\"143\":2,\"144\":1}}],[\"at\",{\"1\":{\"108\":1}}],[\"aggregating\",{\"1\":{\"97\":1}}],[\"authorization\",{\"1\":{\"101\":2,\"107\":1,\"110\":1}}],[\"authenticating\",{\"1\":{\"110\":1}}],[\"authentication\",{\"0\":{\"98\":1,\"109\":1,\"111\":1,\"156\":1},\"1\":{\"94\":1,\"107\":6,\"109\":2,\"111\":1,\"112\":1,\"116\":1}}],[\"authenticated\",{\"0\":{\"117\":1},\"1\":{\"107\":3,\"117\":1}}],[\"authenticate\",{\"1\":{\"101\":1,\"110\":1,\"115\":1}}],[\"auto\",{\"1\":{\"96\":1,\"121\":1,\"124\":1}}],[\"automatically\",{\"1\":{\"64\":1,\"74\":1,\"85\":1,\"137\":1,\"138\":1,\"147\":1}}],[\"amount\",{\"1\":{\"83\":1,\"117\":5,\"128\":1,\"132\":4}}],[\"advanced\",{\"1\":{\"118\":1}}],[\"advisable\",{\"1\":{\"83\":1}}],[\"adjust\",{\"1\":{\"116\":2,\"143\":1}}],[\"adjusted\",{\"1\":{\"107\":1}}],[\"adapter\",{\"1\":{\"110\":1}}],[\"admin\",{\"1\":{\"98\":1,\"114\":4,\"149\":1}}],[\"address\",{\"1\":{\"133\":2}}],[\"adding\",{\"0\":{\"122\":1,\"125\":1},\"1\":{\"107\":1}}],[\"additional\",{\"1\":{\"96\":3,\"115\":1,\"121\":1,\"124\":1,\"149\":1}}],[\"added\",{\"1\":{\"39\":1,\"116\":1,\"140\":1}}],[\"adds\",{\"1\":{\"4\":1,\"19\":1,\"49\":1}}],[\"add\",{\"0\":{\"4\":1,\"19\":1,\"37\":1,\"49\":1},\"1\":{\"3\":2,\"5\":1,\"18\":2,\"20\":1,\"36\":1,\"38\":1,\"48\":2,\"50\":1,\"77\":1,\"92\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"115\":1,\"116\":2,\"118\":4,\"120\":1,\"121\":1,\"122\":1,\"123\":2,\"125\":1,\"126\":2,\"128\":2,\"129\":2,\"131\":2,\"132\":2,\"149\":2}}],[\"action\",{\"1\":{\"133\":1}}],[\"activity\",{\"1\":{\"95\":1,\"96\":4,\"97\":6,\"98\":1,\"101\":4}}],[\"activities\",{\"1\":{\"78\":3,\"95\":1,\"97\":3,\"101\":1}}],[\"accept\",{\"1\":{\"143\":1}}],[\"accessing\",{\"1\":{\"141\":1}}],[\"accessible\",{\"1\":{\"110\":1}}],[\"access\",{\"1\":{\"71\":1,\"72\":2,\"101\":3,\"107\":2,\"110\":1,\"119\":1,\"123\":3}}],[\"according\",{\"1\":{\"133\":1}}],[\"accommodate\",{\"1\":{\"118\":1,\"127\":1}}],[\"assembly\",{\"1\":{\"123\":1}}],[\"assigned\",{\"1\":{\"112\":1,\"113\":1}}],[\"assistance\",{\"1\":{\"104\":1}}],[\"asked\",{\"0\":{\"107\":1}}],[\"asynchronous\",{\"1\":{\"85\":2}}],[\"asyncapi\",{\"0\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"141\":1,\"142\":1},\"1\":{\"1\":1,\"2\":1,\"3\":4,\"4\":1,\"5\":1,\"6\":2,\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"30\":2,\"45\":2,\"64\":4,\"74\":4,\"78\":6,\"100\":7,\"141\":3,\"142\":17,\"143\":1,\"144\":1}}],[\"as\",{\"1\":{\"78\":1,\"81\":1,\"82\":1,\"83\":2,\"96\":1,\"97\":5,\"107\":1,\"110\":2,\"117\":5,\"118\":3,\"119\":2,\"120\":1,\"121\":1,\"123\":3,\"126\":4,\"127\":1,\"131\":5,\"132\":6,\"133\":1,\"137\":1,\"138\":2,\"143\":1,\"149\":1}}],[\"after\",{\"1\":{\"77\":1,\"99\":1,\"112\":1,\"118\":1,\"121\":1,\"124\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"141\":1,\"149\":1}}],[\"ai\",{\"0\":{\"74\":1},\"1\":{\"83\":2}}],[\"awesome\",{\"1\":{\"71\":1}}],[\"apache\",{\"1\":{\"123\":6}}],[\"apt\",{\"1\":{\"120\":1,\"123\":1,\"126\":1}}],[\"api\",{\"0\":{\"151\":1},\"1\":{\"75\":1,\"77\":3,\"78\":1,\"108\":1,\"143\":1}}],[\"apis\",{\"0\":{\"68\":1,\"78\":1},\"1\":{\"78\":3,\"85\":1,\"100\":3,\"128\":1,\"129\":1}}],[\"appendassemblyid>\",{\"1\":{\"123\":1}}],[\"apply\",{\"1\":{\"95\":1}}],[\"application\",{\"1\":{\"71\":2,\"72\":1,\"77\":1,\"92\":2,\"95\":1,\"101\":2,\"109\":1,\"110\":1,\"112\":2,\"113\":1,\"115\":1,\"128\":1,\"135\":1,\"139\":1}}],[\"approve\",{\"1\":{\"82\":2}}],[\"app\",{\"1\":{\"74\":1,\"83\":1}}],[\"aklivity\",{\"1\":{\"66\":1,\"67\":1,\"76\":1,\"77\":2,\"92\":2,\"100\":1,\"116\":2,\"123\":6}}],[\"always\",{\"1\":{\"131\":1}}],[\"already\",{\"1\":{\"108\":1}}],[\"also\",{\"1\":{\"96\":1,\"117\":1,\"121\":1,\"124\":1,\"130\":1}}],[\"alternative\",{\"1\":{\"85\":1}}],[\"although\",{\"1\":{\"83\":1}}],[\"alias\",{\"1\":{\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"115\":2,\"116\":3}}],[\"allen\",{\"1\":{\"80\":3,\"83\":8,\"99\":2,\"101\":1,\"130\":3}}],[\"allows\",{\"1\":{\"131\":1}}],[\"allowed\",{\"1\":{\"112\":1}}],[\"allow\",{\"1\":{\"71\":1,\"72\":1,\"132\":1,\"145\":1}}],[\"all\",{\"0\":{\"134\":1},\"1\":{\"1\":1,\"3\":1,\"7\":1,\"16\":1,\"18\":1,\"22\":1,\"28\":1,\"34\":1,\"36\":1,\"40\":1,\"43\":1,\"46\":1,\"48\":1,\"52\":1,\"69\":1,\"78\":5,\"95\":1,\"100\":1,\"117\":1,\"128\":1,\"132\":1,\"133\":1,\"143\":1}}],[\"archive>\",{\"1\":{\"123\":1}}],[\"argline>\",{\"1\":{\"123\":1}}],[\"argument\",{\"1\":{\"15\":1,\"39\":1}}],[\"arguments\",{\"1\":{\"15\":1,\"39\":1}}],[\"artifacts\",{\"1\":{\"145\":1}}],[\"artifact\",{\"1\":{\"123\":1}}],[\"artifactid>\",{\"1\":{\"123\":4}}],[\"article\",{\"1\":{\"43\":1,\"95\":1,\"107\":2,\"118\":1,\"129\":1,\"131\":1,\"132\":1,\"141\":1,\"149\":1}}],[\"array\",{\"1\":{\"123\":5}}],[\"arrayaccess\",{\"1\":{\"123\":1}}],[\"arrives\",{\"1\":{\"97\":1}}],[\"arrow\",{\"1\":{\"96\":1,\"118\":1,\"124\":1,\"126\":1}}],[\"are\",{\"1\":{\"64\":2,\"69\":1,\"74\":1,\"78\":1,\"81\":1,\"107\":1,\"111\":1,\"113\":1,\"115\":4,\"119\":1,\"127\":1,\"138\":1,\"143\":1}}],[\"avro\",{\"1\":{\"143\":1}}],[\"avoid\",{\"1\":{\"15\":1}}],[\"available\",{\"0\":{\"112\":1},\"1\":{\"1\":1,\"3\":1,\"7\":1,\"16\":1,\"22\":1,\"28\":1,\"34\":1,\"43\":1,\"46\":1,\"52\":1,\"69\":1,\"78\":1,\"110\":1,\"133\":1,\"142\":1,\"143\":1,\"145\":1}}],[\"annotate\",{\"1\":{\"124\":1}}],[\"answer\",{\"1\":{\"83\":1}}],[\"any\",{\"1\":{\"81\":1,\"96\":2,\"107\":1,\"121\":1,\"124\":1,\"137\":1,\"138\":1,\"143\":1}}],[\"another\",{\"1\":{\"74\":1,\"132\":1}}],[\"and\",{\"0\":{\"95\":1},\"1\":{\"31\":1,\"64\":2,\"66\":1,\"67\":1,\"74\":2,\"76\":1,\"77\":2,\"82\":1,\"83\":5,\"85\":3,\"92\":1,\"94\":1,\"95\":3,\"96\":2,\"100\":2,\"103\":1,\"104\":1,\"107\":6,\"109\":2,\"110\":2,\"113\":1,\"115\":1,\"117\":1,\"118\":7,\"119\":1,\"121\":1,\"123\":1,\"124\":2,\"126\":2,\"127\":4,\"128\":5,\"129\":4,\"130\":1,\"131\":2,\"132\":2,\"133\":1,\"140\":1,\"141\":2,\"142\":1,\"143\":7,\"144\":4,\"145\":2,\"149\":2}}],[\"an\",{\"1\":{\"3\":2,\"10\":1,\"13\":1,\"31\":1,\"48\":1,\"55\":1,\"64\":2,\"68\":1,\"69\":1,\"74\":3,\"77\":1,\"78\":1,\"85\":1,\"94\":1,\"95\":2,\"100\":1,\"106\":1,\"107\":4,\"108\":2,\"110\":1,\"115\":1,\"116\":2,\"117\":1,\"118\":3,\"120\":2,\"121\":1,\"123\":2,\"126\":2,\"128\":1,\"129\":2,\"132\":2,\"133\":3,\"143\":3,\"149\":2}}],[\"a\",{\"0\":{\"71\":1,\"72\":1,\"94\":1,\"135\":1},\"1\":{\"3\":1,\"4\":1,\"18\":2,\"19\":1,\"25\":1,\"30\":1,\"31\":1,\"36\":1,\"37\":1,\"45\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":2,\"53\":1,\"54\":2,\"56\":1,\"57\":2,\"78\":1,\"80\":1,\"81\":3,\"82\":2,\"83\":3,\"85\":2,\"92\":1,\"94\":4,\"95\":4,\"96\":2,\"97\":3,\"98\":2,\"100\":1,\"107\":9,\"109\":1,\"110\":1,\"112\":2,\"113\":1,\"116\":1,\"118\":7,\"120\":8,\"121\":2,\"123\":8,\"124\":1,\"126\":7,\"127\":1,\"128\":2,\"129\":5,\"130\":1,\"131\":3,\"132\":5,\"140\":1,\"141\":1,\"144\":1,\"145\":1,\"147\":1,\"149\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
