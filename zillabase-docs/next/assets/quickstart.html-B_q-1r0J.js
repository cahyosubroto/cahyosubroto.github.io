import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{b as a,k as i,o as t}from"./app-t02iS2ks.js";const n={};function l(p,s){return t(),a("div",null,s[0]||(s[0]=[i(`<h1 id="quickstart" tabindex="-1"><a class="header-anchor" href="#quickstart"><span>Quickstart</span></a></h1><p>This guide provides a step-by-step approach to getting started with Zillabase. It automatically generates both HTTP AsyncAPI 3.x and Kafka AsyncAPI 3.x specifications based on Kafka Cluster metadata.</p><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><p>Ensure you have the following tools installed on your system:</p><ul><li><strong>Homebrew</strong></li><li><strong>curl</strong></li><li><strong>Docker</strong></li><li><strong>Java 20 or later</strong></li></ul><h2 id="step-1-install-zillabase" tabindex="-1"><a class="header-anchor" href="#step-1-install-zillabase"><span>Step 1: Install Zillabase</span></a></h2><p>To install Zillabase, use the following commands:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aklivity/tap</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zillabase</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-2-clone-the-example-repository" tabindex="-1"><a class="header-anchor" href="#step-2-clone-the-example-repository"><span>Step 2: Clone the Example Repository</span></a></h2><p>To quickly start using Zillabase stack, you can use our quickstart example repo.</p><ol><li>Clone the repo using the following command:</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/aklivity/zillabase.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Navigate to the <strong>examples</strong> &gt; <strong>quickstart</strong> &gt; <strong>zillabase</strong> folder.</li></ol><h2 id="step-3-start-zillabase" tabindex="-1"><a class="header-anchor" href="#step-3-start-zillabase"><span>Step 3: Start Zillabase</span></a></h2><p>Start the Zillabase using the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zillabase</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="example-output" tabindex="-1"><a class="header-anchor" href="#example-output"><span>Example Output:</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>3.2.3: Pulling from bitnami/kafka</span></span>
<span class="line"><span>latest: Pulling from risingwavelabs/risingwave</span></span>
<span class="line"><span>latest-release: Pulling from apicurio/apicurio-registry-mem</span></span>
<span class="line"><span>latest: Pulling from bitnami/keycloak</span></span>
<span class="line"><span>seed-kafka.yaml processed successfully!</span></span>
<span class="line"><span>Registered AsyncAPI spec: kafka-asyncapi</span></span>
<span class="line"><span>Registered AsyncAPI spec: http-asyncapi</span></span>
<span class="line"><span>Config Server is populated with zilla.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-4-use-generated-api-endpoints" tabindex="-1"><a class="header-anchor" href="#step-4-use-generated-api-endpoints"><span>Step 4: Use Generated API Endpoints</span></a></h2><p>Zillabase acts as an HTTP Kafka proxy, exposing CRUD endpoints for entities. Entity data is stored in Kafka topics, utilizing Kafka&#39;s <code>cleanup.policy=compact</code> feature.</p><h3 id="available-endpoints" tabindex="-1"><a class="header-anchor" href="#available-endpoints"><span>Available Endpoints</span></a></h3><table><thead><tr><th>Protocol</th><th>Method</th><th>Endpoint</th><th>Topic</th><th>Description</th></tr></thead><tbody><tr><td>HTTP</td><td>POST</td><td>/events</td><td>events</td><td>Create an event.</td></tr><tr><td>HTTP</td><td>PUT</td><td>/events/{id}</td><td>events</td><td>Update an event by the key.</td></tr><tr><td>HTTP</td><td>DELETE</td><td>/events/{id}</td><td>events</td><td>Delete an event by the key.</td></tr><tr><td>HTTP</td><td>GET</td><td>/events</td><td>events</td><td>Fetch all events.</td></tr><tr><td>HTTP</td><td>GET</td><td>/events/{id}</td><td>events</td><td>Fetch an event by the key.</td></tr></tbody></table><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h3><h4 id="_1-publish-a-record" tabindex="-1"><a class="header-anchor" href="#_1-publish-a-record"><span>1. Publish a Record</span></a></h4><p>To publish a valid record to the <code>events</code> topic, use the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> POST</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://localhost:8080/events</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Idempotency-Key: 1&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{&quot;id&quot;: &quot;101&quot;, &quot;message&quot;: &quot;Hello, World&quot;}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-output-1" tabindex="-1"><a class="header-anchor" href="#example-output-1"><span>Example Output:</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&gt; POST /events HTTP/1.1</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>&gt; Content-Type: application/json</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&lt; HTTP/1.1 204 No Content</span></span>
<span class="line"><span>&lt; Access-Control-Allow-Origin: *</span></span>
<span class="line"><span>&lt;</span></span>
<span class="line"><span>* Connection #0 to host localhost left intact</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-fetch-a-record" tabindex="-1"><a class="header-anchor" href="#_2-fetch-a-record"><span>2. Fetch a Record</span></a></h4><p>To fetch a record by its key:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://localhost:8080/events/1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="example-output-2" tabindex="-1"><a class="header-anchor" href="#example-output-2"><span>Example Output:</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&gt; GET /events/1 HTTP/1.1</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>&lt; HTTP/1.1 200 OK</span></span>
<span class="line"><span>&lt; Content-Length: 33</span></span>
<span class="line"><span>&lt; Content-Type: application/json</span></span>
<span class="line"><span>&lt; Etag: AQIAAg==</span></span>
<span class="line"><span>&lt; Access-Control-Allow-Origin: *</span></span>
<span class="line"><span>&lt; Access-Control-Expose-Headers: *</span></span>
<span class="line"><span>&lt;</span></span>
<span class="line"><span>* Connection #0 to host localhost left intact</span></span>
<span class="line"><span>{&quot;id&quot;: &quot;101&quot;, &quot;message&quot;: &quot;Hello, World&quot;}%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-5-stop-zillabase" tabindex="-1"><a class="header-anchor" href="#step-5-stop-zillabase"><span>Step 5: Stop Zillabase</span></a></h2><p>To stop the Zillabase, use the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zillabase</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,36)]))}const h=e(n,[["render",l],["__file","quickstart.html.vue"]]),o=JSON.parse('{"path":"/getting-started/quickstart.html","title":"Quickstart","lang":"en-US","frontmatter":{"description":"Quickstart This guide provides a step-by-step approach to getting started with Zillabase. It automatically generates both HTTP AsyncAPI 3.x and Kafka AsyncAPI 3.x specifications...","head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zillabase-docs/next/getting-started/quickstart.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Quickstart"}],["meta",{"property":"og:description","content":"Quickstart This guide provides a step-by-step approach to getting started with Zillabase. It automatically generates both HTTP AsyncAPI 3.x and Kafka AsyncAPI 3.x specifications..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-02T09:55:43.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-02T09:55:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quickstart\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-02T09:55:43.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Step 1: Install Zillabase","slug":"step-1-install-zillabase","link":"#step-1-install-zillabase","children":[]},{"level":2,"title":"Step 2: Clone the Example Repository","slug":"step-2-clone-the-example-repository","link":"#step-2-clone-the-example-repository","children":[]},{"level":2,"title":"Step 3: Start Zillabase","slug":"step-3-start-zillabase","link":"#step-3-start-zillabase","children":[{"level":3,"title":"Example Output:","slug":"example-output","link":"#example-output","children":[]}]},{"level":2,"title":"Step 4: Use Generated API Endpoints","slug":"step-4-use-generated-api-endpoints","link":"#step-4-use-generated-api-endpoints","children":[{"level":3,"title":"Available Endpoints","slug":"available-endpoints","link":"#available-endpoints","children":[]},{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}]},{"level":2,"title":"Step 5: Stop Zillabase","slug":"step-5-stop-zillabase","link":"#step-5-stop-zillabase","children":[]}],"git":{"createdTime":1732866505000,"updatedTime":1735811743000,"contributors":[{"name":"cahyosubroto","email":"cahyosubroto30@gmail.com","commits":6}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"getting-started/quickstart.md","localizedDate":"November 29, 2024","autoDesc":true,"excerpt":"\\n<p>This guide provides a step-by-step approach to getting started with Zillabase. It automatically generates both HTTP AsyncAPI 3.x and Kafka AsyncAPI 3.x specifications based on Kafka Cluster metadata.</p>\\n<h2>Prerequisites</h2>\\n<p>Ensure you have the following tools installed on your system:</p>\\n"}');export{h as comp,o as data};
