import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as e,b as s,d as t,f as o,e as l,r as h,o as g}from"./app-DQ2AyMtK.js";const y={},v={class:"zilla-plus-badge hint-container info"},f={href:"https://www.aklivity.io/products/zilla-plus",target:"_blank",rel:"noopener noreferrer"},m={class:"hint-container tip"},b={id:"create-the-proxy-security-group",tabindex:"-1"},D={class:"header-anchor",href:"#create-the-proxy-security-group"},C={id:"create-the-proxy-iam-security-role",tabindex:"-1"},w={class:"header-anchor",href:"#create-the-proxy-iam-security-role"},A={class:"hint-container info"},E={id:"verify-proxy-service",tabindex:"-1"},F={class:"header-anchor",href:"#verify-proxy-service"},S={class:"hint-container tip"},x={class:"hint-container tip"},P={class:"hint-container info"},z={class:"hint-container-title"},N={class:"hint-container info"},T={class:"hint-container-title"};function R(I,i){const a=h("ZillaPlus"),d=h("RouteLink"),p=h("CodeTabs"),u=h("Tabs");return g(),k("div",null,[i[136]||(i[136]=e("h1",{id:"confluent-cloud-secure-public-access-proxy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#confluent-cloud-secure-public-access-proxy"},[e("span",null,"Confluent Cloud Secure Public Access Proxy")])],-1)),e("p",v,[e("a",f,[i[0]||(i[0]=s("Available in ")),t(a)])]),i[137]||(i[137]=o('<div class="hint-container info"><p class="hint-container-title">Estimated time to complete 20-30 minutes.</p></div><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The <a href="https://aws.amazon.com/marketplace/pp/prodview-eblxkinsqbaks" target="_blank" rel="noopener noreferrer">Zilla Plus for Confluent Cloud</a> Secure Public Access proxy lets authorized Kafka clients connect, publish messages and subscribe to topics in your Confluent Cloud cluster via the internet.</p><p>In this guide we will deploy the Zilla Plus for Confluent Cloud Secure Public Access proxy and showcase globally trusted public internet connectivity to a Confluent Cloud cluster from a Kafka client, using the custom wildcard domain <code>*.example.aklivity.io</code>.</p><h3 id="aws-services-used" tabindex="-1"><a class="header-anchor" href="#aws-services-used"><span>AWS services used</span></a></h3><table><thead><tr><th>Service</th><th>Required</th><th>Usage</th><th>Quota</th></tr></thead><tbody><tr><td>Secrets Manager</td><td>Yes</td><td>Startup only</td><td><a href="https://docs.aws.amazon.com/general/latest/gr/asm.html#limits_secrets-manager" target="_blank" rel="noopener noreferrer">Not reached</a></td></tr><tr><td>Certificate Manager</td><td>No<br><br>Private key and certificate can be inline in Secrets Manager instead</td><td>Startup only</td><td><a href="https://docs.aws.amazon.com/general/latest/gr/acm.html#limits_acm" target="_blank" rel="noopener noreferrer">Not reached</a></td></tr><tr><td>Private Certificate Manager</td><td>No<br><br>Private key and certificate can be inline in Secrets Manager instead</td><td>Startup only</td><td><a href="https://docs.aws.amazon.com/general/latest/gr/acm-pca.html#limits_acm-pca" target="_blank" rel="noopener noreferrer">Not reached</a></td></tr></tbody></table><p>Default <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html" target="_blank" rel="noopener noreferrer">AWS Service Quotas</a> are recommended.</p><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><p>Before setting up internet access to your Confluent Cloud Cluster, you will need the following:</p>',9)),e("ul",null,[i[5]||(i[5]=e("li",null,"an Confluent Cloud Cluster configured for SASL/SCRAM authentication",-1)),i[6]||(i[6]=e("li",null,"subscription to Zilla Plus for Confluent Cloud via AWS Marketplace",-1)),e("li",null,[i[1]||(i[1]=s("an VPC security group for the ")),t(a),i[2]||(i[2]=s(" proxies"))]),e("li",null,[i[3]||(i[3]=s("an IAM security role for the ")),t(a),i[4]||(i[4]=s(" proxies"))]),i[7]||(i[7]=e("li",null,"permission to modify global DNS records for a custom domain",-1))]),e("div",m,[i[11]||(i[11]=e("p",{class:"hint-container-title"},"Tips",-1)),e("p",null,[i[9]||(i[9]=s("Check out the ")),t(d,{to:"/solutions/how-tos/aws-services/troubleshooting.html"},{default:l(()=>i[8]||(i[8]=[s("Troubleshooting")])),_:1}),i[10]||(i[10]=s(" guide if you run into any issues."))])]),i[138]||(i[138]=o('<h3 id="create-the-confluent-cloud-cluster-in-aws-with-privatelink" tabindex="-1"><a class="header-anchor" href="#create-the-confluent-cloud-cluster-in-aws-with-privatelink"><span>Create the Confluent Cloud Cluster in AWS with PrivateLink</span></a></h3><blockquote><p>This creates your Confluent Cloud cluster with AWS PrivateLink in preparation for secure access via the internet.</p></blockquote><p>An Confluent Cloud cluster deployed in AWS is needed for secure remote access via the internet. The <a href="https://docs.confluent.io/cloud/current/get-started/index.html" target="_blank" rel="noopener noreferrer">Confluent Cloud Quickstart</a> will walk you through creating one. You can skip this step if you have already created an Confluent Cloud cluster with equivalent configuration. We will use the below resource names to reference the AWS resources needed in this guide.</p><ul><li>Cluster Name: <code>my-cc-cluster</code></li><li>Cluster Type: <code>Enterprise</code></li></ul><p>Your Confluent Cloud Enterprise cluster will need a network connection. You will need to create a new <a href="https://docs.confluent.io/cloud/current/networking/aws-platt.html" target="_blank" rel="noopener noreferrer">PrivateLink Attachment</a> in network management tab. You will start configuring a new network connection to get a <code>PrivateLink Service Id</code></p><ul><li>Name: <code>zilla_plus_secure_public_access</code></li><li>Add Connection <ul><li>Name: <code>zilla_plus_privatelink_service</code></li><li>Save the <code>PrivateLink Service Id</code></li></ul></li></ul><p>Confluent Cloud Enterprise needs an AWS PrivateLink connection, for this we will <a href="https://docs.aws.amazon.com/vpc/latest/userguide/create-vpc.html#create-vpc-and-other-resources" target="_blank" rel="noopener noreferrer">Create a VPC plus other VPC resources</a> with the below resource names.</p><ul><li>Name tag auto-generation: <code>my-cce-privatelink</code></li><li>VPC endpoints: <code>none</code></li><li>Create the VPC</li></ul><p>Now you will need to <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html" target="_blank" rel="noopener noreferrer">Setup AWS PrivateLink</a> with the below resource names.</p><ul><li>Endpoint Name: <code>my-cce-privatelink-vpce</code></li><li>Service Name: the <code>PrivateLink Service Id</code> value you saved earlier</li><li>VPC: <code>my-cce-privatelink-vpc</code></li><li>Subnets: Select <code>public</code> subnets for each availability zone</li><li>Create the Endpoint</li></ul><p>Finish the <code>zilla_plus_privatelink_service</code> connection wizard with the <code>PrivateLink Endpoint ID</code> found in your <code>my-cce-privatelink-vpce</code> from the <a href="https://console.aws.amazon.com/vpcconsole/home#Endpoints:" target="_blank" rel="noopener noreferrer">Endpoints table</a>.</p><h3 id="create-the-route53-hosted-zone" tabindex="-1"><a class="header-anchor" href="#create-the-route53-hosted-zone"><span>Create the Route53 Hosted zone</span></a></h3>',12)),e("blockquote",null,[e("p",null,[i[12]||(i[12]=s("This creates a Route53 Hosted zone to for a generic DNS record can point to the Confluent Cloud with AWS PrivateLink used by the ")),t(a),i[13]||(i[13]=s(" proxy."))])]),i[139]||(i[139]=o('<p>Follow the <a href="https://console.aws.amazon.com/route53/v2/hostedzones#CreateHostedZone" target="_blank" rel="noopener noreferrer">Create Hosted Zone</a> wizard with the following parameters and defaults.</p><ul><li>Domain name: <code>&lt;Region&gt;.aws.private.confluent.cloud</code></li><li>Type: <code>Private</code></li><li>Region: <code>&lt;CC Cluster Region&gt;</code></li><li>VPC: <code>my-cce-privatelink-vpc</code></li><li>Create the hosted zone</li></ul><p>You will need to add an A Record for the wildcard to your <code>zilla_plus_privatelink_service</code> <code>my-cce-privatelink-vpce</code> VPC Endpoint has a DNS.</p><ul><li>Record Name: <code>*</code></li><li>Record Type: <code>A</code></li><li>Alias: <code>True</code></li><li>Route Traffic: <code>Alias to VPC Endpoint</code><ul><li>Region: <code>&lt;CC Cluster Region&gt;</code></li><li>Select the <code>*.vpce-svc-*</code> DNS address</li></ul></li><li>Routing policy: <code>Simple Routing</code></li><li>Evaluate Target Heath: <code>Yes</code></li><li>Create the record</li></ul>',4)),e("h3",b,[e("a",D,[e("span",null,[i[14]||(i[14]=s("Create the ")),t(a),i[15]||(i[15]=s(" proxy security group"))])])]),e("blockquote",null,[e("p",null,[i[16]||(i[16]=s("This creates your ")),t(a),i[17]||(i[17]=s(" proxy security group to allow Kafka clients and SSH access."))])]),e("p",null,[i[18]||(i[18]=s("A VPC security group is needed for the ")),t(a),i[19]||(i[19]=s(" proxies when they are launched."))]),e("p",null,[i[20]||(i[20]=s("Follow the ")),i[21]||(i[21]=e("a",{href:"https://console.aws.amazon.com/vpcconsole/home#CreateSecurityGroup:",target:"_blank",rel:"noopener noreferrer"},"Create Security Group",-1)),i[22]||(i[22]=s(" wizard with the following parameters and defaults. This creates your ")),t(a),i[23]||(i[23]=s(" proxy security group to allow Kafka clients and SSH access."))]),i[140]||(i[140]=o('<div class="hint-container note"><p class="hint-container-title">Check your selected region</p><p>Make sure you have selected the desired region, ex: <code>US East (N. Virginia) us-east-1</code>.</p></div><ul><li>Name: <code>my-zilla-proxy-sg</code></li><li>VPC: <code>my-cce-privatelink-vpc</code></li><li>Description: <code>Kafka clients and SSH access</code></li><li>Add Inbound Rule <ul><li>Type: <code>CUSTOM TCP</code></li><li>Port Range: <code>9092</code></li><li>Source type: <code>Anywhere-IPv4</code></li></ul></li><li>Add Inbound Rule <ul><li>Type: <code>SSH</code></li><li>Source type: <code>My IP</code></li></ul></li><li>Add Outbound Rule (if not exists) <ul><li>Type: <code>All traffic</code></li><li>Destination: <code>Anywhere-IPv4</code></li></ul></li><li>Create the Security Group</li></ul><div class="hint-container warning"><p class="hint-container-title">Check your network settings</p><p>Your IP may be different when you SSH into the EC2 instance. VPNs and other networking infrastructure may cause the <code>My IP</code> inbound rule to fail. Instead, you can use one of the other ways AWS provides to execute commands in an EC2 instance.</p></div><p>Navigate to the VPC Management Console <a href="https://console.aws.amazon.com/vpc/home#securityGroups:" target="_blank" rel="noopener noreferrer">Security Groups</a> table. Select the <code>my-zilla-proxy-sg</code> security group you just created. You will create an inbound rule to allow all traffic inside itself.</p><ul><li>Add Inbound Rule <ul><li>Type: <code>All Traffic</code></li><li>Source type: <code>Custom</code></li><li>Source: <code>my-zilla-proxy-sg</code></li></ul></li></ul><p>Add the <code>my-zilla-proxy-sg</code> security group to your VPC Endpoint by finding your <code>my-cce-privatelink-vpce</code> from the <a href="https://console.aws.amazon.com/vpcconsole/home#Endpoints:" target="_blank" rel="noopener noreferrer">Endpoints table</a>.</p><ul><li>Select your VPC endpoint</li><li><code>Actions</code> menu &gt; select <code>Manage Security Groups</code></li><li>Select both security groups: <ul><li><code>default</code></li><li><code>my-zilla-proxy-sg</code></li></ul></li><li>Save the changes</li></ul>',7)),e("h3",C,[e("a",w,[e("span",null,[i[24]||(i[24]=s("Create the ")),t(a),i[25]||(i[25]=s(" proxy IAM security role"))])])]),e("blockquote",null,[e("p",null,[i[26]||(i[26]=s("This creates an IAM security role to enable the required AWS services for the ")),t(a),i[27]||(i[27]=s(" proxies."))])]),e("p",null,[i[29]||(i[29]=s("Follow the ")),t(d,{to:"/solutions/how-tos/aws-services/create-iam-role.html"},{default:l(()=>i[28]||(i[28]=[s("Create IAM Role")])),_:1}),i[30]||(i[30]=s(" guide to create an IAM security role with the following parameters:"))]),t(p,{id:"493",data:[{id:"Name"},{id:"Policies"}]},{title0:l(({value:n,isActive:r})=>i[31]||(i[31]=[s("Name")])),title1:l(({value:n,isActive:r})=>i[32]||(i[32]=[s("Policies")])),tab0:l(({value:n,isActive:r})=>i[33]||(i[33]=[e("div",{class:"language-text","data-highlighter":"shiki","data-ext":"text","data-title":"text",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"aklivity-zilla-proxy")])])])],-1)])),tab1:l(({value:n,isActive:r})=>i[34]||(i[34]=[e("div",{class:"language-text","data-highlighter":"shiki","data-ext":"text","data-title":"text",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"AWSCertificateManagerReadOnly")]),s(`
`),e("span",{class:"line"},[e("span",null,"AmazonSSMManagedInstanceCore")])])])],-1)])),_:1}),i[141]||(i[141]=e("h4",{id:"iam-role-inline-policies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iam-role-inline-policies"},[e("span",null,"IAM role Inline Policies")])],-1)),e("p",null,[i[35]||(i[35]=s("This creates an IAM security role to enable the required AWS services for the ")),t(a),i[36]||(i[36]=s(" proxies."))]),t(p,{id:"507",data:[{id:"Name"},{id:"JSON Summary"}]},{title0:l(({value:n,isActive:r})=>i[37]||(i[37]=[s("Name")])),title1:l(({value:n,isActive:r})=>i[38]||(i[38]=[s("JSON Summary")])),tab0:l(({value:n,isActive:r})=>i[39]||(i[39]=[e("div",{class:"language-text","data-highlighter":"shiki","data-ext":"text","data-title":"text",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"CCProxySecretsManagerRead")])])])],-1)])),tab1:l(({value:n,isActive:r})=>i[40]||(i[40]=[e("div",{class:"language-json","data-highlighter":"shiki","data-ext":"json","data-title":"json",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"{")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#0451A5","--shiki-dark":"#9CDCFE"}},'  "Version"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'"2012-10-17"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},",")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#0451A5","--shiki-dark":"#9CDCFE"}},'  "Statement"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": [")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"    {")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#0451A5","--shiki-dark":"#9CDCFE"}},'      "Sid"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'"VisualEditor0"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},",")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#0451A5","--shiki-dark":"#9CDCFE"}},'      "Effect"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'"Allow"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},",")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#0451A5","--shiki-dark":"#9CDCFE"}},'      "Action"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": [")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'        "secretsmanager:GetSecretValue"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},",")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'        "secretsmanager:DescribeSecret"')]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"      ],")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#0451A5","--shiki-dark":"#9CDCFE"}},'      "Resource"'),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": [")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'        "arn:aws:secretsmanager:*:*:secret:wildcard.example.aklivity.io-*"')]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"      ]")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"    }")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"  ]")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"}")])])])],-1)])),_:1}),i[142]||(i[142]=o('<div class="hint-container info"><p class="hint-container-title">If you used a different secret name for your certificate key.</p><p>Replace <code>wildcard.example.aklivity.io</code> in the resource regular expression for:</p><div class="language-text" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>CCProxySecretsManagerRead</span></span></code></pre></div></div><h2 id="subscribe-via-aws-marketplace" tabindex="-1"><a class="header-anchor" href="#subscribe-via-aws-marketplace"><span>Subscribe via AWS Marketplace</span></a></h2><p>The <a href="https://aws.amazon.com/marketplace/pp/prodview-eblxkinsqbaks" target="_blank" rel="noopener noreferrer">Zilla Plus for Confluent Cloud</a> is available through the AWS Marketplace. You can skip this step if you have already subscribed to Zilla Plus for Confluent Cloud via AWS Marketplace.</p><p>To get started, visit the Proxy&#39;s Marketplace <a href="https://aws.amazon.com/marketplace/pp/prodview-eblxkinsqbaks" target="_blank" rel="noopener noreferrer">Product Page</a> and <code>Subscribe</code> to the offering. You should now see <code>Zilla Plus for Confluent Cloud</code> listed in your <a href="https://console.aws.amazon.com/marketplace" target="_blank" rel="noopener noreferrer">AWS Marketplace</a> subscriptions.</p><h2 id="create-the-server-certificate" tabindex="-1"><a class="header-anchor" href="#create-the-server-certificate"><span>Create the Server Certificate</span></a></h2><p>We need a TLS Server Certificate for your custom DNS wildcard domain that can be trusted by a Kafka Client from anywhere.</p>',6)),e("p",null,[i[42]||(i[42]=s("Follow the ")),t(d,{to:"/solutions/how-tos/aws-services/create-server-certificate-letsencrypt.html"},{default:l(()=>i[41]||(i[41]=[s("Create Server Certificate (LetsEncrypt)")])),_:1}),i[43]||(i[43]=s(" guide to create a new TLS Server Certificate. Use your own custom wildcard DNS domain in place of the example wildcard domain ")),i[44]||(i[44]=e("code",null,"*.example.aklivity.io",-1)),i[45]||(i[45]=s("."))]),i[143]||(i[143]=o('<div class="hint-container info"><p class="hint-container-title">Info</p><p>Note the server certificate secret ARN as we will need to reference it from the Secure Public Access CloudFormation template. Make sure you have selected the desired region, ex: <code>US East (N. Virginia) us-east-1</code>.</p></div><h2 id="deploy-the-zilla-plus-secure-public-access-proxy" tabindex="-1"><a class="header-anchor" href="#deploy-the-zilla-plus-secure-public-access-proxy"><span>Deploy the Zilla Plus Secure Public Access Proxy</span></a></h2><blockquote><p>This initiates deployment of the Zilla Plus for Confluent Cloud stack via CloudFormation.</p></blockquote><p>Navigate to your <a href="https://console.aws.amazon.com/marketplace" target="_blank" rel="noopener noreferrer">AWS Marketplace</a> subscriptions and select <code>Zilla Plus for Confluent Cloud</code> to show the manage subscription page.</p><ul><li>From the <code>Agreement</code> section &gt; <code>Actions</code> menu &gt; select <code>Launch CloudFormation stack</code></li><li>Select the <code>CloudFormation Template</code> &gt; <code>Secure Public Access</code> fulfillment option</li><li>Make sure you have selected the desired region selected, such as <code>us-east-1</code></li><li>Click <code>Continue to Launch</code><ul><li>Choose the action <code>Launch CloudFormation</code></li></ul></li></ul><p>Click <code>Launch</code> to complete the <code>Create stack</code> wizard with the following details:</p><h3 id="step-1-create-stack" tabindex="-1"><a class="header-anchor" href="#step-1-create-stack"><span>Step 1. Create Stack</span></a></h3><ul><li>Prepare template: <code>Template is ready</code></li><li>Specify template: <code>Amazon S3 URL</code><ul><li>Amazon S3 URL: <code>(auto-filled)</code></li></ul></li></ul><h3 id="step-2-specify-stack-details" tabindex="-1"><a class="header-anchor" href="#step-2-specify-stack-details"><span>Step 2. Specify stack details</span></a></h3>',9)),t(p,{id:"612",data:[{id:"Stack name"}]},{title0:l(({value:n,isActive:r})=>i[46]||(i[46]=[s("Stack name")])),tab0:l(({value:n,isActive:r})=>i[47]||(i[47]=[e("div",{class:"language-text","data-highlighter":"shiki","data-ext":"text","data-title":"text",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"my-zilla-proxy")])])])],-1)])),_:1}),i[144]||(i[144]=e("p",null,"Parameters:",-1)),e("ul",null,[i[60]||(i[60]=o("<li>Network Configuration <ul><li>VPC: <code>my-cce-privatelink-vpc</code></li><li>Subnets: <code>my-cce-privatelink-subnet-public-1a</code> <code>my-cce-privatelink-subnet-public-1b</code></li></ul></li><li>Confluent Cloud Configuration <ul><li>Bootstrap server: <code>&lt;Cluster ID&gt;.&lt;Region&gt;.aws.private.confluent.cloud:9092</code> *1</li></ul></li><li>Zilla Plus Configuration <ul><li>Instance count: <code>2</code></li><li>Instance type: <code>t3.small</code> *2</li><li>Role: <code>aklivity-zilla-proxy</code></li><li>Security Groups: <code>my-zilla-proxy-sg</code></li><li>Secrets Manager Secret ARN: <code>&lt;TLS certificate private key secret ARN&gt;</code> *3</li><li>Public Wildcard DNS: <code>*.example.aklivity.io</code> *4</li><li>Public Port: <code>9092</code></li><li>Key pair for SSH access: <code>my-key-pair</code> *5</li></ul></li>",3)),e("li",null,[i[59]||(i[59]=s("*Configuration Reference ")),e("ol",null,[i[56]||(i[56]=e("li",null,[s("Follow the steps in the "),e("a",{href:"https://docs.confluent.io/cloud/current/networking/testing.html#test-connectivity-to-ccloud",target:"_blank",rel:"noopener noreferrer"},"Test Connectivity to Confluent Cloud"),s(" docs to get your clusters Bootstrap server URL.")],-1)),i[57]||(i[57]=e("li",null,"Consider the network throughput characteristics of the AWS instance type as that will impact the upper bound on network performance.",-1)),e("li",null,[i[49]||(i[49]=s("This is the ARN of the created secret for the signed certificate's private key that was returned in the last step of the ")),t(d,{to:"/solutions/how-tos/aws-services/create-server-certificate-letsencrypt.html"},{default:l(()=>i[48]||(i[48]=[s("Create Server Certificate (LetsEncrypt)")])),_:1}),i[50]||(i[50]=s(" guide. Make sure you have selected the desired region, ex: ")),i[51]||(i[51]=e("code",null,"US East (N. Virginia) us-east-1",-1)),i[52]||(i[52]=s("."))]),i[58]||(i[58]=e("li",null,"Replace with your own custom wildcard DNS pattern.",-1)),e("li",null,[i[54]||(i[54]=s("Follow the ")),t(d,{to:"/solutions/how-tos/aws-services/create-key-pair.html"},{default:l(()=>i[53]||(i[53]=[s("Create Key Pair")])),_:1}),i[55]||(i[55]=s(" guide to create a new key pair to access EC2 instances via SSH."))])])])]),i[145]||(i[145]=e("h3",{id:"step-3-configure-stack-options-use-defaults",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#step-3-configure-stack-options-use-defaults"},[e("span",null,[s("Step 3. Configure stack options: "),e("code",null,"(use defaults)")])])],-1)),i[146]||(i[146]=e("h3",{id:"step-4-review",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#step-4-review"},[e("span",null,"Step 4. Review")])],-1)),i[147]||(i[147]=e("p",null,[s("Confirm the stack details are correct and "),e("code",null,"Submit"),s(" to start the CloudFormation deploy.")],-1)),e("div",A,[i[67]||(i[67]=e("p",{class:"hint-container-title"},"Info",-1)),e("p",null,[i[61]||(i[61]=s("When your ")),t(a),i[62]||(i[62]=s(" proxy is ready, the ")),i[63]||(i[63]=e("a",{href:"https://console.aws.amazon.com/cloudformation",target:"_blank",rel:"noopener noreferrer"},"CloudFormation console",-1)),i[64]||(i[64]=s(" will show ")),i[65]||(i[65]=e("code",null,"CREATE_COMPLETE",-1)),i[66]||(i[66]=s(" for the newly created stack."))])]),e("h2",E,[e("a",F,[e("span",null,[i[68]||(i[68]=s("Verify ")),t(a),i[69]||(i[69]=s(" proxy Service"))])])]),i[148]||(i[148]=e("blockquote",null,[e("p",null,"This checks that the services and networking were properly configured.")],-1)),i[149]||(i[149]=e("p",null,[s("Navigate to the "),e("a",{href:"https://console.aws.amazon.com/ec2/home#Instances:instanceState=running",target:"_blank",rel:"noopener noreferrer"},"EC2 running instances dashboard.")],-1)),i[150]||(i[150]=e("div",{class:"hint-container note"},[e("p",{class:"hint-container-title"},"Check your selected region"),e("p",null,[s("Make sure you have selected the desired region, ex: "),e("code",null,"US East (N. Virginia) us-east-1"),s(".")])],-1)),e("p",null,[i[70]||(i[70]=s("Select either of the ")),t(a),i[71]||(i[71]=s(" proxies launched by the CloudFormation template to show the details."))]),i[151]||(i[151]=o('<div class="hint-container info"><p class="hint-container-title">Info</p><p>They each have an IAM Role name starting with <code>aklivity-zilla-proxy</code>.</p></div><p>Find the <code>Public IPv4 Address</code> and then SSH into the instance.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">ssh</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -i</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> ~/.ssh/</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">key-pair.ce</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">r&gt; </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">ec2-user@</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">instance-public-ip-addres</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">s&gt;</span></span></code></pre></div><p>After logging in via SSH, check the status of the <code>zilla-plus</code> system service.</p>',4)),t(u,{id:"775",data:[{id:"Service is running"},{id:"Check Ports"},{id:"Check Zilla Logs"},{id:"Check Cloud Init Logs"}]},{title0:l(({value:n,isActive:r})=>i[72]||(i[72]=[s("Service is running")])),title1:l(({value:n,isActive:r})=>i[73]||(i[73]=[s("Check Ports")])),title2:l(({value:n,isActive:r})=>i[74]||(i[74]=[s("Check Zilla Logs")])),title3:l(({value:n,isActive:r})=>i[75]||(i[75]=[s("Check Cloud Init Logs")])),tab0:l(({value:n,isActive:r})=>i[76]||(i[76]=[e("p",null,[s("Verify that the "),e("code",null,"zilla-plus"),s(" service is active and logging output similar to that shown below.")],-1),e("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"systemctl"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," status"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," zilla-plus.service")])])])],-1),e("div",{class:"language-output","data-highlighter":"shiki","data-ext":"output","data-title":"output",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"zilla-plus.service - Zilla Plus")]),s(`
`),e("span",{class:"line"},[e("span",null,"   Loaded: loaded (/etc/systemd/system/zilla-plus.service; enabled; vendor preset: disabled)")]),s(`
`),e("span",{class:"line"},[e("span",null,"   Active: active (running) since...")])])])],-1)])),tab1:l(({value:n,isActive:r})=>i[77]||(i[77]=[e("p",null,[s("Check for the active ports with "),e("code",null,"netstat"),s(".")],-1),e("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"netstat"),e("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#569CD6"}}," -ntlp")])])])],-1),e("div",{class:"language-output","data-highlighter":"shiki","data-ext":"output","data-title":"output",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"tcp6    0    0 :::9092    :::*    LISTEN    1726/.zpm/image/bin")])])])],-1)])),tab2:l(({value:n,isActive:r})=>i[78]||(i[78]=[e("p",null,[s("You can get an stdout dump of the "),e("code",null,"zilla-plus.service"),s(" using "),e("code",null,"journalctl"),s(".")],-1),e("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"journalctl"),e("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#569CD6"}}," -e"),e("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#569CD6"}}," -u"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," zilla-plus.service"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}}," | "),e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"tee"),e("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#569CD6"}}," -a"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," /tmp/zilla.log")])])])],-1),e("div",{class:"language-output","data-highlighter":"shiki","data-ext":"output","data-title":"output",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"systemd[1]: Started zilla-plus.service - Zilla Plus.")]),s(`
`),e("span",{class:"line"},[e("span",null,"...")])])])],-1)])),tab3:l(({value:n,isActive:r})=>i[79]||(i[79]=[e("p",null,[s("All output from cloud-init is captured by default to "),e("code",null,"/var/log/cloud-init-output.log"),s(". There shouldn't be any errors in this log.")],-1),e("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"cat"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," /var/log/cloud-init-output.log")])])])],-1),e("div",{class:"language-output","data-highlighter":"shiki","data-ext":"output","data-title":"output",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"Cloud-init v. 22.2.2 running 'init'...")])])])],-1)])),_:1}),e("p",null,[i[80]||(i[80]=s("Check the networking of the ")),t(a),i[81]||(i[81]=s(" proxy instances to confluent cloud."))]),t(u,{id:"808",data:[{id:"DNS resolving"},{id:"Check Ports"}]},{title0:l(({value:n,isActive:r})=>i[82]||(i[82]=[s("DNS resolving")])),title1:l(({value:n,isActive:r})=>i[83]||(i[83]=[s("Check Ports")])),tab0:l(({value:n,isActive:r})=>i[84]||(i[84]=[e("p",null,"Verify that the instance can resolve the private Route53 DNS address.",-1),e("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"nslookup"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}}," <"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},"Cluster"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," I"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"D>"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},"."),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"<"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},"Regio"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"n>"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},".aws.private.confluent.cloud")])])])],-1),e("div",{class:"language-output","data-highlighter":"shiki","data-ext":"output","data-title":"output",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"Server:		***")]),s(`
`),e("span",{class:"line"},[e("span",null,"Address:	***")]),s(`
`),e("span",{class:"line"},[e("span")]),s(`
`),e("span",{class:"line"},[e("span",null,"Non-authoritative answer:")]),s(`
`),e("span",{class:"line"},[e("span",null,"Name:	<Cluster ID>.<Region>.aws.private.confluent.cloud")]),s(`
`),e("span",{class:"line"},[e("span",null,"Address: ***")])])])],-1)])),tab1:l(({value:n,isActive:r})=>i[85]||(i[85]=[e("p",null,[s("Check the communication over necessary ports with "),e("code",null,"netcat"),s(".")],-1),e("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#795E26","--shiki-dark":"#DCDCAA"}},"nc"),e("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#569CD6"}}," -vz"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}}," <"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},"Cluster"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}}," I"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"D>"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},"."),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"<"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},"Regio"),e("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"n>"),e("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},".aws.private.confluent.cloud"),e("span",{style:{"--shiki-light":"#098658","--shiki-dark":"#B5CEA8"}}," 9092")])])])],-1),e("div",{class:"language-output","data-highlighter":"shiki","data-ext":"output","data-title":"output",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"Connection to <Cluster ID>.<Region>.aws.private.confluent.cloud port 9092 [tcp/italk] succeeded!")])])])],-1)])),_:1}),e("p",null,[i[86]||(i[86]=s("Repeat these steps for each of the other ")),t(a),i[87]||(i[87]=s(" proxies launched by the CloudFormation template if necessary."))]),i[152]||(i[152]=e("h3",{id:"configure-global-dns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configure-global-dns"},[e("span",null,"Configure Global DNS")])],-1)),e("blockquote",null,[e("p",null,[i[88]||(i[88]=s("This ensures that any new Kafka brokers added to the cluster can still be reached via the ")),t(a),i[89]||(i[89]=s(" proxy."))])]),i[153]||(i[153]=o(`<p>When using a wildcard DNS name for your own domain, such as <code>*.example.aklivity.io</code> then the DNS entries are setup in your DNS provider.</p><p>Navigate to the <a href="https://console.aws.amazon.com/cloudformation" target="_blank" rel="noopener noreferrer">CloudFormation console</a>. Then select the <code>my-zilla-proxy</code> stack to show the details.</p><p>In the stack <code>Outputs</code> tab, find the public DNS name of the <code>NetworkLoadBalancer</code>. You need to create a <code>CNAME</code> record mapping your public DNS wildcard pattern to the public DNS name of the Network Load Balancer.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>You might prefer to use an Elastic IP address for each NLB public subnet, providing DNS targets for your <code>CNAME</code> record that can remain stable even after restarting the stack.</p><p>For testing purposes you can edit your local <code>/etc/hosts</code> file instead of updating your DNS provider.</p></div><h2 id="verify-kafka-client-connectivity" tabindex="-1"><a class="header-anchor" href="#verify-kafka-client-connectivity"><span>Verify Kafka Client Connectivity</span></a></h2><p>To verify that we have successfully enabled public internet connectivity to our Kafka cluster from the local development environment, we will use a generic Kafka client to create a topic, publish messages and then subscribe to receive these messages from our Kafka cluster via the public internet.</p><h3 id="install-the-kafka-client" tabindex="-1"><a class="header-anchor" href="#install-the-kafka-client"><span>Install the Kafka Client</span></a></h3><p>First, we must install a Java runtime that can be used by the Kafka client.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">sudo</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> yum</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> java-1.8.0</span></span></code></pre></div><p>Now we are ready to install the Kafka client:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">wget</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> https://archive.apache.org/dist/kafka/2.8.0/kafka_2.13-2.8.0.tgz</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">tar</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -xzf</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> kafka_2.13-2.8.0.tgz</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">cd</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> kafka_2.13-2.8.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)),e("div",S,[i[98]||(i[98]=e("p",{class:"hint-container-title"},"Tips",-1)),e("p",null,[i[90]||(i[90]=s("We use a generic Kafka client here, however the setup for any Kafka client, including ")),i[91]||(i[91]=e("a",{href:"https://www.xeotek.com/apache-kafka-monitoring-management/",target:"_blank",rel:"noopener noreferrer"},"KaDeck",-1)),i[92]||(i[92]=s(", ")),i[93]||(i[93]=e("a",{href:"https://www.conduktor.io/download/",target:"_blank",rel:"noopener noreferrer"},"Conduktor",-1)),i[94]||(i[94]=s(", and ")),i[95]||(i[95]=e("a",{href:"https://akhq.io/",target:"_blank",rel:"noopener noreferrer"},"akhq.io",-1)),i[96]||(i[96]=s(" will be largely similar. With the ")),t(a),i[97]||(i[97]=s(" proxy you can use these GUI Kafka clients to configure and monitor your Kafka applications, clusters and streams."))])]),i[154]||(i[154]=e("h3",{id:"configure-the-kafka-client",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configure-the-kafka-client"},[e("span",null,"Configure the Kafka Client")])],-1)),e("p",null,[i[99]||(i[99]=s("With the Kaka client now installed we are ready to configure it and point it at the ")),t(a),i[100]||(i[100]=s(" proxy."))]),e("p",null,[i[101]||(i[101]=s("The ")),t(a),i[102]||(i[102]=s(" proxy relies on encrypted SASL/SCRAM so we need to create a file called ")),i[103]||(i[103]=e("code",null,"confluent.properties",-1)),i[104]||(i[104]=s(" that tells the Kafka client to use ")),i[105]||(i[105]=e("code",null,"SASL_SSL",-1)),i[106]||(i[106]=s(" as the security protocol with SCRAM-SHA-512 encryption."))]),i[155]||(i[155]=e("p",null,[s("Notice we used the username and password, you will need to replace those with your own API Keys credentials. Follow the "),e("a",{href:"https://docs.confluent.io/cloud/current/access-management/authenticate/api-keys/api-keys.html",target:"_blank",rel:"noopener noreferrer"},"Use API Keys to Control Access in Confluent Cloud"),s(" to associate your API key and secret for your cluster to the "),e("code",null,"SASL_SSL"),s(" username and password.")],-1)),t(p,{id:"890",data:[{id:"confluent.properties"}]},{title0:l(({value:n,isActive:r})=>i[107]||(i[107]=[s("confluent.properties")])),tab0:l(({value:n,isActive:r})=>i[108]||(i[108]=[e("div",{class:"language-text","data-highlighter":"shiki","data-ext":"text","data-title":"text",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",null,"# Required connection configs for Kafka producer, consumer, and admin")]),s(`
`),e("span",{class:"line"},[e("span",null,"bootstrap.servers=kafka.example.aklivity.io:9092")]),s(`
`),e("span",{class:"line"},[e("span",null,"#bootstrap.servers=lkc-0d9ox2.us-east-1.aws.private.confluent.cloud:9092")]),s(`
`),e("span",{class:"line"},[e("span",null,"security.protocol=SASL_SSL")]),s(`
`),e("span",{class:"line"},[e("span",null,"sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='<cluser-api-key>' password='<cluser-api-secret>';")]),s(`
`),e("span",{class:"line"},[e("span",null,"sasl.mechanism=PLAIN")]),s(`
`),e("span",{class:"line"},[e("span",null,"# Required for correctness in Apache Kafka clients prior to 2.6")]),s(`
`),e("span",{class:"line"},[e("span",null,"client.dns.lookup=use_all_dns_ips")])])])],-1)])),_:1}),i[156]||(i[156]=o('<div class="hint-container tip"><p class="hint-container-title">Tips</p><p>As the TLS certificate is signed by a globally trusted certificate authority, there is no need to configure your Kafka client to override the trusted certificate authorities.</p></div><h3 id="test-the-kafka-client" tabindex="-1"><a class="header-anchor" href="#test-the-kafka-client"><span>Test the Kafka Client</span></a></h3><blockquote><p>This verifies internet connectivity to your Confluent Cloud cluster via Zilla Plus for Confluent Cloud.</p></blockquote><p>We can now verify that the Kafka client can successfully communicate with your Confluent Cloud cluster via the internet from your local development environment to create a topic, then publish and subscribe to the same topic.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Replace these TLS bootstrap server names accordingly for your own custom wildcard DNS pattern.</p></div><h4 id="create-a-topic" tabindex="-1"><a class="header-anchor" href="#create-a-topic"><span>Create a Topic</span></a></h4>',6)),e("p",null,[i[109]||(i[109]=s("Use the Kafka client to create a topic called ")),i[110]||(i[110]=e("code",null,"zilla-proxy-test",-1)),i[111]||(i[111]=s(", replacing ")),i[112]||(i[112]=e("code",null,"<tls-bootstrap-server-names>",-1)),i[113]||(i[113]=s(" in the command below with the TLS proxy names of your ")),t(a),i[114]||(i[114]=s(" proxy:"))]),i[157]||(i[157]=o(`<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">bin/kafka-topics.sh</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--create </span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;">\\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--topic </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">zilla-plus-test</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--partitions </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">3</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--replication-factor </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">3</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--command-config </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">confluent.properties</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--bootstrap-server &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">tls-bootstrap-server-name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">s&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),e("div",x,[i[123]||(i[123]=e("p",{class:"hint-container-title"},"A quick summary of what just happened",-1)),e("ol",null,[i[119]||(i[119]=e("li",null,"The Kafka client with access to the public internet issued a request to create a new topic",-1)),i[120]||(i[120]=e("li",null,"This request was directed to the internet-facing Network Load Balancer",-1)),e("li",null,[i[115]||(i[115]=s("The Network Load Balancer forwarded the request to the ")),t(a),i[116]||(i[116]=s(" proxy"))]),e("li",null,[i[117]||(i[117]=s("The ")),t(a),i[118]||(i[118]=s(" proxy routed the request to the appropriate Confluent Cloud broker"))]),i[121]||(i[121]=e("li",null,"The topic was created in the Confluent Cloud broker",-1)),i[122]||(i[122]=e("li",null,"Public access was verified",-1))])]),i[158]||(i[158]=o(`<h4 id="publish-messages" tabindex="-1"><a class="header-anchor" href="#publish-messages"><span>Publish messages</span></a></h4><p>Publish two messages to the newly created topic via the following producer command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">bin/kafka-console-producer.sh</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--topic </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">zilla-plus-test</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--producer.config </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">confluent.properties</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--broker-list &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">tls-bootstrap-server-name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">s&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A prompt will appear for you to type in the messages:</p><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>&gt;This is my first event</span></span>
<span class="line"><span>&gt;This is my second event</span></span></code></pre></div><h4 id="receive-messages" tabindex="-1"><a class="header-anchor" href="#receive-messages"><span>Receive messages</span></a></h4><p>Read these messages back via the following consumer command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--topic </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">zilla-plus-test</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--from-beginning </span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;">\\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--consumer.config </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">confluent.properties</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--bootstrap-server &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">tls-bootstrap-server-name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">s&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You should see the <code>This is my first event</code> and <code>This is my second event</code> messages.</p><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>This is my first event</span></span>
<span class="line"><span>This is my second event</span></span></code></pre></div>`,10)),e("div",P,[e("p",z,[i[124]||(i[124]=s("Monitor the ")),t(a),i[125]||(i[125]=s(" proxy"))]),e("p",null,[i[128]||(i[128]=s("Follow the ")),t(d,{to:"/solutions/how-tos/aws-services/manage-cloudformation-stack.html#monitoring"},{default:l(()=>[i[126]||(i[126]=s("Monitoring the ")),t(a),i[127]||(i[127]=s(" proxy"))]),_:1}),i[129]||(i[129]=s(" instructions"))])]),e("div",N,[e("p",T,[i[130]||(i[130]=s("Upgrade the ")),t(a),i[131]||(i[131]=s(" proxy"))]),e("p",null,[i[134]||(i[134]=s("Follow the ")),t(d,{to:"/solutions/how-tos/aws-services/manage-cloudformation-stack.html#upgrading"},{default:l(()=>[i[132]||(i[132]=s("Upgrading the ")),t(a),i[133]||(i[133]=s(" proxy"))]),_:1}),i[135]||(i[135]=s(" instructions"))])])])}const K=c(y,[["render",R],["__file","secure-public-access.html.vue"]]),q=JSON.parse('{"path":"/solutions/how-tos/confluent-cloud/secure-public-access.html","title":"Confluent Cloud Secure Public Access Proxy","lang":"en-US","frontmatter":{"icon":"aky-zilla-plus","description":"Setup a public to your Confluent Cloud private cluster from anywhere on the internet.","gitInclude":["../../_partials/secure-public-access/configure-global-dns.md","../../_partials/secure-public-access/verify-kafka-connect.md"],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/solutions/how-tos/confluent-cloud/secure-public-access.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Confluent Cloud Secure Public Access Proxy"}],["meta",{"property":"og:description","content":"Setup a public to your Confluent Cloud private cluster from anywhere on the internet."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Confluent Cloud Secure Public Access Proxy\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[{"level":3,"title":"AWS services used","slug":"aws-services-used","link":"#aws-services-used","children":[]}]},{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[{"level":3,"title":"Create the Confluent Cloud Cluster in AWS with PrivateLink","slug":"create-the-confluent-cloud-cluster-in-aws-with-privatelink","link":"#create-the-confluent-cloud-cluster-in-aws-with-privatelink","children":[]},{"level":3,"title":"Create the Route53 Hosted zone","slug":"create-the-route53-hosted-zone","link":"#create-the-route53-hosted-zone","children":[]},{"level":3,"title":"Create the  proxy security group","slug":"create-the-proxy-security-group","link":"#create-the-proxy-security-group","children":[]},{"level":3,"title":"Create the  proxy IAM security role","slug":"create-the-proxy-iam-security-role","link":"#create-the-proxy-iam-security-role","children":[{"level":4,"title":"IAM role Inline Policies","slug":"iam-role-inline-policies","link":"#iam-role-inline-policies","children":[]}]}]},{"level":2,"title":"Subscribe via AWS Marketplace","slug":"subscribe-via-aws-marketplace","link":"#subscribe-via-aws-marketplace","children":[]},{"level":2,"title":"Create the Server Certificate","slug":"create-the-server-certificate","link":"#create-the-server-certificate","children":[]},{"level":2,"title":"Deploy the Zilla Plus Secure Public Access Proxy","slug":"deploy-the-zilla-plus-secure-public-access-proxy","link":"#deploy-the-zilla-plus-secure-public-access-proxy","children":[{"level":3,"title":"Step 1. Create Stack","slug":"step-1-create-stack","link":"#step-1-create-stack","children":[]},{"level":3,"title":"Step 2. Specify stack details","slug":"step-2-specify-stack-details","link":"#step-2-specify-stack-details","children":[]},{"level":3,"title":"Step 3. Configure stack options: (use defaults)","slug":"step-3-configure-stack-options-use-defaults","link":"#step-3-configure-stack-options-use-defaults","children":[]},{"level":3,"title":"Step 4. Review","slug":"step-4-review","link":"#step-4-review","children":[]}]},{"level":2,"title":"Verify  proxy Service","slug":"verify-proxy-service","link":"#verify-proxy-service","children":[{"level":3,"title":"Configure Global DNS","slug":"configure-global-dns","link":"#configure-global-dns","children":[]}]},{"level":2,"title":"Verify Kafka Client Connectivity","slug":"verify-kafka-client-connectivity","link":"#verify-kafka-client-connectivity","children":[{"level":3,"title":"Install the Kafka Client","slug":"install-the-kafka-client","link":"#install-the-kafka-client","children":[]},{"level":3,"title":"Configure the Kafka Client","slug":"configure-the-kafka-client","link":"#configure-the-kafka-client","children":[]},{"level":3,"title":"Test the Kafka Client","slug":"test-the-kafka-client","link":"#test-the-kafka-client","children":[{"level":4,"title":"Create a Topic","slug":"create-a-topic","link":"#create-a-topic","children":[]},{"level":4,"title":"Publish messages","slug":"publish-messages","link":"#publish-messages","children":[]},{"level":4,"title":"Receive messages","slug":"receive-messages","link":"#receive-messages","children":[]}]}]}],"readingTime":{"minutes":8.57,"words":2570},"filePathRelative":"solutions/how-tos/confluent-cloud/secure-public-access.md"}');export{K as comp,q as data};
