import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,f as t,a,b as i,d as e,e as l,r as k,o as r}from"./app-BNYstFbe.js";const d={};function g(D,s){const n=k("RouteLink");return r(),p("div",null,[s[43]||(s[43]=t('<h1 id="routeguide-microservice-on-kafka" tabindex="-1"><a class="header-anchor" href="#routeguide-microservice-on-kafka"><span>RouteGuide Microservice on Kafka</span></a></h1><p>This guide will walk through each unique gRPC message request and response design and how Zilla is configured to manage the connection for each.</p><p>Let&#39;s take a look at how Zilla would be configured with a full featured gRPC service. For this, we will use the <a href="https://github.com/grpc/grpc-java/blob/master/examples/src/main/proto/route_guide.proto" target="_blank" rel="noopener noreferrer">route_guide.proto</a> to define the gRPC service and the method request-response types. You can find examples of running this service in any language on the <a href="https://grpc.io/docs/languages/" target="_blank" rel="noopener noreferrer">gRPC docs</a> as well as example clients like this one implemented in <a href="https://grpc.io/docs/languages/java/basics/#client" target="_blank" rel="noopener noreferrer">java</a>.</p><h2 id="step-1-declaring-the-service" tabindex="-1"><a class="header-anchor" href="#step-1-declaring-the-service"><span>Step 1: Declaring the service</span></a></h2>',4)),a("p",null,[s[1]||(s[1]=i("Zilla lets you use your service proto file(s) to specify the service definitions. This will let you create one or many ")),e(n,{to:"/reference/config/bindings/grpc-kafka/"},{default:l(()=>s[0]||(s[0]=[i("grpc-kafka")])),_:1}),s[2]||(s[2]=i(" proxy handlers to be used by the whole service or individual methods."))]),s[44]||(s[44]=t(`<p>Here is the service we will be enhancing with Zilla and Kafka.</p><div class="language-protobuf line-numbers-mode" data-highlighter="shiki" data-ext="protobuf" data-title="protobuf" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">service</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> RouteGuide</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">  // simple RPC</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  rpc</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> GetFeature</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Point</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">returns</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Feature</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">  // server-side streaming RPC</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  rpc</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> ListFeatures</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Rectangle</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">returns</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">stream</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Feature</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">  // client-side streaming RPC</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  rpc</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> RecordRoute</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">stream</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Point</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">returns</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">RouteSummary</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">  // bidirectional streaming RPC</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  rpc</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> RouteChat</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">stream</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> RouteNote</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">returns</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">stream</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> RouteNote</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here is the simplest configuration for declaring the gRPC service. There is a <code>server</code> defining the service and methods which exits to the <code>client</code> which can be routed to the running gRPC instance.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">grpc_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    host_filesystem</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">subject</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">route_guide</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/*</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">grpc_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Define individual route handlers for each method or specify the <code>*</code> wildcard to handle all methods the same.</p><ul><li>All messages handled by the same route</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Routes for individual service methods</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/GetFeature</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-2-handling-message-routing-onto-kafka" tabindex="-1"><a class="header-anchor" href="#step-2-handling-message-routing-onto-kafka"><span>Step 2: Handling message routing onto Kafka</span></a></h2>`,10)),a("p",null,[s[4]||(s[4]=i("This maps the proto service method's request and response messages directly to Kafka topics defined by the ")),s[5]||(s[5]=a("code",null,"topic",-1)),s[6]||(s[6]=i(" and ")),s[7]||(s[7]=a("code",null,"reply-to",-1)),s[8]||(s[8]=i(" attributes respectively. The messages are linked by the ")),s[9]||(s[9]=a("code",null,"zilla:correlation-id",-1)),s[10]||(s[10]=i(" header for individual calls into the gRPC service. Read more about it and how the ")),s[11]||(s[11]=a("code",null,"idempotency-key",-1)),s[12]||(s[12]=i(" enables safe message replays in the ")),e(n,{to:"/reference/config/bindings/grpc-kafka/proxy.html#produce-capability"},{default:l(()=>s[3]||(s[3]=[i("grpc-kafka")])),_:1}),s[13]||(s[13]=i(" reference section."))]),s[45]||(s[45]=t(`<h3 id="message-routing-for-rpc-request-and-response-types" tabindex="-1"><a class="header-anchor" href="#message-routing-for-rpc-request-and-response-types"><span>Message routing for RPC request and response types</span></a></h3><p>Let&#39;s look at some common service definitions and how Zilla can route their messages.</p><h4 id="simple-rpc" tabindex="-1"><a class="header-anchor" href="#simple-rpc"><span>Simple RPC</span></a></h4><p>For the <code>GetFeature</code> method, the <code>Point</code> request and <code>Feature</code> response create the stream of information Kafka can help manage.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/GetFeature</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      capability</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">produce</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">request-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      reply-to</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">response-topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="server-side-streaming-rpc" tabindex="-1"><a class="header-anchor" href="#server-side-streaming-rpc"><span>Server-side streaming RPC</span></a></h4><p>For the <code>ListFeatures</code> method, we can have a dedicated stream of <code>Feature</code> messages being recorded on a topic before being sent to the client. Kafka allows the server to produce all of the responses without considering the connection to the client.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/ListFeatures</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      capability</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">produce</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">request-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      reply-to</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">feature-stream-topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="client-side-streaming-rpc" tabindex="-1"><a class="header-anchor" href="#client-side-streaming-rpc"><span>Client-side streaming RPC</span></a></h4><p>For the <code>RecordRoute</code> method, the client sends a stream of <code>Point</code> messages to a dedicated stream topic before being sent to the server. Kafka allows the client to produce all of the requests without considering the connection to the server.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/RecordRoute</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      capability</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">produce</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">point-stream-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      reply-to</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">response-topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="bidirectional-streaming-rpc" tabindex="-1"><a class="header-anchor" href="#bidirectional-streaming-rpc"><span>Bidirectional streaming RPC</span></a></h4><p>For the <code>RouteChat</code> method, we can have all of the messages on the same topic since it is the history that both the client and the server will need.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/RouteChat</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      capability</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">produce</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">chat-topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fanout-streaming-rpc" tabindex="-1"><a class="header-anchor" href="#fanout-streaming-rpc"><span>Fanout streaming RPC</span></a></h3>`,15)),a("p",null,[s[16]||(s[16]=i("An additional method for getting messages from a service onto Kafka is using the ")),e(n,{to:"/reference/config/bindings/grpc-kafka/"},{default:l(()=>s[14]||(s[14]=[i("grpc-kafka")])),_:1}),s[17]||(s[17]=i(" fetch capability. This enables message filtering and reliable message delivery. Read more about the ")),e(n,{to:"/reference/config/bindings/grpc-kafka/proxy.html#fetch-capability"},{default:l(()=>s[15]||(s[15]=[i("fetch capability")])),_:1}),s[18]||(s[18]=i(" in the reference section."))]),s[46]||(s[46]=t(`<p>The service will need a method that accepts the <code>google/protobuf/empty.proto</code> and produce the massage to be fanned out onto the Kafka topic.</p><div class="language-protobuf line-numbers-mode" data-highlighter="shiki" data-ext="protobuf" data-title="protobuf" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">import</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> &quot;google/protobuf/empty.proto&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">service</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> FanoutService</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">{</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  rpc</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> FanoutServerStream</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">google</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">protobuf</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Empty</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">returns</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">stream</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> FanoutMessage</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),a("p",null,[s[20]||(s[20]=i("Here we set the ")),e(n,{to:"/reference/config/bindings/grpc-kafka/proxy.html#fetch-capability"},{default:l(()=>s[19]||(s[19]=[i("fetch capability")])),_:1}),s[21]||(s[21]=i(" and a filter."))]),s[47]||(s[47]=t(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">grpc_kafka</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc-kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">proxy</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">example.FanoutService/*</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        capability</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">fetch</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">messages</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        filters</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">custom-key</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            custom-text</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">custom-value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-3-calling-services-from-kafka" tabindex="-1"><a class="header-anchor" href="#step-3-calling-services-from-kafka"><span>Step 3: Calling services from Kafka</span></a></h2>`,2)),a("p",null,[s[23]||(s[23]=i("Now that messages are in Kafka we need to send them to the gRPC services responsible for processing them. For this, we will be using the ")),e(n,{to:"/reference/config/bindings/kafka-grpc/"},{default:l(()=>s[22]||(s[22]=[i("kafka-grpc")])),_:1}),s[24]||(s[24]=i(" binding."))]),s[48]||(s[48]=t(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">remote_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka-grpc</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">remote_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  entry</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">&lt;kafka_cache_client_name&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    acks</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">leader_only</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">request-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          reply-to</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">response-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        scheme</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        authority</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.ENTRYPOINT_HOST}}:\${{env.ENTRYPOINT_PORT}}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">grpc_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    services</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">route_guide.proto</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">method</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">routeguide.RouteGuide/GetFeature</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">&lt;http_client_name_for_grpc_host&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="other-important-elements" tabindex="-1"><a class="header-anchor" href="#other-important-elements"><span>Other important elements</span></a></h2><p>Other aspects of routing traffic through Zilla, Kafka, and gRPC services can be summed up with reusable config setups.</p><h3 id="connecting-a-grpc-service-to-zilla" tabindex="-1"><a class="header-anchor" href="#connecting-a-grpc-service-to-zilla"><span>Connecting a gRPC service to Zilla</span></a></h3><p>When a Zilla config refers to a <code>grpc</code> client the traffic will need to be routed through an <code>http</code> and <code>tcp</code> client down to the <code>&lt;grpc_host&gt;</code> <code>&lt;grpc_port&gt;</code>.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">grpc_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">grpc</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">http_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    versions</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">h2</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">tcp_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    host</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">&lt;grpc_host&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    port</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">&lt;grpc_port&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="proxy-service-entrypoint" tabindex="-1"><a class="header-anchor" href="#proxy-service-entrypoint"><span>Proxy service entrypoint</span></a></h3>`,7)),a("p",null,[s[28]||(s[28]=i("Using a ")),e(n,{to:"/reference/config/bindings/tcp/server.html"},{default:l(()=>s[25]||(s[25]=[i("tcp server")])),_:1}),s[29]||(s[29]=i(" binding we can route the gRPC traffic through an ")),s[30]||(s[30]=a("code",null,"http",-1)),s[31]||(s[31]=i(" server, ")),s[32]||(s[32]=a("code",null,"${{env.ENTRYPOINT_HOST}}",-1)),s[33]||(s[33]=i(":")),s[34]||(s[34]=a("code",null,"${{env.ENTRYPOINT_PORT}}",-1)),s[35]||(s[35]=i(", to our desired gRPC server at the ")),s[36]||(s[36]=a("code",null,"<grpc_server_binding_name>",-1)),s[37]||(s[37]=i(". The ")),e(n,{to:"/reference/config/bindings/tls/server.html"},{default:l(()=>s[26]||(s[26]=[i("tls server")])),_:1}),s[38]||(s[38]=i(" binding secures the entrypoint by defining a tls certificate from the ")),e(n,{to:"/reference/config/vaults/filesystem.html"},{default:l(()=>s[27]||(s[27]=[i("filesystem")])),_:1}),s[39]||(s[39]=i(" vault, which is used to send the traffic over https. Alternatively, if tls is not needed The tcp server can exit directly to the http server and the tls binding and filesystem vault can be removed."))]),s[49]||(s[49]=t(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  tcp_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      host</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      port</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.ENTRYPOINT_PORT}}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tls_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  tls_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tls</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    vault</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      keys</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.ENTRYPOINT_HOST}}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      sni</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.ENTRYPOINT_HOST}}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      alpn</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">h2</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  http_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      versions</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">h2</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      access-control</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        policy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cross-origin</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">          - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">              :scheme</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">https</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">              :authority</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.ENTRYPOINT_HOST}}:\${{env.ENTRYPOINT_PORT}}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">&lt;grpc_server_binding_name&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connecting-to-kafka" tabindex="-1"><a class="header-anchor" href="#connecting-to-kafka"><span>Connecting to Kafka</span></a></h3>`,2)),a("p",null,[s[41]||(s[41]=i("A gRPC server can connect to Kafka the same as any other binding in Zilla. ")),e(n,{to:"/how-tos/connecting-to-kafka/apache-kafka.html"},{default:l(()=>s[40]||(s[40]=[i("See the docs")])),_:1}),s[42]||(s[42]=i(" on the different connection options."))]),s[50]||(s[50]=t(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kafka_cache_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka_cache_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kafka_cache_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kafka_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      servers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.KAFKA_BOOTSTRAP_SERVER}}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  tcp_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="try-it-out" tabindex="-1"><a class="header-anchor" href="#try-it-out"><span>Try it out</span></a></h2><p>Go check out the <a href="https://github.com/aklivity/zilla-examples/tree/main/grpc.kafka.proxy" target="_blank" rel="noopener noreferrer">grpc.kafka.proxy</a> example for a full implementation of an EchoService.</p>`,3))])}const y=h(d,[["render",g],["__file","grpc.route-guide.service.html.vue"]]),u=JSON.parse('{"path":"/how-tos/grpc/grpc.route-guide.service.html","title":"RouteGuide Microservice on Kafka","lang":"en-US","frontmatter":{"description":"This guide will walk through each unique gRPC message request and response design and how Zilla is configured to manage the connection for each.","prev":false,"next":false,"gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/how-tos/grpc/grpc.route-guide.service.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"RouteGuide Microservice on Kafka"}],["meta",{"property":"og:description","content":"This guide will walk through each unique gRPC message request and response design and how Zilla is configured to manage the connection for each."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RouteGuide Microservice on Kafka\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Step 1: Declaring the service","slug":"step-1-declaring-the-service","link":"#step-1-declaring-the-service","children":[]},{"level":2,"title":"Step 2: Handling message routing onto Kafka","slug":"step-2-handling-message-routing-onto-kafka","link":"#step-2-handling-message-routing-onto-kafka","children":[{"level":3,"title":"Message routing for RPC request and response types","slug":"message-routing-for-rpc-request-and-response-types","link":"#message-routing-for-rpc-request-and-response-types","children":[{"level":4,"title":"Simple RPC","slug":"simple-rpc","link":"#simple-rpc","children":[]},{"level":4,"title":"Server-side streaming RPC","slug":"server-side-streaming-rpc","link":"#server-side-streaming-rpc","children":[]},{"level":4,"title":"Client-side streaming RPC","slug":"client-side-streaming-rpc","link":"#client-side-streaming-rpc","children":[]},{"level":4,"title":"Bidirectional streaming RPC","slug":"bidirectional-streaming-rpc","link":"#bidirectional-streaming-rpc","children":[]}]},{"level":3,"title":"Fanout streaming RPC","slug":"fanout-streaming-rpc","link":"#fanout-streaming-rpc","children":[]}]},{"level":2,"title":"Step 3: Calling services from Kafka","slug":"step-3-calling-services-from-kafka","link":"#step-3-calling-services-from-kafka","children":[]},{"level":2,"title":"Other important elements","slug":"other-important-elements","link":"#other-important-elements","children":[{"level":3,"title":"Connecting a gRPC service to Zilla","slug":"connecting-a-grpc-service-to-zilla","link":"#connecting-a-grpc-service-to-zilla","children":[]},{"level":3,"title":"Proxy service entrypoint","slug":"proxy-service-entrypoint","link":"#proxy-service-entrypoint","children":[]},{"level":3,"title":"Connecting to Kafka","slug":"connecting-to-kafka","link":"#connecting-to-kafka","children":[]}]},{"level":2,"title":"Try it out","slug":"try-it-out","link":"#try-it-out","children":[]}],"readingTime":{"minutes":3.69,"words":1107},"filePathRelative":"how-tos/grpc/grpc.route-guide.service.md"}');export{y as comp,u as data};
