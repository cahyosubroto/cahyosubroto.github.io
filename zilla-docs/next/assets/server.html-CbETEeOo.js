import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,f as a,a as i,b as e,d as n,e as l,g as d,r as h,o as c}from"./app-CKeM1Wjf.js";const p={};function k(u,s){const t=h("RouteLink");return c(),r("div",null,[s[12]||(s[12]=a(`<h1 id="asyncapi-server" tabindex="-1"><a class="header-anchor" href="#asyncapi-server"><span>asyncapi server</span></a></h1><p>The asyncapi server binding creates composite of <code>tcp</code>, <code>tls</code>, and <code>mqtt</code> or <code>http</code> bindings with server kind and adapts MQTT/HTTP streams to AsyncAPI streams.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">mqtt_asyncapi_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">asyncapi</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    specs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      my-mqtt-api-spec</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            subject</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqtt-streetlights</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            version</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">latest</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">south_kafka_proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-required" tabindex="-1"><a class="header-anchor" href="#configuration-required"><span>Configuration (* required)</span></a></h2><h3 id="vault" tabindex="-1"><a class="header-anchor" href="#vault"><span>vault</span></a></h3><blockquote><p><code>string</code></p></blockquote><p>Vault name.</p><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The <code>server</code> specific options.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">specs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  http_api</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    servers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">plain</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        subject</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">petstore</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        version</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="options-specs" tabindex="-1"><a class="header-anchor" href="#options-specs"><span>options.specs</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>The <code>specs</code> specific options.</p><h4 id="specs-catalog" tabindex="-1"><a class="header-anchor" href="#specs-catalog"><span>specs.catalog</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>To map defined catalog for schema retrieval based on catalog specific parameters.</p><h4 id="catalog-subject" tabindex="-1"><a class="header-anchor" href="#catalog-subject"><span>catalog.subject*</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Subject name used when storing the catalog artifact.</p><h4 id="catalog-version" tabindex="-1"><a class="header-anchor" href="#catalog-version"><span>catalog.version</span></a></h4><blockquote><p><code>string</code> | Default: <code>latest</code></p></blockquote><p>Specific iteration or version of a registered schema in the defined catalog.</p><h4 id="specs-servers" tabindex="-1"><a class="header-anchor" href="#specs-servers"><span>specs.servers</span></a></h4><blockquote><p><code>array</code> of <code>object</code></p></blockquote><p>The servers to match from the schema that are used when defining endpoints.</p><h4 id="servers-url" tabindex="-1"><a class="header-anchor" href="#servers-url"><span>servers[].url</span></a></h4><blockquote><p><code>string</code> | Pattern: <code>^([a-zA-Z0-9\\\\\\\\.-]+)(:(\\\\\\\\{[a-zA-Z_]+\\\\\\\\}|[0-9]+))?$</code></p></blockquote><p>The server to match based on the server&#39;s <code>url</code> in an asyncapi <code>2.x</code> spec only.</p><h4 id="servers-host" tabindex="-1"><a class="header-anchor" href="#servers-host"><span>servers[].host</span></a></h4><blockquote><p><code>string</code> | Pattern: <code>^([a-zA-Z0-9\\\\\\\\.-]+)(:(\\\\\\\\{[a-zA-Z_]+\\\\\\\\}|[0-9]+))?$</code></p></blockquote><p>The server to match based on the server&#39;s <code>host</code> in an asyncapi <code>3.x</code> spec only.</p><h4 id="servers-pathname" tabindex="-1"><a class="header-anchor" href="#servers-pathname"><span>servers[].pathname</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>The server pathname to match based on the server&#39;s <code>pathname</code> in an asyncapi <code>3.x</code> spec only.</p><h4 id="options-tcp" tabindex="-1"><a class="header-anchor" href="#options-tcp"><span>options.tcp</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>TCP options to connect to an external client.</p><h4 id="tcp-host" tabindex="-1"><a class="header-anchor" href="#tcp-host"><span>tcp.host</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Hostname or IP address.</p><h4 id="tcp-port" tabindex="-1"><a class="header-anchor" href="#tcp-port"><span>tcp.port</span></a></h4><blockquote><p><code>integer</code>, <code>string</code>, <code>array</code></p></blockquote><p>Port number(s), including port number ranges.</p><h4 id="options-http" tabindex="-1"><a class="header-anchor" href="#options-http"><span>options.http</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>The http specific options.</p><h4 id="http-authorization" tabindex="-1"><a class="header-anchor" href="#http-authorization"><span>http.authorization</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Authorization by guard for the <code>HTTP/1.1</code> and <code>HTTP/2</code> protocols.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">authorization</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  jwt</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    credentials</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        authorization</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">Bearer {credentials}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="authorization-credentials" tabindex="-1"><a class="header-anchor" href="#authorization-credentials"><span>authorization.credentials*</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>Defines how to extract credentials from the HTTP request.</p><h4 id="credentials-cookies" tabindex="-1"><a class="header-anchor" href="#credentials-cookies"><span>credentials.cookies</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Named cookie value pattern with <code>{credentials}</code>.</p><h4 id="credentials-headers" tabindex="-1"><a class="header-anchor" href="#credentials-headers"><span>credentials.headers</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Named header value pattern with <code>{credentials}</code>, e.g. <code>&quot;Bearer</code> <code>{credentials}&quot;</code>.</p><h4 id="credentials-query" tabindex="-1"><a class="header-anchor" href="#credentials-query"><span>credentials.query*</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Named query parameter value pattern with <code>{credentials}</code>.</p><h3 id="options-kafka" tabindex="-1"><a class="header-anchor" href="#options-kafka"><span>options.kafka</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The <code>kafka</code> binding specific options.</p><h4 id="kafka-topics" tabindex="-1"><a class="header-anchor" href="#kafka-topics"><span>kafka.topics</span></a></h4><blockquote><p><code>array</code> of <code>object</code></p></blockquote><p>Topic configuration.</p><h4 id="topics-name" tabindex="-1"><a class="header-anchor" href="#topics-name"><span>topics[].name</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Topic name.</p><h4 id="topics-key" tabindex="-1"><a class="header-anchor" href="#topics-key"><span>topics[].key</span></a></h4><blockquote><p><code>enum</code> [ <code>avro</code>, <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>protobuf</code>, <code>string</code> ], <code>object</code></p></blockquote><p>Enforce validation for key</p><h4 id="key-model" tabindex="-1"><a class="header-anchor" href="#key-model"><span>key.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>avro</code>, <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>protobuf</code>, <code>string</code> ]</p></blockquote>`,77)),i("p",null,[s[1]||(s[1]=e("A schema or type to validate the topic's key. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>s[0]||(s[0]=[e("model")])),_:1}),s[2]||(s[2]=e(" docs for type specific implementation."))]),s[13]||(s[13]=a('<h4 id="topics-value" tabindex="-1"><a class="header-anchor" href="#topics-value"><span>topics[].value</span></a></h4><blockquote><p><code>enum</code> [ <code>avro</code>, <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>protobuf</code>, <code>string</code> ], <code>object</code></p></blockquote><p>Enforce validation for value</p><h4 id="value-model" tabindex="-1"><a class="header-anchor" href="#value-model"><span>value.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>avro</code>, <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>protobuf</code>, <code>string</code> ]</p></blockquote>',5)),i("p",null,[s[4]||(s[4]=e("A schema or type to validate the topic's value. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>s[3]||(s[3]=[e("model")])),_:1}),s[5]||(s[5]=e(" docs for type specific implementation."))]),s[14]||(s[14]=a(`<h4 id="topics-defaultoffset" tabindex="-1"><a class="header-anchor" href="#topics-defaultoffset"><span>topics[].defaultOffset</span></a></h4><blockquote><p><code>enum</code> [ <code>live</code>, <code>historical</code> ]</p></blockquote><p>Fetch offset to use for new consumers</p><h4 id="topics-transforms" tabindex="-1"><a class="header-anchor" href="#topics-transforms"><span>topics[].transforms</span></a></h4><blockquote><p><code>array</code></p></blockquote><p>Extract key or value attributes from the typed Kafka message to apply to the Kafka message id or Kafka headers. The <code>extract-key</code> property must come before the <code>extract-headers</code> property if they both exist.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">transforms</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">extract-key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${message.key.id}</span></span></code></pre></div><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">transforms</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">extract-headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      my-kafka-header</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${message.value.test}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">transforms</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">extract-key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${message.value.id}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">extract-headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      my-kafka-header</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${message.value.test}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="transforms-extract-key" tabindex="-1"><a class="header-anchor" href="#transforms-extract-key"><span>transforms[].extract-key</span></a></h4><blockquote><p><code>string</code> | Pattern: <code>^\\\\$\\\\{message\\\\.(key|value)\\\\.([A-Za-z_][A-Za-z0-9_]*)\\\\}$</code></p></blockquote><p>Use a part of the Kafka message as the Kafka message key.</p><h4 id="transforms-extract-headers" tabindex="-1"><a class="header-anchor" href="#transforms-extract-headers"><span>transforms[].extract-headers</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties | Pattern: <code>^\\\\$\\\\{message\\\\.(key|value)\\\\.([A-Za-z_][A-Za-z0-9_]*)\\\\}$</code></p></blockquote><p>Use a part of the Kafka message as a Kafka message header.</p><h4 id="kafka-sasl" tabindex="-1"><a class="header-anchor" href="#kafka-sasl"><span>kafka.sasl</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>SASL credentials to use when connecting to <code>kafka</code> brokers.</p>`,18)),d(" markdownlint-disable MD024 "),s[15]||(s[15]=a(`<h4 id="sasl-mechanism" tabindex="-1"><a class="header-anchor" href="#sasl-mechanism"><span>sasl.mechanism</span></a></h4><blockquote><p><code>enum</code> [ <code>plain</code>, <code>scram-sha-1</code>, <code>scram-sha-256</code>, <code>scram-sha-512</code> ]</p></blockquote><p>Supports <code>plain</code> and <code>scram</code> mechanisms.</p><h4 id="sasl-mechanism-plain" tabindex="-1"><a class="header-anchor" href="#sasl-mechanism-plain"><span>sasl.mechanism: plain</span></a></h4><blockquote><p><code>const</code></p></blockquote><p>Configure credentials for the <code>plain</code> sasl mechanism.</p><h5 id="sasl-username" tabindex="-1"><a class="header-anchor" href="#sasl-username"><span>sasl.username*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL username.</p><h5 id="sasl-password" tabindex="-1"><a class="header-anchor" href="#sasl-password"><span>sasl.password*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL password.</p><h4 id="sasl-mechanism-scram-sha-1" tabindex="-1"><a class="header-anchor" href="#sasl-mechanism-scram-sha-1"><span>sasl.mechanism: scram-sha-1</span></a></h4><blockquote><p><code>const</code></p></blockquote><p>Configure credentials for the <code>scram-sha-1</code> sasl mechanism.</p><h5 id="sasl-username-1" tabindex="-1"><a class="header-anchor" href="#sasl-username-1"><span>sasl.username*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL username.</p><h5 id="sasl-password-1" tabindex="-1"><a class="header-anchor" href="#sasl-password-1"><span>sasl.password*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL password.</p><h4 id="sasl-mechanism-scram-sha-256" tabindex="-1"><a class="header-anchor" href="#sasl-mechanism-scram-sha-256"><span>sasl.mechanism: scram-sha-256</span></a></h4><blockquote><p><code>const</code></p></blockquote><p>Configure credentials for the <code>scram-sha-256</code> sasl mechanism.</p><h5 id="sasl-username-2" tabindex="-1"><a class="header-anchor" href="#sasl-username-2"><span>sasl.username*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL username.</p><h5 id="sasl-password-2" tabindex="-1"><a class="header-anchor" href="#sasl-password-2"><span>sasl.password*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL password.</p><h4 id="sasl-mechanism-scram-sha-512" tabindex="-1"><a class="header-anchor" href="#sasl-mechanism-scram-sha-512"><span>sasl.mechanism: scram-sha-512</span></a></h4><blockquote><p><code>const</code></p></blockquote><p>Configure credentials for the <code>scram-sha-512</code> sasl mechanism.</p><h5 id="sasl-username-3" tabindex="-1"><a class="header-anchor" href="#sasl-username-3"><span>sasl.username*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL username.</p><h5 id="sasl-password-3" tabindex="-1"><a class="header-anchor" href="#sasl-password-3"><span>sasl.password*</span></a></h5><blockquote><p><code>string</code></p></blockquote><p>SASL password.</p><h3 id="options-mqtt-kafka" tabindex="-1"><a class="header-anchor" href="#options-mqtt-kafka"><span>options.mqtt-kafka</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The <code>mqtt-kafka</code> binding specific options.</p><h4 id="mqtt-kafka-channels" tabindex="-1"><a class="header-anchor" href="#mqtt-kafka-channels"><span>mqtt-kafka.channels</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>AsyncAPI Kafka channels describing the necessary topics for the MQTT-Kafka mapping.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">mqtt-kafka</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  channels</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    sessions</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqttSessions</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    retained</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqttRetained</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    messages</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqttMessages</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="channels-sessions" tabindex="-1"><a class="header-anchor" href="#channels-sessions"><span>channels.sessions</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI Kafka sessions channel.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">sessions</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqttSessions</span></span></code></pre></div><h4 id="channels-retained" tabindex="-1"><a class="header-anchor" href="#channels-retained"><span>channels.retained</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI Kafka retained channel.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">retained</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqttRetained</span></span></code></pre></div><h4 id="channels-messages" tabindex="-1"><a class="header-anchor" href="#channels-messages"><span>channels.messages</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI Kafka messages channel.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">messages</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">mqttMessages</span></span></code></pre></div><h3 id="options-http-1" tabindex="-1"><a class="header-anchor" href="#options-http-1"><span>options.http</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The http specific options.</p><h4 id="http-authorization-1" tabindex="-1"><a class="header-anchor" href="#http-authorization-1"><span>http.authorization</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Authorization by guard for the <code>HTTP/1.1</code> and <code>HTTP/2</code> protocols.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">authorization</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  my_jwt_guard</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    credentials</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        authorization</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">Bearer {credentials}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="authorization-credentials-1" tabindex="-1"><a class="header-anchor" href="#authorization-credentials-1"><span>authorization.credentials*</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>Defines how to extract credentials from the HTTP request.</p><h4 id="credentials-cookies-1" tabindex="-1"><a class="header-anchor" href="#credentials-cookies-1"><span>credentials.cookies</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Named cookie value pattern with <code>{credentials}</code>.</p><h4 id="credentials-headers-1" tabindex="-1"><a class="header-anchor" href="#credentials-headers-1"><span>credentials.headers</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Named header value pattern with <code>{credentials}</code>, e.g. <code>&quot;Bearer</code> <code>{credentials}&quot;</code>.</p><h4 id="credentials-query-1" tabindex="-1"><a class="header-anchor" href="#credentials-query-1"><span>credentials.query*</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Named query parameter value pattern with <code>{credentials}</code>.</p><h3 id="options-mqtt" tabindex="-1"><a class="header-anchor" href="#options-mqtt"><span>options.mqtt</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The MQTT specific options.</p><h4 id="mqtt-authorization" tabindex="-1"><a class="header-anchor" href="#mqtt-authorization"><span>mqtt.authorization</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Authorization by guard for the <code>HTTP/1.1</code> and <code>HTTP/2</code> protocols.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">authorization</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  my_jwt_guard</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    credentials</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        authorization</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">Bearer {credentials}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="authorization-credentials-2" tabindex="-1"><a class="header-anchor" href="#authorization-credentials-2"><span>authorization.credentials*</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>Defines how to extract credentials from the MQTT connect packet.</p><h4 id="credentials-connect" tabindex="-1"><a class="header-anchor" href="#credentials-connect"><span>credentials.connect*</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>MQTT connect packet properties</p><h4 id="connect-username" tabindex="-1"><a class="header-anchor" href="#connect-username"><span>connect.username</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Extract credentials from the MQTT connect packet username property with <code>{credentials}</code>, e.g. <code>&quot;Bearer</code> <code>{credentials}&quot;</code>.</p><h4 id="connect-password" tabindex="-1"><a class="header-anchor" href="#connect-password"><span>connect.password</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Extract credentials from the MQTT connect packet password property with <code>{credentials}</code>, e.g. <code>&quot;Bearer</code> <code>{credentials}&quot;</code>.</p><h4 id="options-tls" tabindex="-1"><a class="header-anchor" href="#options-tls"><span>options.tls</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>The <code>tls</code> specific options.</p><h4 id="tls-version" tabindex="-1"><a class="header-anchor" href="#tls-version"><span>tls.version</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Protocol version.</p><h4 id="tls-keys" tabindex="-1"><a class="header-anchor" href="#tls-keys"><span>tls.keys</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>A list of reference names for the Vault key.</p><h4 id="tls-trust" tabindex="-1"><a class="header-anchor" href="#tls-trust"><span>tls.trust</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>A list of reference names for the Vault certificate.</p><h4 id="tls-signers" tabindex="-1"><a class="header-anchor" href="#tls-signers"><span>tls.signers</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>A list of reference names for the Vault signer certificate.</p><h4 id="tls-trustcacerts" tabindex="-1"><a class="header-anchor" href="#tls-trustcacerts"><span>tls.trustcacerts</span></a></h4><blockquote><p><code>boolean</code></p></blockquote><p>Trust CA certificates. When the this property is not explicitly set it will be automatically set to <code>true</code> if <a href="#tls-trust">tls.trust</a> is <code>null</code>.</p><h4 id="tls-sni" tabindex="-1"><a class="header-anchor" href="#tls-sni"><span>tls.sni</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>A list of the Server Name Indications.</p><h4 id="tls-alpn" tabindex="-1"><a class="header-anchor" href="#tls-alpn"><span>tls.alpn</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>Application protocols.</p><h4 id="tls-mutual" tabindex="-1"><a class="header-anchor" href="#tls-mutual"><span>tls.mutual</span></a></h4><blockquote><p><code>enum</code> [ <code>required</code>, <code>requested</code>, <code>none</code> ]</p></blockquote><p>Mutual authentication. When the this property is not explicitly set it will be automatically set to <code>none</code> if <a href="#tls-trust">tls.trust</a> is <code>null</code>, otherwise it will be set to <code>required</code>.</p><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes"><span>routes</span></a></h3><blockquote><p><code>array</code> of <code>object</code></p></blockquote><p>Conditional <code>asyncapi</code> specific routes.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">          - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">api-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-mqtt-api-spec</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            operation-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">sendEvents</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">asyncapi_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          api-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-api-spec</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          operation-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">toSensorData</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">          - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">api-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-mqtt-api-spec</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            operation-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">receiveEvents</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">asyncapi_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          api-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-api-spec</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          operation-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">onSensorData</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="routes-guarded" tabindex="-1"><a class="header-anchor" href="#routes-guarded"><span>routes[].guarded</span></a></h4><blockquote><p><code>object</code> as map of named <code>array</code> of <code>string</code></p></blockquote><p>List of roles required by each named guard to authorize this route.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">guarded</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      my_guard</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">read:items</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="routes-when" tabindex="-1"><a class="header-anchor" href="#routes-when"><span>routes[].when</span></a></h4><blockquote><p><code>array</code> of <code>object</code></p></blockquote>`,133)),i("p",null,[s[7]||(s[7]=e("List of conditions to match this route when adapting ")),s[8]||(s[8]=i("code",null,"asyncapi",-1)),s[9]||(s[9]=e(" MQTT streams to ")),s[10]||(s[10]=i("code",null,"asyncapi",-1)),s[11]||(s[11]=e(" Kafka streams. Read more: ")),n(t,{to:"/concepts/bindings.html#when-a-route-matches"},{default:l(()=>s[6]||(s[6]=[e("When a route matches")])),_:1})]),s[16]||(s[16]=a(`<h4 id="when-api-id" tabindex="-1"><a class="header-anchor" href="#when-api-id"><span>when[].api-id</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI spec identifier that matches from <code>asyncapi</code> binding MQTT stream.</p><h4 id="when-operation-id" tabindex="-1"><a class="header-anchor" href="#when-operation-id"><span>when[].operation-id</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI OperationId that can be mapped between AsyncAPI MQTT and AsyncAPI Kafka spec</p><h4 id="routes-with" tabindex="-1"><a class="header-anchor" href="#routes-with"><span>routes[].with</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>Defines the route with the AsyncAPI spec identifier and OperationId.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  api-id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-asyncapi-spec</span></span></code></pre></div><h4 id="with-api-id" tabindex="-1"><a class="header-anchor" href="#with-api-id"><span>with.api-id</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI spec identifier that the route exits with to the next binding.</p><h4 id="with-operation-id" tabindex="-1"><a class="header-anchor" href="#with-operation-id"><span>with.operation-id</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>AsyncAPI OperationId that the route exits with to the next binding.</p><h3 id="exit" tabindex="-1"><a class="header-anchor" href="#exit"><span>exit</span></a></h3><blockquote><p><code>string</code></p></blockquote><p>Default exit binding when no conditional routes are viable.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">echo_server</span></span></code></pre></div><h4 id="routes-exit" tabindex="-1"><a class="header-anchor" href="#routes-exit"><span>routes[].exit</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Next binding when following this route.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">asyncapi_client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="telemetry" tabindex="-1"><a class="header-anchor" href="#telemetry"><span>telemetry</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>Defines the desired telemetry for the binding.</p><h4 id="telemetry-metrics" tabindex="-1"><a class="header-anchor" href="#telemetry-metrics"><span>telemetry.metrics</span></a></h4><blockquote><p><code>array</code></p></blockquote><p>Telemetry metrics to track</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">telemetry</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  metrics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">stream.*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31))])}const b=o(p,[["render",k],["__file","server.html.vue"]]),y=JSON.parse('{"path":"/reference/config/bindings/asyncapi/server.html","title":"asyncapi server","lang":"en-US","frontmatter":{"shortTitle":"server","description":"asyncapi server The asyncapi server binding creates composite of tcp, tls, and mqtt or http bindings with server kind and adapts MQTT/HTTP streams to AsyncAPI streams. Configura...","gitInclude":[".partials/server.yaml","../.partials/vault.md",".partials/options.md","../.partials/options-kafka-topics.md","../.partials/options-kafka-topics-transforms.md","../.partials/options-kafka-sasl.md","../.partials/options-http-auth.md","../.partials/options-mqtt-auth.md","../.partials/options-tls.md",".partials/routes.md","../.partials/exit.md","../.partials/telemetry.md"],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/bindings/asyncapi/server.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"asyncapi server"}],["meta",{"property":"og:description","content":"asyncapi server The asyncapi server binding creates composite of tcp, tls, and mqtt or http bindings with server kind and adapts MQTT/HTTP streams to AsyncAPI streams. Configura..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"asyncapi server\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Configuration (* required)","slug":"configuration-required","link":"#configuration-required","children":[{"level":3,"title":"vault","slug":"vault","link":"#vault","children":[]},{"level":3,"title":"options","slug":"options","link":"#options","children":[{"level":4,"title":"options.specs","slug":"options-specs","link":"#options-specs","children":[]},{"level":4,"title":"specs.catalog","slug":"specs-catalog","link":"#specs-catalog","children":[]},{"level":4,"title":"catalog.subject*","slug":"catalog-subject","link":"#catalog-subject","children":[]},{"level":4,"title":"catalog.version","slug":"catalog-version","link":"#catalog-version","children":[]},{"level":4,"title":"specs.servers","slug":"specs-servers","link":"#specs-servers","children":[]},{"level":4,"title":"servers[].url","slug":"servers-url","link":"#servers-url","children":[]},{"level":4,"title":"servers[].host","slug":"servers-host","link":"#servers-host","children":[]},{"level":4,"title":"servers[].pathname","slug":"servers-pathname","link":"#servers-pathname","children":[]},{"level":4,"title":"options.tcp","slug":"options-tcp","link":"#options-tcp","children":[]},{"level":4,"title":"tcp.host","slug":"tcp-host","link":"#tcp-host","children":[]},{"level":4,"title":"tcp.port","slug":"tcp-port","link":"#tcp-port","children":[]},{"level":4,"title":"options.http","slug":"options-http","link":"#options-http","children":[]},{"level":4,"title":"http.authorization","slug":"http-authorization","link":"#http-authorization","children":[]},{"level":4,"title":"authorization.credentials*","slug":"authorization-credentials","link":"#authorization-credentials","children":[]},{"level":4,"title":"credentials.cookies","slug":"credentials-cookies","link":"#credentials-cookies","children":[]},{"level":4,"title":"credentials.headers","slug":"credentials-headers","link":"#credentials-headers","children":[]},{"level":4,"title":"credentials.query*","slug":"credentials-query","link":"#credentials-query","children":[]}]},{"level":3,"title":"options.kafka","slug":"options-kafka","link":"#options-kafka","children":[{"level":4,"title":"kafka.topics","slug":"kafka-topics","link":"#kafka-topics","children":[]},{"level":4,"title":"topics[].name","slug":"topics-name","link":"#topics-name","children":[]},{"level":4,"title":"topics[].key","slug":"topics-key","link":"#topics-key","children":[]},{"level":4,"title":"key.model*","slug":"key-model","link":"#key-model","children":[]},{"level":4,"title":"topics[].value","slug":"topics-value","link":"#topics-value","children":[]},{"level":4,"title":"value.model*","slug":"value-model","link":"#value-model","children":[]},{"level":4,"title":"topics[].defaultOffset","slug":"topics-defaultoffset","link":"#topics-defaultoffset","children":[]},{"level":4,"title":"topics[].transforms","slug":"topics-transforms","link":"#topics-transforms","children":[]},{"level":4,"title":"transforms[].extract-key","slug":"transforms-extract-key","link":"#transforms-extract-key","children":[]},{"level":4,"title":"transforms[].extract-headers","slug":"transforms-extract-headers","link":"#transforms-extract-headers","children":[]},{"level":4,"title":"kafka.sasl","slug":"kafka-sasl","link":"#kafka-sasl","children":[]},{"level":4,"title":"sasl.mechanism","slug":"sasl-mechanism","link":"#sasl-mechanism","children":[]},{"level":4,"title":"sasl.mechanism: plain","slug":"sasl-mechanism-plain","link":"#sasl-mechanism-plain","children":[]},{"level":4,"title":"sasl.mechanism: scram-sha-1","slug":"sasl-mechanism-scram-sha-1","link":"#sasl-mechanism-scram-sha-1","children":[]},{"level":4,"title":"sasl.mechanism: scram-sha-256","slug":"sasl-mechanism-scram-sha-256","link":"#sasl-mechanism-scram-sha-256","children":[]},{"level":4,"title":"sasl.mechanism: scram-sha-512","slug":"sasl-mechanism-scram-sha-512","link":"#sasl-mechanism-scram-sha-512","children":[]}]},{"level":3,"title":"options.mqtt-kafka","slug":"options-mqtt-kafka","link":"#options-mqtt-kafka","children":[{"level":4,"title":"mqtt-kafka.channels","slug":"mqtt-kafka-channels","link":"#mqtt-kafka-channels","children":[]},{"level":4,"title":"channels.sessions","slug":"channels-sessions","link":"#channels-sessions","children":[]},{"level":4,"title":"channels.retained","slug":"channels-retained","link":"#channels-retained","children":[]},{"level":4,"title":"channels.messages","slug":"channels-messages","link":"#channels-messages","children":[]}]},{"level":3,"title":"options.http","slug":"options-http-1","link":"#options-http-1","children":[{"level":4,"title":"http.authorization","slug":"http-authorization-1","link":"#http-authorization-1","children":[]},{"level":4,"title":"authorization.credentials*","slug":"authorization-credentials-1","link":"#authorization-credentials-1","children":[]},{"level":4,"title":"credentials.cookies","slug":"credentials-cookies-1","link":"#credentials-cookies-1","children":[]},{"level":4,"title":"credentials.headers","slug":"credentials-headers-1","link":"#credentials-headers-1","children":[]},{"level":4,"title":"credentials.query*","slug":"credentials-query-1","link":"#credentials-query-1","children":[]}]},{"level":3,"title":"options.mqtt","slug":"options-mqtt","link":"#options-mqtt","children":[{"level":4,"title":"mqtt.authorization","slug":"mqtt-authorization","link":"#mqtt-authorization","children":[]},{"level":4,"title":"authorization.credentials*","slug":"authorization-credentials-2","link":"#authorization-credentials-2","children":[]},{"level":4,"title":"credentials.connect*","slug":"credentials-connect","link":"#credentials-connect","children":[]},{"level":4,"title":"connect.username","slug":"connect-username","link":"#connect-username","children":[]},{"level":4,"title":"connect.password","slug":"connect-password","link":"#connect-password","children":[]},{"level":4,"title":"options.tls","slug":"options-tls","link":"#options-tls","children":[]},{"level":4,"title":"tls.version","slug":"tls-version","link":"#tls-version","children":[]},{"level":4,"title":"tls.keys","slug":"tls-keys","link":"#tls-keys","children":[]},{"level":4,"title":"tls.trust","slug":"tls-trust","link":"#tls-trust","children":[]},{"level":4,"title":"tls.signers","slug":"tls-signers","link":"#tls-signers","children":[]},{"level":4,"title":"tls.trustcacerts","slug":"tls-trustcacerts","link":"#tls-trustcacerts","children":[]},{"level":4,"title":"tls.sni","slug":"tls-sni","link":"#tls-sni","children":[]},{"level":4,"title":"tls.alpn","slug":"tls-alpn","link":"#tls-alpn","children":[]},{"level":4,"title":"tls.mutual","slug":"tls-mutual","link":"#tls-mutual","children":[]}]},{"level":3,"title":"routes","slug":"routes","link":"#routes","children":[{"level":4,"title":"routes[].guarded","slug":"routes-guarded","link":"#routes-guarded","children":[]},{"level":4,"title":"routes[].when","slug":"routes-when","link":"#routes-when","children":[]},{"level":4,"title":"when[].api-id","slug":"when-api-id","link":"#when-api-id","children":[]},{"level":4,"title":"when[].operation-id","slug":"when-operation-id","link":"#when-operation-id","children":[]},{"level":4,"title":"routes[].with","slug":"routes-with","link":"#routes-with","children":[]},{"level":4,"title":"with.api-id","slug":"with-api-id","link":"#with-api-id","children":[]},{"level":4,"title":"with.operation-id","slug":"with-operation-id","link":"#with-operation-id","children":[]}]},{"level":3,"title":"exit","slug":"exit","link":"#exit","children":[{"level":4,"title":"routes[].exit","slug":"routes-exit","link":"#routes-exit","children":[]}]},{"level":3,"title":"telemetry","slug":"telemetry","link":"#telemetry","children":[{"level":4,"title":"telemetry.metrics","slug":"telemetry-metrics","link":"#telemetry-metrics","children":[]}]}]}],"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"reference/config/bindings/asyncapi/server.md","autoDesc":true}');export{b as comp,y as data};
