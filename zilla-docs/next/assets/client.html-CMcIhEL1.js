import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,f as h,d as a,e as i,r as o,o as k,b as t,a as l}from"./app-DWA4uJ8g.js";const m={};function g(c,e){const r=o("RouteLink"),d=o("Tabs");return k(),p("div",null,[e[55]||(e[55]=h(`<h1 id="client-binding" tabindex="-1"><a class="header-anchor" href="#client-binding"><span>Client Binding</span></a></h1><p>The http client binding receives inbound application streams and encodes each request as a network stream via <code>HTTP/1.1</code> protocol. Note that the same network stream can be reused to encode multiple <code>HTTP/1.1</code> requests.</p><p>Conditional routes based on <code>http</code> request headers are used to route these network streams to an <code>exit</code> binding.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">http_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    versions</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">h2</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp_client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-required" tabindex="-1"><a class="header-anchor" href="#configuration-required"><span>Configuration (* required)</span></a></h2>`,5)),a(d,{id:"13",data:[{id:"options"},{id:"routes*"},{id:"exit"},{id:"telemetry"}]},{title0:i(({value:s,isActive:n})=>e[0]||(e[0]=[t("options")])),title1:i(({value:s,isActive:n})=>e[1]||(e[1]=[t("routes*")])),title2:i(({value:s,isActive:n})=>e[2]||(e[2]=[t("exit")])),title3:i(({value:s,isActive:n})=>e[3]||(e[3]=[t("telemetry")])),tab0:i(({value:s,isActive:n})=>[e[46]||(e[46]=l("h4",{id:"options",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#options"},[l("span",null,"options")])],-1)),e[47]||(e[47]=l("blockquote",null,[l("p",null,[l("code",null,"object")])],-1)),e[48]||(e[48]=l("p",null,[t("We define "),l("code",null,"TypeEnum"),t(" as "),l("code",null,"enum"),t(" [ "),l("code",null,"double"),t(", "),l("code",null,"float"),t(", "),l("code",null,"int32"),t(", "),l("code",null,"int64"),t(", "),l("code",null,"json"),t(", "),l("code",null,"string"),t(" ]")],-1)),l("table",null,[e[45]||(e[45]=l("thead",null,[l("tr",null,[l("th",null,"Property"),l("th",null,"Type"),l("th",null,"Description")])],-1)),l("tbody",null,[e[29]||(e[29]=l("tr",null,[l("td",null,"options.requests"),l("td",null,[l("code",null,"object[]")]),l("td",null,"Options to configure typed validations for request fields.")],-1)),e[30]||(e[30]=l("tr",null,[l("td",null,"options.requests[].content"),l("td",null,[l("code",null,"TypeEnum"),t(" or "),l("code",null,"object")]),l("td",null,"Enforce validation for the request content.")],-1)),l("tr",null,[e[7]||(e[7]=l("td",null,"options.requests[].content.model*",-1)),e[8]||(e[8]=l("td",null,[l("code",null,"TypeEnum")],-1)),l("td",null,[e[5]||(e[5]=t("A schema or type to validate the request content. Refer to the individual ")),a(r,{to:"/reference/config/models/"},{default:i(()=>e[4]||(e[4]=[t("model")])),_:1}),e[6]||(e[6]=t(" docs for type specific implementation."))])]),e[31]||(e[31]=l("tr",null,[l("td",null,"options.requests[].content-type"),l("td",null,[l("code",null,"string[]")]),l("td",null,"Content type of the HTTP request.")],-1)),e[32]||(e[32]=l("tr",null,[l("td",null,"options.requests[].headers"),l("td",null,[l("code",null,"Map<string, enum>"),t(" with "),l("code",null,"TypeEnum"),t(", "),l("code",null,"object"),t(" or `Map<string, object>")]),l("td",null,"Enforce validation for request headers.")],-1)),e[33]||(e[33]=l("tr",null,[l("td",null,"options.requests[].method"),l("td",null,[l("code",null,"enum"),t(" [ "),l("code",null,"GET"),t(", "),l("code",null,"PUT"),t(", "),l("code",null,"POST"),t(", "),l("code",null,"DELETE"),t(", "),l("code",null,"OPTIONS"),t(", "),l("code",null,"HEAD"),t(", "),l("code",null,"PATCH"),t(", "),l("code",null,"TRACE"),t(" ]")]),l("td",null,"HTTP request method.")],-1)),e[34]||(e[34]=l("tr",null,[l("td",null,"options.requests[].params"),l("td",null,[l("code",null,"object")]),l("td",null,"Query parameters of the HTTP request.")],-1)),e[35]||(e[35]=l("tr",null,[l("td",null,"options.requests[].params.path"),l("td",null,[l("code",null,"Map<string, enum>"),t(" with "),l("code",null,"TypeEnum"),t(" or "),l("code",null,"Map<string, Object>")]),l("td",null,"Enforce validation for path")],-1)),l("tr",null,[e[12]||(e[12]=l("td",null,"options.requests[].params.path.model*",-1)),e[13]||(e[13]=l("td",null,[l("code",null,"TypeEnum")],-1)),l("td",null,[e[10]||(e[10]=t("A schema or type to validate the path content. Refer to the individual ")),a(r,{to:"/reference/config/models/"},{default:i(()=>e[9]||(e[9]=[t("model")])),_:1}),e[11]||(e[11]=t(" docs for type specific implementation."))])]),e[36]||(e[36]=l("tr",null,[l("td",null,"options.requests[].params.query"),l("td",null,[l("code",null,"Map<string, TypeEnum>"),t(" or "),l("code",null,"Map<string, object>")]),l("td",null,"Enforce validation for query")],-1)),l("tr",null,[e[17]||(e[17]=l("td",null,"options.requests[].params.query.model*",-1)),e[18]||(e[18]=l("td",null,[l("code",null,"TypeEnum")],-1)),l("td",null,[e[15]||(e[15]=t("A schema or type to validate the query content. Refer to the individual ")),a(r,{to:"/reference/config/models/"},{default:i(()=>e[14]||(e[14]=[t("model")])),_:1}),e[16]||(e[16]=t(" docs for type specific implementation."))])]),e[37]||(e[37]=l("tr",null,[l("td",null,"options.requests[].path"),l("td",null,[l("code",null,"string")]),l("td",null,"URL path of the HTTP request.")],-1)),e[38]||(e[38]=l("tr",null,[l("td",null,"options.requests[].responses"),l("td",null,[l("code",null,"object[]")]),l("td",null,"Options to configure typed validations for response fields.")],-1)),e[39]||(e[39]=l("tr",null,[l("td",null,"options.requests[].responses[].content"),l("td",null,[l("code",null,"TypeEnum"),t(" or "),l("code",null,"object")]),l("td",null,"Enforce validation for the response content.")],-1)),l("tr",null,[e[22]||(e[22]=l("td",null,"options.requests[].responses[].content.model*",-1)),e[23]||(e[23]=l("td",null,[l("code",null,"TypeEnum")],-1)),l("td",null,[e[20]||(e[20]=t("A schema or type to validate the response content. Refer to the individual ")),a(r,{to:"/reference/config/models/"},{default:i(()=>e[19]||(e[19]=[t("model")])),_:1}),e[21]||(e[21]=t(" docs for type specific implementation."))])]),e[40]||(e[40]=l("tr",null,[l("td",null,"options.requests[].responses[].content-type"),l("td",null,[l("code",null,"string[]")]),l("td",null,"Content type of the HTTP response.")],-1)),e[41]||(e[41]=l("tr",null,[l("td",null,"options.requests[].responses[].headers"),l("td",null,[l("code",null,"Map<string, TypeEnum>"),t(" or "),l("code",null,"Map<string, object>")]),l("td",null,"Enforce validation for response headers.")],-1)),l("tr",null,[e[27]||(e[27]=l("td",null,"options.requests[].responses[].headers.model*",-1)),e[28]||(e[28]=l("td",null,[l("code",null,"TypeEnum")],-1)),l("td",null,[e[25]||(e[25]=t("A schema or type to validate the headers content. Refer to the individual ")),a(r,{to:"/reference/config/models/"},{default:i(()=>e[24]||(e[24]=[t("model")])),_:1}),e[26]||(e[26]=t(" docs for type specific implementation."))])]),e[42]||(e[42]=l("tr",null,[l("td",null,"options.requests[].responses[].status"),l("td",null,[l("code",null,"integer"),t(" or "),l("code",null,"integer[]")]),l("td",null,"HTTP status code or codes for the response")],-1)),e[43]||(e[43]=l("tr",null,[l("td",null,"options.versions"),l("td",null,[l("code",null,"array"),t(" of "),l("code",null,"enum"),t(" [ "),l("code",null,"http/1.1"),t(", "),l("code",null,"h2"),t(" ]")]),l("td",null,[t("Supported protocol versions (default "),l("code",null,"http/1.1,h2"),t(").")])],-1)),e[44]||(e[44]=l("tr",null,[l("td",null,"options.overrides"),l("td",null,[l("code",null,"Map<string, string>")]),l("td",null,"Request header overrides.")],-1))])]),e[49]||(e[49]=l("h4",{id:"example",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#example"},[l("span",null,"Example")])],-1)),e[50]||(e[50]=l("p",null,[t("The "),l("code",null,"client"),t(" specific options.")],-1)),e[51]||(e[51]=l("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml","data-title":"yaml",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[l("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"options"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"  overrides"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"    custom-text"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"custom-value")])])]),l("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"})])],-1))]),tab1:i(({value:s,isActive:n})=>e[52]||(e[52]=[l("h3",{id:"routes",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#routes"},[l("span",null,"routes*")])],-1),l("blockquote",null,[l("p",null,[l("code",null,"array"),t(" of "),l("code",null,"object")])],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Property"),l("th",null,"Type"),l("th",null,"Description")])]),l("tbody",null,[l("tr",null,[l("td",null,"routes[].guarded"),l("td",null,[l("code",null,"Map<string, string[]>")]),l("td",null,"List of roles required by each named guard to authorize this route.")]),l("tr",null,[l("td",null,"routes[].when"),l("td",null,[l("code",null,"object[]")]),l("td",null,[t("List of conditions (any match) to match this route. Read more: "),l("a",{href:"/concepts/protocol.html#when-a-route-matches",target:"_blank",rel:"noopener noreferrer"},"When a route matches")])]),l("tr",null,[l("td",null,"routes[].when[].headers"),l("td",null,[l("code",null,"Map<string, string>")]),l("td",null,"Header name value pairs (all match).")]),l("tr",null,[l("td",null,"routes[].when[].path"),l("td",null,[l("code",null,"string")]),l("td",null,[t("Path with optional embedded parameter names, such as "),l("code",null,"/{path}"),t(".")])]),l("tr",null,[l("td",null,"routes[].exit"),l("td",null,[l("code",null,"string")]),l("td",null,"Next binding when following this route.")]),l("tr",null,[l("td",null,"routes[].with"),l("td",null,[l("code",null,"object")]),l("td",null,[t("HTTP parameters for matched route when "),l("code",null,"http"),t(" streams.")])]),l("tr",null,[l("td",null,"routes[].with.path*"),l("td",null,[l("code",null,"string")]),l("td",null,[t("Topic name, optionally referencing path parameter such as "),l("code",null,"${params.path}"),t(".")])]),l("tr",null,[l("td",null,"routes[].with.headers"),l("td",null,[l("code",null,"object")]),l("td",null,"Options for headers when adapting a route.")]),l("tr",null,[l("td",null,"routes[].with.headers.overrides"),l("td",null,[l("code",null,"Map<string, string>")]),l("td",null,"HTTP header name value pairs overrides.")]),l("tr",null,[l("td",null,"routes[].exit"),l("td",null,[l("code",null,"string")]),l("td",null,"Next binding when following this route.")])])],-1),l("h4",{id:"example-1",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#example-1"},[l("span",null,"Example")])],-1),l("p",null,[t("Conditional "),l("code",null,"http"),t(" specific routes.")],-1),l("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml","data-title":"yaml",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[l("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"routes"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"  - "),l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"when"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"      - "),l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"headers"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'          ":scheme"'),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"https")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'          ":authority"'),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"example.com:443")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"    exit"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"echo_server")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"    with"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"      headers"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"        overrides"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'          ":scheme"'),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"https")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#A31515","--shiki-dark":"#CE9178"}},'          ":authority"'),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"example.com:443")])])]),l("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"})])],-1)])),tab2:i(({value:s,isActive:n})=>e[53]||(e[53]=[l("h3",{id:"exit",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#exit"},[l("span",null,"exit")])],-1),l("blockquote",null,[l("p",null,[l("code",null,"string")])],-1),l("p",null,"Default exit binding when no conditional routes are viable.",-1),l("div",{class:"language-yaml","data-highlighter":"shiki","data-ext":"yaml","data-title":"yaml",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[l("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"exit"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},": "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"echo_server")])])])],-1)])),tab3:i(({value:s,isActive:n})=>e[54]||(e[54]=[l("h3",{id:"telemetry",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#telemetry"},[l("span",null,"telemetry")])],-1),l("blockquote",null,[l("p",null,[l("code",null,"object")])],-1),l("p",null,"Defines the desired telemetry for the binding.",-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Property"),l("th",null,"Type"),l("th",null,"Description")])]),l("tbody",null,[l("tr",null,[l("td",null,"metrics"),l("td",null,[l("code",null,"string[]")]),l("td",null,"Telemetry metrics to track.")])])],-1),l("h4",{id:"example-2",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#example-2"},[l("span",null,"Example")])],-1),l("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml","data-title":"yaml",style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#FFFFFF","--shiki-dark-bg":"#1E1E1E"}},[l("pre",{class:"shiki shiki-themes light-plus dark-plus vp-code"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"telemetry"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#800000","--shiki-dark":"#569CD6"}},"  metrics"),l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},":")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"    - "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"stream.*")]),t(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#000000","--shiki-dark":"#D4D4D4"}},"    - "),l("span",{style:{"--shiki-light":"#0000FF","--shiki-dark":"#CE9178"}},"http.*")])])]),l("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"}),l("div",{class:"line-number"})])],-1)])),_:1})])}const b=u(m,[["render",g],["__file","client.html.vue"]]),v=JSON.parse('{"path":"/concepts/protocol/http/client.html","title":"Client Binding","lang":"en-US","frontmatter":{"shortTitle":"Client","description":"Client Binding The http client binding receives inbound application streams and encodes each request as a network stream via HTTP/1.1 protocol. Note that the same network stream...","gitInclude":[".partials/client.yaml",".partials/client-options.md",".partials/http-routes.md","../.partials/exit.md","../.partials/telemetry-http.md"],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/concepts/protocol/http/client.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Client Binding"}],["meta",{"property":"og:description","content":"Client Binding The http client binding receives inbound application streams and encodes each request as a network stream via HTTP/1.1 protocol. Note that the same network stream..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Client Binding\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Configuration (* required)","slug":"configuration-required","link":"#configuration-required","children":[]}],"readingTime":{"minutes":0.27,"words":81},"filePathRelative":"concepts/protocol/http/client.md","autoDesc":true}');export{b as comp,v as data};
