import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as t,o as s}from"./app-DQ2AyMtK.js";const a={};function l(r,e){return s(),n("div",null,e[0]||(e[0]=[t(`<h1 id="string-model" tabindex="-1"><a class="header-anchor" href="#string-model"><span>string Model</span></a></h1><p>Defines a model to enforce validation for string data.</p><h2 id="configuration-required" tabindex="-1"><a class="header-anchor" href="#configuration-required"><span>Configuration (* required)</span></a></h2><h3 id="model-string" tabindex="-1"><a class="header-anchor" href="#model-string"><span>model: string</span></a></h3><blockquote><p><code>const</code></p></blockquote><p>Specifies the model is a <code>string</code>.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">string</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">encoding</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">utf_8</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">minLength</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">maxLength</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">100</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">pattern</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">^wait=\\d+$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="encoding" tabindex="-1"><a class="header-anchor" href="#encoding"><span>encoding</span></a></h3><blockquote><p><code>enum</code> [ <code>utf_8</code>, <code>utf_16</code> ]</p></blockquote><p>Define character encoding for unicode.</p><h3 id="minlength" tabindex="-1"><a class="header-anchor" href="#minlength"><span>minLength</span></a></h3><blockquote><p><code>integer</code> | Minimum: <code>1</code></p></blockquote><p>Define string minimum length.</p><h3 id="maxlength" tabindex="-1"><a class="header-anchor" href="#maxlength"><span>maxLength</span></a></h3><blockquote><p><code>integer</code> | Minimum: <code>1</code></p></blockquote><p>Define string maximum length.</p><h3 id="pattern" tabindex="-1"><a class="header-anchor" href="#pattern"><span>pattern</span></a></h3><blockquote><p><code>string</code></p></blockquote><p>Define string regex pattern.</p>`,19)]))}const c=i(a,[["render",l],["__file","string.html.vue"]]),h=JSON.parse('{"path":"/reference/config/models/string.html","title":"string Model","lang":"en-US","frontmatter":{"redirectFrom":"/reference/config/models/model-string.html","shortTitle":"string","category":["Models"],"tags":["string"],"description":"string Model Defines a model to enforce validation for string data. Configuration (* required) model: string const Specifies the model is a string. encoding enum [ utf_8, utf_16...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/models/string.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"string Model"}],["meta",{"property":"og:description","content":"string Model Defines a model to enforce validation for string data. Configuration (* required) model: string const Specifies the model is a string. encoding enum [ utf_8, utf_16..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"string"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"string Model\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Configuration (* required)","slug":"configuration-required","link":"#configuration-required","children":[{"level":3,"title":"model: string","slug":"model-string","link":"#model-string","children":[]},{"level":3,"title":"encoding","slug":"encoding","link":"#encoding","children":[]},{"level":3,"title":"minLength","slug":"minlength","link":"#minlength","children":[]},{"level":3,"title":"maxLength","slug":"maxlength","link":"#maxlength","children":[]},{"level":3,"title":"pattern","slug":"pattern","link":"#pattern","children":[]}]}],"readingTime":{"minutes":0.25,"words":76},"filePathRelative":"reference/config/models/string.md","autoDesc":true}');export{c as comp,h as data};
