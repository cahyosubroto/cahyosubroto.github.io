import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,b as s,d as r,e as l,f as h,r as c,o as p}from"./app-DQ2AyMtK.js";const o={};function d(k,e){const a=c("RouteLink");return p(),n("div",null,[e[3]||(e[3]=i("h1",{id:"create-server-certificate",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#create-server-certificate"},[i("span",null,"Create Server Certificate")])],-1)),e[4]||(e[4]=i("h2",{id:"create-the-certificate-authority",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#create-the-certificate-authority"},[i("span",null,"Create the Certificate Authority")])],-1)),i("p",null,[e[1]||(e[1]=s("Follow the ")),r(a,{to:"/solutions/how-tos/aws-services/create-certificate-authority-acm.html"},{default:l(()=>e[0]||(e[0]=[s("Create Certificate Authority")])),_:1}),e[2]||(e[2]=s(" guide with these parameters to create a new private certificate authority in AWS Certificate Manager."))]),e[5]||(e[5]=h(`<h3 id="distinguished-name" tabindex="-1"><a class="header-anchor" href="#distinguished-name"><span>Distinguished Name</span></a></h3><p>Common Name (CN): <code>Test CA</code></p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Note the ARN of the private certificate authority.</p></div><h2 id="generate-the-rsa-key" tabindex="-1"><a class="header-anchor" href="#generate-the-rsa-key"><span>Generate the RSA key</span></a></h2><p>We need to create a new key that will be used with the certificate, and store the key in <code>pkcs8</code> format. In this example we will be creating the key for a wildcard certificate with <code>*.aklivity.example.com</code> as the common name.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">openssl</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> genrsa</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -out</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> wildcard.aklivity.example.com.key.pem</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 4096</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">openssl</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> pkcs8</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -topk8</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -nocrypt</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -in</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> wildcard.aklivity.example.com.key.pem</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -out</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> wildcard.aklivity.example.com.pkcs8.pem</span></span></code></pre></div><h2 id="create-the-signing-request" tabindex="-1"><a class="header-anchor" href="#create-the-signing-request"><span>Create the signing request</span></a></h2><p>Next we need to create a certificate corresponding to the key, with metadata about the owner of the certificate and the common name. This is done by first creating a certificate signing request.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">openssl</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> req</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -new</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -key</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> wildcard.aklivity.example.com.key.pem</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -out</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> wildcard.aklivity.example.com.csr</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>You are about to be asked to enter information that will be incorporated</span></span>
<span class="line"><span>into your certificate request.</span></span>
<span class="line"><span>What you are about to enter is what is called a Distinguished Name or a DN.</span></span>
<span class="line"><span>There are quite a few fields but you can leave some blank</span></span>
<span class="line"><span>For some fields there will be a default value,</span></span>
<span class="line"><span>If you enter &#39;.&#39;, the field will be left blank.</span></span>
<span class="line"><span>-----</span></span>
<span class="line"><span>Country Name (2 letter code) []:US</span></span>
<span class="line"><span>State or Province Name (full name) []:California</span></span>
<span class="line"><span>Locality Name (eg, city) []:Palo Alto</span></span>
<span class="line"><span>Organization Name (eg, company) []:Aklivity</span></span>
<span class="line"><span>Organizational Unit Name (eg, section) []:Development</span></span>
<span class="line"><span>Common Name (eg, fully qualified host name) []:*.aklivity.example.com</span></span>
<span class="line"><span>Email Address []:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please enter the following &#39;extra&#39; attributes</span></span>
<span class="line"><span>to be sent with your certificate request</span></span>
<span class="line"><span>A challenge password []:</span></span>
<span class="line"><span>An optional company name []:</span></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>This creates the signing request in <code>wildcard.aklivity.example.com.csr</code>.</p></div><h2 id="issue-the-signed-certificate" tabindex="-1"><a class="header-anchor" href="#issue-the-signed-certificate"><span>Issue the signed certificate</span></a></h2><p>Now that the certificate signing request has been prepared, it can be used to issue a new certificate signed by your private certificate authority.</p><p>In this example, we issue the certificate to be valid for <code>365 days</code>. You should choose a validity period that best suits your specific use case.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">aws</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> acm-pca</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> issue-certificate</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--region </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">us-east-1</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--certificate-authority-arn &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">private-certificate-authority-ar</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">n&gt; </span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;">\\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--csr </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">fileb://wildcard.aklivity.example.com.csr</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--signing-algorithm </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&quot;SHA256WITHRSA&quot;</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--validity </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">Value=365,Type=&quot;DAYS&quot;</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--idempotency-token </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">1234</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This command returns the ARN of the newly signed certificate.</p><div class="language-json" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#9CDCFE;">  &quot;CertificateArn&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&quot;arn:aws:acm-pca:us-east-1:...:certificate-authority/.../certificate/...&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">}</span></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>Note the certificate ARN as we need to reference it later.</p></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>If you see the following error when attempting to run the command</p><p><code>An error occurred (UnrecognizedClientException) when calling the IssueCertificate operation: The security token included in the request is invalid</code></p><p>make sure that you have retrieved and set <a href="https://aws.amazon.com/blogs/security/aws-single-sign-on-now-enables-command-line-interface-access-for-aws-accounts-using-corporate-credentials/" target="_blank" rel="noopener noreferrer">your AWS credentials</a> for CLI use.</p></div><h2 id="store-the-encrypted-secret" tabindex="-1"><a class="header-anchor" href="#store-the-encrypted-secret"><span>Store the encrypted secret</span></a></h2><p>Now we need to create the secret value using the <code>pkcs8</code> encoded private key as the secret value and with secret tags <code>certificate-authority-arn</code> referencing the private certificate authority, and <code>certificate-arn</code> referencing the newly signed certificate.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">aws</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> secretsmanager</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> create-secret</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--region </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">us-east-1</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--name </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&quot;wildcard.aklivity.example.com&quot;</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--secret-string </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">file://wildcard.aklivity.example.com.pkcs8.pem</span><span style="--shiki-light:#EE0000;--shiki-dark:#D7BA7D;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">--tags </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&#39;[{&quot;Key&quot;:&quot;certificate-authority-arn&quot;, &quot;Value&quot;:&quot;arn:aws:acm-pca:us-east-1:...:certificate-authority/...&quot;}, {&quot;Key&quot;:&quot;certificate-arn&quot;, &quot;Value&quot;:&quot;arn:aws:acm-pca:us-east-1:...:certificate-authority/.../certificate/...&quot;}]&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This secret can now be used by the Zilla Plus for Amazon MSK to resolve private keys and their corresponding signed certificates to support custom TLS bootstrap server names.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Note the ARN of the newly created secret for the signed certificate&#39;s private key.</p></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>In the example above, private certificates are valid for <code>365 days</code>, so you will need to renew the certificate and update the <code>secret-string</code> value and <code>certificate-arn</code> tag accordingly before expiration. The latest secret value and corresponding private certificate are obtained automatically upon restarting the Zilla proxy instance.</p></div>`,25))])}const y=t(o,[["render",d],["__file","create-server-certificate-acm.html.vue"]]),m=JSON.parse('{"path":"/solutions/how-tos/aws-services/create-server-certificate-acm.html","title":"Create Server Certificate","lang":"en-US","frontmatter":{"description":"Create a server certificate signed by a private certificate authority using AWS Certificate Manager.","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/solutions/how-tos/aws-services/create-server-certificate-acm.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Create Server Certificate"}],["meta",{"property":"og:description","content":"Create a server certificate signed by a private certificate authority using AWS Certificate Manager."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Create Server Certificate\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Create the Certificate Authority","slug":"create-the-certificate-authority","link":"#create-the-certificate-authority","children":[{"level":3,"title":"Distinguished Name","slug":"distinguished-name","link":"#distinguished-name","children":[]}]},{"level":2,"title":"Generate the RSA key","slug":"generate-the-rsa-key","link":"#generate-the-rsa-key","children":[]},{"level":2,"title":"Create the signing request","slug":"create-the-signing-request","link":"#create-the-signing-request","children":[]},{"level":2,"title":"Issue the signed certificate","slug":"issue-the-signed-certificate","link":"#issue-the-signed-certificate","children":[]},{"level":2,"title":"Store the encrypted secret","slug":"store-the-encrypted-secret","link":"#store-the-encrypted-secret","children":[]}],"readingTime":{"minutes":2.23,"words":669},"filePathRelative":"solutions/how-tos/aws-services/create-server-certificate-acm.md"}');export{y as comp,m as data};
