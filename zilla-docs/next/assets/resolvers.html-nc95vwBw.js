import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,o as i}from"./app-BNYstFbe.js";const n={};function r(l,e){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="resolvers" tabindex="-1"><a class="header-anchor" href="#resolvers"><span>Resolvers</span></a></h1><p>Resolvers are a variable syntax for executing Zilla runtime functions that insert dynamic values into the zilla.yaml. Validation occurs before and after resolvers have been converted.</p><div class="hint-container note"><p class="hint-container-title">Functions</p><ul><li><a href="#environment-variables">Environment Variables</a></li><li><a href="#aws-secrets-manager">AWS Secrets Manager</a></li></ul></div><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h2><h3 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables"><span>Environment Variables</span></a></h3><p>The <code>env</code> resolver will read the specified environment variable from the host.</p><div class="language-text" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>${{ env.(Env_Var_Name) }}</span></span></code></pre></div><h3 id="aws-secrets-manager" tabindex="-1"><a class="header-anchor" href="#aws-secrets-manager"><span>AWS Secrets Manager</span></a></h3><p>The <code>aws.secrets</code> resolver can fetch an AWS Secrets Manager secret by its name (also called secretId) or its ARN.</p><div class="language-text" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>${{ aws.secrets.(Secret_Name) }}</span></span>\n<span class="line"><span>${{ aws.secrets.(Secret_ARN) }}</span></span></code></pre></div><p>If the secret is a key/value or JSON object this resolver can fetch individual properties by appending a <code>#</code> with the property name.</p><div class="language-text" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>${{ aws.secrets.(Secret_Name)#(JSON_Property_Name) }}</span></span>\n<span class="line"><span>${{ aws.secrets.(Secret_ARN)#(JSON_Property_Name) }}</span></span></code></pre></div>',12)]))}const h=a(n,[["render",r],["__file","resolvers.html.vue"]]),p=JSON.parse('{"path":"/reference/config/resolvers.html","title":"Resolvers","lang":"en-US","frontmatter":{"description":"A variable syntax for inserting values into the zilla.yaml","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/resolvers.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Resolvers"}],["meta",{"property":"og:description","content":"A variable syntax for inserting values into the zilla.yaml"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Resolvers\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[{"level":3,"title":"Environment Variables","slug":"environment-variables","link":"#environment-variables","children":[]},{"level":3,"title":"AWS Secrets Manager","slug":"aws-secrets-manager","link":"#aws-secrets-manager","children":[]}]}],"readingTime":{"minutes":0.44,"words":132},"filePathRelative":"reference/config/resolvers.md"}');export{h as comp,p as data};
