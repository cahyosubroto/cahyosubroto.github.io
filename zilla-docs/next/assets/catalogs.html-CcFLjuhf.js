import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as s,b as a,d as t,e as l,f as r,r as p,o as d}from"./app-BNYstFbe.js";const g={};function h(m,e){const i=p("RouteLink");return d(),o("div",null,[e[21]||(e[21]=s("h1",{id:"catalogs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#catalogs"},[s("span",null,"Catalogs")])],-1)),s("p",null,[e[1]||(e[1]=a("Each configured ")),t(i,{to:"/reference/config/overview.html#catalogs"},{default:l(()=>e[0]||(e[0]=[s("code",null,"catalog",-1)])),_:1}),e[2]||(e[2]=a(" represents a resource for referencing versioned assets. Catalogs make configuring Zilla more agnostic to specific API and Model design. A catalog provides Zilla bindings with schemas, specs, and other files needed to implement the binding. For example, schema models are used to validate messages brokered by Zilla."))]),e[22]||(e[22]=r(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">---</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">zilla-namespace</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">catalogs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  host_filesystem</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">filesystem</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      subjects</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        petstore</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">petstore.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="local-catalogs" tabindex="-1"><a class="header-anchor" href="#local-catalogs"><span>Local Catalogs</span></a></h2>`,2)),s("p",null,[e[5]||(e[5]=a("The simplest catalogs allow Zilla to access resources directly. The ")),t(i,{to:"/reference/config/catalogs/filesystem.html"},{default:l(()=>e[3]||(e[3]=[a("filesystem")])),_:1}),e[6]||(e[6]=a(" catalog will look for resources on the host filesystem. To embed a resource directly into the Zilla config yaml an ")),t(i,{to:"/reference/config/catalogs/inline.html"},{default:l(()=>e[4]||(e[4]=[a("inline")])),_:1}),e[7]||(e[7]=a(" catalog can be used to define any text based resource."))]),s("blockquote",null,[s("p",null,[t(i,{to:"/how-tos/catalogs/#local-catalogs"},{default:l(()=>e[8]||(e[8]=[a("Local Catalogs Guide")])),_:1}),e[9]||(e[9]=a(" | ")),e[10]||(e[10]=s("a",{href:"https://github.com/aklivity/zilla-examples/tree/main/http.proxy.schema.inline",target:"_blank",rel:"noopener noreferrer"},"http.proxy.schema.inline example",-1))])]),e[23]||(e[23]=s("h2",{id:"remote-catalogs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#remote-catalogs"},[s("span",null,"Remote Catalogs")])],-1)),s("p",null,[e[13]||(e[13]=a("Zilla can reference remote configs stored in third-party services like Schema Registry. The ")),t(i,{to:"/reference/config/catalogs/schema-registry.html"},{default:l(()=>e[11]||(e[11]=[a("schema-registry")])),_:1}),e[14]||(e[14]=a(" and ")),t(i,{to:"/reference/config/catalogs/apicurio-registry.html"},{default:l(()=>e[12]||(e[12]=[a("apicurio-registry")])),_:1}),e[15]||(e[15]=a(" catalogs allow zilla to interact with those services through their admin APIs."))]),s("blockquote",null,[s("p",null,[t(i,{to:"/how-tos/catalogs/#remote-catalogs"},{default:l(()=>e[16]||(e[16]=[a("Remote Catalogs Guide")])),_:1}),e[17]||(e[17]=a(" | ")),e[18]||(e[18]=s("a",{href:"https://github.com/aklivity/zilla-demos/tree/main/petstore",target:"_blank",rel:"noopener noreferrer"},"Apicurio in the Petstore REST Demo",-1)),e[19]||(e[19]=a(" | ")),e[20]||(e[20]=s("a",{href:"https://github.com/aklivity/zilla-examples/tree/main/http.kafka.karapace",target:"_blank",rel:"noopener noreferrer"},"http.kafka.karapace example",-1))])])])}const u=n(g,[["render",h],["__file","catalogs.html.vue"]]),f=JSON.parse('{"path":"/concepts/catalogs.html","title":"Catalogs","lang":"en-US","frontmatter":{"description":"Catalogs Each configured represents a resource for referencing versioned assets. Catalogs make configuring Zilla more agnostic to specific API and Model design. A catalog provid...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/concepts/catalogs.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Catalogs"}],["meta",{"property":"og:description","content":"Catalogs Each configured represents a resource for referencing versioned assets. Catalogs make configuring Zilla more agnostic to specific API and Model design. A catalog provid..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Catalogs\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Local Catalogs","slug":"local-catalogs","link":"#local-catalogs","children":[]},{"level":2,"title":"Remote Catalogs","slug":"remote-catalogs","link":"#remote-catalogs","children":[]}],"readingTime":{"minutes":0.61,"words":182},"filePathRelative":"concepts/catalogs.md","autoDesc":true}');export{u as comp,f as data};
