import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as i,b as a,d as t,e as h,f as k,r as p,o as d}from"./app-BNYstFbe.js";const r={};function c(g,s){const n=p("RouteLink");return d(),l("div",null,[s[15]||(s[15]=i("h1",{id:"structured-message-data",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#structured-message-data"},[i("span",null,"Structured Message data")])],-1)),s[16]||(s[16]=i("p",null,"Adding structured types to the message data streams in Zilla.",-1)),s[17]||(s[17]=i("h2",{id:"adding-models-structure-to-kafka-messages",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#adding-models-structure-to-kafka-messages"},[i("span",null,"Adding models structure to Kafka messages")])],-1)),i("p",null,[s[1]||(s[1]=a("The ")),s[2]||(s[2]=i("code",null,"kafka",-1)),s[3]||(s[3]=a()),s[4]||(s[4]=i("code",null,"cache_client",-1)),s[5]||(s[5]=a(" and ")),s[6]||(s[6]=i("code",null,"cache_server",-1)),s[7]||(s[7]=a(" bindings are responsible for interacting with the messages stored on Kafka topics. This is where Zilla can implement any structured type definitions. The schema for the message can come from the Kafka topic's schema definition using the topic ")),s[8]||(s[8]=i("code",null,"strategy",-1)),s[9]||(s[9]=a(" or be a reference to a schema's ")),s[10]||(s[10]=i("code",null,"subject",-1)),s[11]||(s[11]=a(" or ")),s[12]||(s[12]=i("code",null,"id",-1)),s[13]||(s[13]=a(". The ")),t(n,{to:"/how-tos/catalogs/"},{default:h(()=>s[0]||(s[0]=[a("catalog")])),_:1}),s[14]||(s[14]=a(" definition will determine which methods are available when referencing schemas."))]),s[18]||(s[18]=k(`<h3 id="validating-message-keys" tabindex="-1"><a class="header-anchor" href="#validating-message-keys"><span>Validating message keys</span></a></h3><p>The message key for a topic can be set to any primitive model type and Zilla will validate the key when a message is Produced on a topic.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  north_kafka_cache_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">string</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="validating-a-new-message" tabindex="-1"><a class="header-anchor" href="#validating-a-new-message"><span>Validating a new message</span></a></h3><p>The <code>kafka cache_client</code> binding can parse the message value, or body of the message, that is Produced on a topic.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  north_kafka_cache_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          value</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">avro</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">              my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">strategy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enforcing-a-schema-on-fetch" tabindex="-1"><a class="header-anchor" href="#enforcing-a-schema-on-fetch"><span>Enforcing a schema on Fetch</span></a></h3><p>The <code>kafka cache_server</code> can enforce a schema on messages Fetched from a topic. This will prevent any messages that are produced on a Kafka topic from getting consumed by a client if that messages doesn&#39;t match to the specified schema.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  south_kafka_cache_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      bootstrap</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          value</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">avro</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">              my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">strategy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="expose-a-different-model-format" tabindex="-1"><a class="header-anchor" href="#expose-a-different-model-format"><span>Expose a different model format</span></a></h3><p>The <code>kafka cache_client</code> can read the <code>view</code> model and translate it into the specified <code>model</code> for when a message is produced on the Kafka topic. Then the <code>kafka cache_server</code> can read the <code>model</code> from the topic and translate it into the <code>view</code> model.</p><p>In this case the <code>view</code> model that clients interact with needs to be a JSON object but the topic <code>model</code> is a serialize Avro object.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  north_kafka_cache_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          value</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">avro</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            view</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">json</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">              my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">strategy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">south_kafka_cache_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  south_kafka_cache_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">cache_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      bootstrap</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      topics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my-kafka-topic</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          value</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">avro</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            view</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">json</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">            catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">              my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">                - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">strategy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13))])}const m=e(r,[["render",c],["__file","index.html.vue"]]),y=JSON.parse('{"path":"/how-tos/models/","title":"Structured Message data","lang":"en-US","frontmatter":{"description":"Structured Message data Adding structured types to the message data streams in Zilla. Adding models structure to Kafka messages The kafka cache_client and cache_server bindings ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/how-tos/models/"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Structured Message data"}],["meta",{"property":"og:description","content":"Structured Message data Adding structured types to the message data streams in Zilla. Adding models structure to Kafka messages The kafka cache_client and cache_server bindings ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Structured Message data\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Adding models structure to Kafka messages","slug":"adding-models-structure-to-kafka-messages","link":"#adding-models-structure-to-kafka-messages","children":[{"level":3,"title":"Validating message keys","slug":"validating-message-keys","link":"#validating-message-keys","children":[]},{"level":3,"title":"Validating a new message","slug":"validating-a-new-message","link":"#validating-a-new-message","children":[]},{"level":3,"title":"Enforcing a schema on Fetch","slug":"enforcing-a-schema-on-fetch","link":"#enforcing-a-schema-on-fetch","children":[]},{"level":3,"title":"Expose a different model format","slug":"expose-a-different-model-format","link":"#expose-a-different-model-format","children":[]}]}],"readingTime":{"minutes":1.22,"words":367},"filePathRelative":"how-tos/models/index.md","autoDesc":true}');export{m as comp,y as data};
