import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a,b as s,d as t,e as n,f as e,g as h,r as d,o as k}from"./app-CKeM1Wjf.js";const o={},g={class:"hint-container important"},c={class:"hint-container important"};function u(b,i){const l=d("RouteLink");return k(),r("div",null,[i[22]||(i[22]=a("h1",{id:"zilla-runtime-cli",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#zilla-runtime-cli"},[a("span",null,"Zilla Runtime CLI")])],-1)),a("p",null,[i[1]||(i[1]=s("The Zilla Runtime command line interface uses the ")),t(l,{to:"/reference/config/overview.html"},{default:n(()=>i[0]||(i[0]=[s("Zilla Runtime Configuration")])),_:1}),i[2]||(i[2]=s(" to control and observe the Zilla runtime."))]),i[23]||(i[23]=e('<div class="hint-container note"><p class="hint-container-title">Commands</p><ul><li><a href="#zilla-dump">zilla dump</a><ul><li><a href="#a-affinity-affinity">-a --affinity <code>&lt;affinity&gt;</code></a></li><li><a href="#b-bindings-bindings">-b --bindings <code>&lt;bindings&gt;</code></a></li><li><a href="#i-install-plugin-directory">-i --install <code>&lt;plugin-directory&gt;</code></a></li><li><a href="#v-verbose">-v --verbose</a></li><li><a href="#w-write-output">-w --write <code>&lt;output&gt;</code></a></li></ul></li><li><a href="#zilla-help">zilla help</a></li><li><a href="#zilla-version">zilla version</a></li><li><a href="#zilla-metrics">zilla metrics</a><ul><li><a href="#namespace-namespace">--namespace <code>&lt;namespace&gt;</code></a></li></ul></li><li><a href="#zilla-start">zilla start</a><ul><li><a href="#c-config">-c --config</a></li><li><a href="#e-exception-traces">-e --exception-traces</a></li><li><a href="#p-properties">-p --properties</a></li><li><a href="#p-property">-P --property</a></li><li><a href="#v-verbose-1">-v --verbose</a></li><li><a href="#w-workers">-w --workers</a></li></ul></li><li><a href="#zilla-stop">zilla stop</a></li><li><a href="#zilla-tune">zilla tune</a></li></ul></div><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2><h3 id="zilla-dump" tabindex="-1"><a class="header-anchor" href="#zilla-dump"><span>zilla dump</span></a></h3>',3)),a("div",g,[i[8]||(i[8]=a("p",{class:"hint-container-title"},"Feature is in Incubator",-1)),a("p",null,[i[4]||(i[4]=s("Read how to ")),t(l,{to:"/how-tos/deploy-operate/#enable-incubator-features"},{default:n(()=>i[3]||(i[3]=[s("enable incubator features")])),_:1}),i[5]||(i[5]=s(". Star and watch the ")),i[6]||(i[6]=a("a",{href:"https://github.com/aklivity/zilla/releases",target:"_blank",rel:"noopener noreferrer"},"Zilla repo",-1)),i[7]||(i[7]=s(" for new releases!"))])]),i[24]||(i[24]=e(`<p>The <code>zilla dump</code> command creates a <code>pcap</code> file that can be opened in Wireshark. Using the Zilla dissector plugin, Wireshark shows detailed information about the internal state of the current Zilla instance.</p><h4 id="a-affinity-affinity" tabindex="-1"><a class="header-anchor" href="#a-affinity-affinity"><span>-a --affinity <code>&lt;affinity&gt;</code></span></a></h4><p>Only dump the frames that match the specified affinity mask.</p><h4 id="b-bindings-bindings" tabindex="-1"><a class="header-anchor" href="#b-bindings-bindings"><span>-b --bindings <code>&lt;bindings&gt;</code></span></a></h4><p>Only dump the frames for the specified bindings.</p><h4 id="i-install-plugin-directory" tabindex="-1"><a class="header-anchor" href="#i-install-plugin-directory"><span>-i --install <code>&lt;plugin-directory&gt;</code></span></a></h4><p>Install the dissector plugin <code>zilla.lua</code> to the plugin directory of Wireshark. This is only necessary if you run the <code>dump</code> command for the first time or if you want to update the plugin to the current version.</p><p>To find the Wireshark plugin directory navigate the menu: About Wireshark -&gt; Folders -&gt; Personal Lua Plugins; or use this command:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">tshark</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -G</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> folders</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> | </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">grep</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> &quot;Personal Lua Plugins&quot;</span></span></code></pre></div><p>To find out the plugin version navigate the menu: About Wireshark -&gt; Plugins -&gt; search: zilla; or use this command:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">tshark</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -G</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> plugins</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> | </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">grep</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zilla</span></span></code></pre></div><p>You may need to reload Lua plugins from the menu: Analyze -&gt; Reload Lua Plugins or with the keyboard shortcut (Command+Shift+L or Ctrl+Shift+L).</p><p>Example:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> dump</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -v</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -w</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zilla.pcap</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -i</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> ~/.local/lib/wireshark/plugins</span></span></code></pre></div><h4 id="v-verbose" tabindex="-1"><a class="header-anchor" href="#v-verbose"><span>-v --verbose</span></a></h4><p>Show verbose output</p><h4 id="w-write-output" tabindex="-1"><a class="header-anchor" href="#w-write-output"><span>-w --write <code>&lt;output&gt;</code></span></a></h4><p>Write the <code>pcap</code> output to this file.</p><p>Example:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> dump</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -v</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -w</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zilla.pcap</span></span></code></pre></div><h3 id="zilla-help" tabindex="-1"><a class="header-anchor" href="#zilla-help"><span>zilla help</span></a></h3><p>The <code>zilla help</code> command shows help information about available commands, or more information for a specific command.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> help</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [command]</span></span></code></pre></div><p>Examples:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> help</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span></span></code></pre></div><h3 id="zilla-version" tabindex="-1"><a class="header-anchor" href="#zilla-version"><span>zilla version</span></a></h3><p>The <code>zilla version</code> command prints the version information of Zilla.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> version</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>zilla version 0.9.85</span></span></code></pre></div><h3 id="zilla-metrics" tabindex="-1"><a class="header-anchor" href="#zilla-metrics"><span>zilla metrics</span></a></h3><p>The <code>zilla metrics</code> command provides metrics for each binding in the configuration.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> metrics</span></span></code></pre></div><p>Optionally specify a binding name to output metrics for that binding only.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> metrics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [binding-name]</span></span></code></pre></div><h4 id="namespace-namespace" tabindex="-1"><a class="header-anchor" href="#namespace-namespace"><span>--namespace <code>&lt;namespace&gt;</code></span></a></h4><p>Filters bindings by namespace</p><p>Examples:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> metrics</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> echo_server</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>namespace    binding         metric                    value</span></span>
<span class="line"><span>example      echo_server    stream.opens.received        24</span></span>
<span class="line"><span>example      echo_server    stream.opens.sent            24</span></span>
<span class="line"><span>example      echo_server    stream.closes.received       24</span></span>
<span class="line"><span>example      echo_server    stream.closes.sent           24</span></span>
<span class="line"><span>example      echo_server    stream.data.received         13</span></span>
<span class="line"><span>example      echo_server    stream.data.sent             13</span></span>
<span class="line"><span>example      echo_server    stream.errors.received        0</span></span>
<span class="line"><span>example      echo_server    stream.errors.sent            0</span></span></code></pre></div><h3 id="zilla-start" tabindex="-1"><a class="header-anchor" href="#zilla-start"><span>zilla start</span></a></h3>`,40)),a("p",null,[i[10]||(i[10]=s("The ")),i[11]||(i[11]=a("code",null,"zilla start",-1)),i[12]||(i[12]=s(" command resolves the ")),t(l,{to:"/reference/config/overview.html"},{default:n(()=>i[9]||(i[9]=[s("Zilla Runtime Configuration")])),_:1}),i[13]||(i[13]=s(" in a ")),i[14]||(i[14]=a("code",null,"zilla.yaml",-1)),i[15]||(i[15]=s(" to start the runtime engine."))]),i[25]||(i[25]=e(`<div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -ve</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>name: example</span></span>
<span class="line"><span>bindings:</span></span>
<span class="line"><span>  tcp:</span></span>
<span class="line"><span>    type: tcp</span></span>
<span class="line"><span>    kind: server</span></span>
<span class="line"><span>    options:</span></span>
<span class="line"><span>      host: 0.0.0.0</span></span>
<span class="line"><span>      port:</span></span>
<span class="line"><span>      - 12345</span></span>
<span class="line"><span>      - 12346</span></span>
<span class="line"><span>    exit: echo</span></span>
<span class="line"><span>  echo:</span></span>
<span class="line"><span>    type: echo</span></span>
<span class="line"><span>    kind: server</span></span>
<span class="line"><span>started</span></span></code></pre></div><h4 id="c-config" tabindex="-1"><a class="header-anchor" href="#c-config"><span>-c --config</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Set the path to the local <code>zilla.yaml</code> configuration file or remote URI.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -c</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> ./path/to/zilla.yaml</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -c</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> http://example.com/zilla.yaml</span></span></code></pre></div><h4 id="e-exception-traces" tabindex="-1"><a class="header-anchor" href="#e-exception-traces"><span>-e --exception-traces</span></a></h4><blockquote><p><code>flag</code></p></blockquote><p>Log exception traces to <code>stdout</code>.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -e</span></span></code></pre></div><h4 id="p-properties" tabindex="-1"><a class="header-anchor" href="#p-properties"><span>-p --properties</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Set Zilla properties via a file.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -p</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> /path/to/zilla.properties</span></span></code></pre></div><h4 id="p-property" tabindex="-1"><a class="header-anchor" href="#p-property"><span>-P --property</span></a></h4><blockquote><p><code>name=value</code></p></blockquote><p>Set individual Zilla properties.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -P</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zilla.engine.prop=value</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -P</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> zilla.other.thing=value</span></span></code></pre></div>`,19)),h(" markdownlint-disable MD024 "),i[26]||(i[26]=e('<h4 id="v-verbose-1" tabindex="-1"><a class="header-anchor" href="#v-verbose-1"><span>-v --verbose</span></a></h4><blockquote><p><code>flag</code></p></blockquote><p>Log verbose output to <code>stdout</code>.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -v</span></span></code></pre></div>',4)),h(" markdownlint-enable MD024 "),i[27]||(i[27]=e('<h4 id="w-workers" tabindex="-1"><a class="header-anchor" href="#w-workers"><span>-w --workers</span></a></h4><blockquote><p><code>integer</code> | Default: CPU cores</p></blockquote><p>Set the Worker count in Zilla. Defaults to the number of CPU cores available.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> start</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> -w</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 2</span></span></code></pre></div><h3 id="zilla-stop" tabindex="-1"><a class="header-anchor" href="#zilla-stop"><span>zilla stop</span></a></h3><p>The <code>zilla stop</code> command signals the runtime engine to stop.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> stop</span></span></code></pre></div><blockquote><p>stopped</p></blockquote><h3 id="zilla-tune" tabindex="-1"><a class="header-anchor" href="#zilla-tune"><span>zilla tune</span></a></h3>',9)),a("div",c,[i[21]||(i[21]=a("p",{class:"hint-container-title"},"Feature is in Incubator",-1)),a("p",null,[i[17]||(i[17]=s("Read how to ")),t(l,{to:"/how-tos/deploy-operate/#enable-incubator-features"},{default:n(()=>i[16]||(i[16]=[s("enable incubator features")])),_:1}),i[18]||(i[18]=s(". Star and watch the ")),i[19]||(i[19]=a("a",{href:"https://github.com/aklivity/zilla/releases",target:"_blank",rel:"noopener noreferrer"},"Zilla repo",-1)),i[20]||(i[20]=s(" for new releases!"))])]),i[28]||(i[28]=e(`<p>The <code>zilla tune</code> command tunes the mapping from runtime engine workers to bindings.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> tune</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [NAME=VALUE]</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> tune</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>xxxx  example.tcp</span></span>
<span class="line"><span>xxxx  example.echo</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> tune</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> example.echo=</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">2</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>..x.  example.echo</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">./zilla</span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;"> tune</span></span></code></pre></div><div class="language-output" data-highlighter="shiki" data-ext="output" data-title="output" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span>xxxx  example.tcp</span></span>
<span class="line"><span>.x..  example.echo</span></span></code></pre></div>`,8))])}const v=p(o,[["render",u],["__file","zilla-cli.html.vue"]]),y=JSON.parse('{"path":"/reference/config/zilla-cli.html","title":"Zilla Runtime CLI","lang":"en-US","frontmatter":{"category":["CLI"],"description":"The command line interface to control the Zilla runtime.","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/zilla-cli.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Zilla Runtime CLI"}],["meta",{"property":"og:description","content":"The command line interface to control the Zilla runtime."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zilla Runtime CLI\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[{"level":3,"title":"zilla dump","slug":"zilla-dump","link":"#zilla-dump","children":[{"level":4,"title":"-a --affinity <affinity>","slug":"a-affinity-affinity","link":"#a-affinity-affinity","children":[]},{"level":4,"title":"-b --bindings <bindings>","slug":"b-bindings-bindings","link":"#b-bindings-bindings","children":[]},{"level":4,"title":"-i --install <plugin-directory>","slug":"i-install-plugin-directory","link":"#i-install-plugin-directory","children":[]},{"level":4,"title":"-v --verbose","slug":"v-verbose","link":"#v-verbose","children":[]},{"level":4,"title":"-w --write <output>","slug":"w-write-output","link":"#w-write-output","children":[]}]},{"level":3,"title":"zilla help","slug":"zilla-help","link":"#zilla-help","children":[]},{"level":3,"title":"zilla version","slug":"zilla-version","link":"#zilla-version","children":[]},{"level":3,"title":"zilla metrics","slug":"zilla-metrics","link":"#zilla-metrics","children":[{"level":4,"title":"--namespace <namespace>","slug":"namespace-namespace","link":"#namespace-namespace","children":[]}]},{"level":3,"title":"zilla start","slug":"zilla-start","link":"#zilla-start","children":[{"level":4,"title":"-c --config","slug":"c-config","link":"#c-config","children":[]},{"level":4,"title":"-e --exception-traces","slug":"e-exception-traces","link":"#e-exception-traces","children":[]},{"level":4,"title":"-p --properties","slug":"p-properties","link":"#p-properties","children":[]},{"level":4,"title":"-P --property","slug":"p-property","link":"#p-property","children":[]},{"level":4,"title":"-v --verbose","slug":"v-verbose-1","link":"#v-verbose-1","children":[]},{"level":4,"title":"-w --workers","slug":"w-workers","link":"#w-workers","children":[]}]},{"level":3,"title":"zilla stop","slug":"zilla-stop","link":"#zilla-stop","children":[]},{"level":3,"title":"zilla tune","slug":"zilla-tune","link":"#zilla-tune","children":[]}]}],"readingTime":{"minutes":2.54,"words":761},"filePathRelative":"reference/config/zilla-cli.md"}');export{v as comp,y as data};
