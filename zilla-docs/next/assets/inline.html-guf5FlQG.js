import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as n,o as a}from"./app-2pbKPq8C.js";const t={};function l(o,i){return a(),e("div",null,i[0]||(i[0]=[n(`<h1 id="inline-catalog" tabindex="-1"><a class="header-anchor" href="#inline-catalog"><span>inline Catalog</span></a></h1><p>Defines a catalog with schemas to enforce validation. The schemas are defined inline with the other properties.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">inline</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    subjects</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      items-snapshots</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        schema</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">|</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">          {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">            &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">            &quot;properties&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">              &quot;id&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">                &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">              },</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">              &quot;status&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">                &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">              }</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">            },</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">            &quot;required&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">              &quot;id&quot;,</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">              &quot;status&quot;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">            ]</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">          }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-required" tabindex="-1"><a class="header-anchor" href="#configuration-required"><span>Configuration (* required)</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The <code>inline</code> specific options.</p><h4 id="options-subjects" tabindex="-1"><a class="header-anchor" href="#options-subjects"><span>options.subjects</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Unique identifier for schema categorization in the registry.</p><h4 id="subjects-schema" tabindex="-1"><a class="header-anchor" href="#subjects-schema"><span>subjects.schema*</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Definition specifying data structure and format in detail.</p><h4 id="subjects-version" tabindex="-1"><a class="header-anchor" href="#subjects-version"><span>subjects.version</span></a></h4><blockquote><p><code>string</code> | Default: <code>latest</code></p></blockquote><p>Specific iteration or version of a registered schema.</p>`,16)]))}const c=s(t,[["render",l],["__file","inline.html.vue"]]),h=JSON.parse('{"path":"/reference/config/catalogs/inline.html","title":"inline Catalog","lang":"en-US","frontmatter":{"redirectFrom":"/reference/config/catalogs/catalog-inline.html","shortTitle":"inline","category":["Catalog"],"tags":["inline"],"description":"inline Catalog Defines a catalog with schemas to enforce validation. The schemas are defined inline with the other properties. Configuration (* required) options object The inli...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/catalogs/inline.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"inline Catalog"}],["meta",{"property":"og:description","content":"inline Catalog Defines a catalog with schemas to enforce validation. The schemas are defined inline with the other properties. Configuration (* required) options object The inli..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"inline"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"inline Catalog\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Configuration (* required)","slug":"configuration-required","link":"#configuration-required","children":[{"level":3,"title":"options","slug":"options","link":"#options","children":[{"level":4,"title":"options.subjects","slug":"options-subjects","link":"#options-subjects","children":[]},{"level":4,"title":"subjects.schema*","slug":"subjects-schema","link":"#subjects-schema","children":[]},{"level":4,"title":"subjects.version","slug":"subjects-version","link":"#subjects-version","children":[]}]}]}],"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"reference/config/catalogs/inline.md","autoDesc":true}');export{c as comp,h as data};
