import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as e,b as i,d,e as o,f as l,r,o as k}from"./app-DWA4uJ8g.js";const p={};function h(c,s){const a=r("RouteLink");return k(),t("div",null,[s[1]||(s[1]=e("h1",{id:"sse-kafka-binding",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#sse-kafka-binding"},[e("span",null,"sse-kafka Binding")])],-1)),s[2]||(s[2]=e("p",null,[i("Defines a binding with "),e("code",null,"sse-kafka"),i(" support, with "),e("code",null,"proxy"),i(" behavior.")],-1)),s[3]||(s[3]=e("h2",{id:"proxy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#proxy"},[e("span",null,"proxy")])],-1)),e("blockquote",null,[e("p",null,[d(a,{to:"/reference/config/bindings/sse-kafka/proxy.html"},{default:o(()=>s[0]||(s[0]=[i("Full config")])),_:1})])]),s[4]||(s[4]=l(`<p>The <code>proxy</code> kind <code>sse-kafka</code> binding adapts <code>sse</code> data streams into <code>kafka</code> data streams, so that <code>kafka</code> messages can be delivered to <code>sse</code> clients.</p><p>Filtering can be performed by <code>kafka</code> message key, message headers, or a combination of both message key and headers, extracting the parameter values from the inbound <code>sse</code> path.</p><p>Progress across <code>kafka</code> topic partitions is conveyed to the <code>sse</code> client via event <code>id</code> and when the stream is implicitly paused during <code>sse</code> client reconnect, the <code>last-event-id</code> header in the <code>sse</code> reconnect request contains the last received event <code>id</code> value, allowing the <code>sse</code> stream to resume reliable message delivery automatically.</p><p>The event <code>id</code> can be configured to include the message <code>key</code> and <code>etag</code> of each message, avoiding the need to duplicate the key in the message body and making it suitable for integration with <code>http-kafka</code> binding&#39;s use of <code>etag</code> for conditional <code>if-match</code> operations.</p><p>When a <code>kafka</code> tombstone (<code>null</code> value) message is received by the <code>sse-kafka</code> binding, it delivers a <code>delete</code> event to the <code>sse</code> client. This informs the client which specific message has been deleted by observing the message key from the <code>sse</code> <code>delete</code> event <code>id</code>.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">sse_kafka_proxy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">sse-kafka</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">proxy</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">/items</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">kafka_cache_client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        topic</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">items-snapshots</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        event</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">&#39;[&quot;\${base64(key)}&quot;,&quot;\${etag}&quot;]&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const m=n(p,[["render",h],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/reference/config/bindings/sse-kafka/","title":"sse-kafka Binding","lang":"en-US","frontmatter":{"redirectFrom":"/reference/config/bindings/binding-sse-kafka.html","dir":{"collapsible":false,"link":true},"shortTitle":"sse-kafka","category":["Binding"],"tag":["sse-kafka","proxy"],"description":"sse-kafka Binding Defines a binding with sse-kafka support, with proxy behavior. proxy The proxy kind sse-kafka binding adapts sse data streams into kafka data streams, so that ...","gitInclude":[".partials/proxy.yaml"],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/bindings/sse-kafka/"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"sse-kafka Binding"}],["meta",{"property":"og:description","content":"sse-kafka Binding Defines a binding with sse-kafka support, with proxy behavior. proxy The proxy kind sse-kafka binding adapts sse data streams into kafka data streams, so that ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"sse-kafka"}],["meta",{"property":"article:tag","content":"proxy"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"sse-kafka Binding\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"proxy","slug":"proxy","link":"#proxy","children":[]}],"readingTime":{"minutes":0.78,"words":234},"filePathRelative":"reference/config/bindings/sse-kafka/README.md","autoDesc":true}');export{m as comp,f as data};
