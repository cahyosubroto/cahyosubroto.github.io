import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as i,b as a,d as l,e as p,f as r,r as d,o as h}from"./app-DQ2AyMtK.js";const o={};function k(c,s){const e=d("RouteLink");return h(),t("div",null,[s[5]||(s[5]=i("h1",{id:"vaults",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#vaults"},[i("span",null,"Vaults")])],-1)),i("p",null,[s[1]||(s[1]=a("Each configured ")),l(e,{to:"/reference/config/overview.html#vaults"},{default:p(()=>s[0]||(s[0]=[i("code",null,"vault",-1)])),_:1}),s[2]||(s[2]=a(" represents a container for digital keys and certificates based on a specific implementation ")),s[3]||(s[3]=i("code",null,"type",-1)),s[4]||(s[4]=a("."))]),s[6]||(s[6]=r(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">---</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">name</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">zilla-namespace</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">vaults</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  my_servers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">filesystem</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      keys</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        store</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tls/localhost.p12</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">pkcs12</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        password</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.KEYSTORE_PASSWORD}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const g=n(o,[["render",k],["__file","vaults.html.vue"]]),y=JSON.parse('{"path":"/concepts/vaults.html","title":"Vaults","lang":"en-US","frontmatter":{"description":"Vaults Each configured represents a container for digital keys and certificates based on a specific implementation type.","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/concepts/vaults.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Vaults"}],["meta",{"property":"og:description","content":"Vaults Each configured represents a container for digital keys and certificates based on a specific implementation type."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vaults\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.12,"words":37},"filePathRelative":"concepts/vaults.md","autoDesc":true}');export{g as comp,y as data};
