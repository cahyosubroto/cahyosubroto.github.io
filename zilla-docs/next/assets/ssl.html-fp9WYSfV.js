import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,a as n,b as i,d as e,e as l,f as t,r,o as k}from"./app-DQ2AyMtK.js";const d={};function o(g,s){const a=r("RouteLink");return k(),h("div",null,[s[27]||(s[27]=n("h1",{id:"server-encryption-tls-ssl",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#server-encryption-tls-ssl"},[n("span",null,"Server Encryption, TLS & SSL")])],-1)),n("p",null,[s[1]||(s[1]=i("Vaults can be used by specific protocol bindings, such as ")),e(a,{to:"/reference/config/bindings/tls/"},{default:l(()=>s[0]||(s[0]=[i("tls")])),_:1}),s[2]||(s[2]=i(", to negotiate shared encryption keys. It is easy to add the necessary routing logic and encryption keys."))]),n("p",null,[s[5]||(s[5]=i("Using a ")),e(a,{to:"/reference/config/vaults/filesystem.html"},{default:l(()=>s[3]||(s[3]=[i("filesystem")])),_:1}),s[6]||(s[6]=i(" vault, you can see how a pkcs12 certificate on the host is configured to be stored securely by the Zilla runtime. This keystore can then be used by the ")),e(a,{to:"/reference/config/bindings/tls/"},{default:l(()=>s[4]||(s[4]=[i("tls")])),_:1}),s[7]||(s[7]=i(" binding to decrypt incoming traffic."))]),s[28]||(s[28]=t(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">vaults</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  my_servers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">filesystem</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      keys</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        store</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my_servers.p12</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">pkcs12</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        password</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${{env.KEYSTORE_PASSWORD}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),n("p",null,[s[13]||(s[13]=i("The ")),e(a,{to:"/reference/config/bindings/tcp/"},{default:l(()=>s[8]||(s[8]=[i("tcp")])),_:1}),s[14]||(s[14]=i(" binding can be configured for both encrypted and unencrypted traffic on separate ports. Take the SSL example with ports ")),s[15]||(s[15]=n("code",null,"80",-1)),s[16]||(s[16]=i(" and ")),s[17]||(s[17]=n("code",null,"443",-1)),s[18]||(s[18]=i(". The ")),e(a,{to:"/reference/config/bindings/tls/"},{default:l(()=>s[9]||(s[9]=[i("tls")])),_:1}),s[19]||(s[19]=i(" binding will use the ")),s[20]||(s[20]=n("code",null,"keys",-1)),s[21]||(s[21]=i(" as the certificate aliases and the Server Name Indication (")),s[22]||(s[22]=n("code",null,"sni",-1)),s[23]||(s[23]=i("/) as the SSL server names. These will likely be the same. Since this example is over ")),e(a,{to:"/reference/config/bindings/http/"},{default:l(()=>s[10]||(s[10]=[i("http")])),_:1}),s[24]||(s[24]=i(" the Application-Layer Protocol Negotiation (ALPN/) will need to handle both HTTP/1.1 and HTTP/2, but the ")),e(a,{to:"/reference/config/bindings/tls/"},{default:l(()=>s[11]||(s[11]=[i("tls")])),_:1}),s[25]||(s[25]=i(" binding can be configured for any of the ")),e(a,{to:"/reference/config/bindings/tls/server.html#options-alpn"},{default:l(()=>s[12]||(s[12]=[i("alpn")])),_:1}),s[26]||(s[26]=i(" protocols supported by Zilla."))]),s[29]||(s[29]=t(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">bindings</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  tcp_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      host</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      port</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">80</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">443</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">            - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">port</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">80</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http_server</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">            - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">port</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">443</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tls_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  tls_server</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tls</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">server</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    vault</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my_servers</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      keys</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my_server.com</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      sni</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">my_server.com</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      alpn</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http/1.1</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">h2</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http_server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const v=p(d,[["render",o],["__file","ssl.html.vue"]]),u=JSON.parse('{"path":"/concepts/ssl.html","title":"Server Encryption, TLS & SSL","lang":"en-US","frontmatter":{"description":"Server Encryption, TLS & SSL Vaults can be used by specific protocol bindings, such as , to negotiate shared encryption keys. It is easy to add the necessary routing logic and e...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/concepts/ssl.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Server Encryption, TLS & SSL"}],["meta",{"property":"og:description","content":"Server Encryption, TLS & SSL Vaults can be used by specific protocol bindings, such as , to negotiate shared encryption keys. It is easy to add the necessary routing logic and e..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Server Encryption, TLS & SSL\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.76,"words":227},"filePathRelative":"concepts/ssl.md","autoDesc":true}');export{v as comp,u as data};
