import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,f as i,a,b as s,d as n,e as l,g as o,r as h,o as p}from"./app-DQ2AyMtK.js";const c={};function k(u,e){const t=h("RouteLink");return p(),r("div",null,[e[17]||(e[17]=i(`<h1 id="http-client" tabindex="-1"><a class="header-anchor" href="#http-client"><span>http client</span></a></h1><p>The http client binding receives inbound application streams and encodes each request as a network stream via <code>HTTP/1.1</code> protocol. Note that the same network stream can be reused to encode multiple <code>HTTP/1.1</code> requests.</p><p>Conditional routes based on <code>http</code> request headers are used to route these network streams to an <code>exit</code> binding.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">http_client</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">client</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    versions</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">h2</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">tcp_client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-required" tabindex="-1"><a class="header-anchor" href="#configuration-required"><span>Configuration (* required)</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The <code>client</code> specific options.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  overrides</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    custom-text</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">custom-value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="options-requests" tabindex="-1"><a class="header-anchor" href="#options-requests"><span>options.requests</span></a></h4><blockquote><p><code>array</code> of <code>object</code></p></blockquote><p>Options to configure typed validations for request fields.</p><h4 id="requests-content" tabindex="-1"><a class="header-anchor" href="#requests-content"><span>requests[].content</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ], <code>object</code></p></blockquote><p>Enforce validation for the request content.</p><h4 id="content-model" tabindex="-1"><a class="header-anchor" href="#content-model"><span>content.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ]</p></blockquote>`,17)),a("p",null,[e[1]||(e[1]=s("A schema or type to validate the request content. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>e[0]||(e[0]=[s("model")])),_:1}),e[2]||(e[2]=s(" docs for type specific implementation."))]),e[18]||(e[18]=i('<h4 id="requests-content-type" tabindex="-1"><a class="header-anchor" href="#requests-content-type"><span>requests[].content-type</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>Content type of the HTTP request.</p><h4 id="requests-headers" tabindex="-1"><a class="header-anchor" href="#requests-headers"><span>requests[].headers</span></a></h4><blockquote><p><code>object</code> as map of named <code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ], <code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Enforce validation for request headers.</p><h4 id="requests-method" tabindex="-1"><a class="header-anchor" href="#requests-method"><span>requests[].method</span></a></h4><blockquote><p><code>enum</code> [ <code>GET</code>, <code>PUT</code>, <code>POST</code>, <code>DELETE</code>, <code>OPTIONS</code>, <code>HEAD</code>, <code>PATCH</code>, <code>TRACE</code> ]</p></blockquote><p>HTTP request method.</p><h4 id="requests-params" tabindex="-1"><a class="header-anchor" href="#requests-params"><span>requests[].params</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>Query parameters of the HTTP request.</p><h4 id="params-path" tabindex="-1"><a class="header-anchor" href="#params-path"><span>params.path</span></a></h4><blockquote><p><code>object</code> as map of named <code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ], <code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Enforce validation for path</p><h4 id="path-model" tabindex="-1"><a class="header-anchor" href="#path-model"><span>path.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ]</p></blockquote>',17)),a("p",null,[e[4]||(e[4]=s("A schema or type to validate the path content. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>e[3]||(e[3]=[s("model")])),_:1}),e[5]||(e[5]=s(" docs for type specific implementation."))]),e[19]||(e[19]=i('<h4 id="params-query" tabindex="-1"><a class="header-anchor" href="#params-query"><span>params.query</span></a></h4><blockquote><p><code>object</code> as map of named <code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ], <code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Enforce validation for query</p><h4 id="query-model" tabindex="-1"><a class="header-anchor" href="#query-model"><span>query.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ]</p></blockquote>',5)),a("p",null,[e[7]||(e[7]=s("A schema or type to validate the query content. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>e[6]||(e[6]=[s("model")])),_:1}),e[8]||(e[8]=s(" docs for type specific implementation."))]),e[20]||(e[20]=i('<h4 id="requests-path" tabindex="-1"><a class="header-anchor" href="#requests-path"><span>requests[].path</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>URL path of the HTTP request.</p><h4 id="requests-responses" tabindex="-1"><a class="header-anchor" href="#requests-responses"><span>requests[].responses</span></a></h4><blockquote><p><code>array</code> of <code>object</code></p></blockquote><p>Options to configure typed validations for response fields.</p><h4 id="responses-content" tabindex="-1"><a class="header-anchor" href="#responses-content"><span>responses[].content</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ], <code>object</code></p></blockquote><p>Enforce validation for the response content.</p>',9)),o(" markdownlint-disable MD024 "),e[21]||(e[21]=i('<h4 id="content-model-1" tabindex="-1"><a class="header-anchor" href="#content-model-1"><span>content.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ]</p></blockquote>',2)),a("p",null,[e[10]||(e[10]=s("A schema or type to validate the response content. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>e[9]||(e[9]=[s("model")])),_:1}),e[11]||(e[11]=s(" docs for type specific implementation."))]),o(" markdownlint-enable MD024 "),e[22]||(e[22]=i(`<h4 id="responses-content-type" tabindex="-1"><a class="header-anchor" href="#responses-content-type"><span>responses[].content-type</span></a></h4><blockquote><p><code>array</code> of <code>string</code></p></blockquote><p>Content type of the HTTP response.</p><h4 id="responses-headers" tabindex="-1"><a class="header-anchor" href="#responses-headers"><span>responses[].headers</span></a></h4><blockquote><p><code>object</code> as map of named <code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ], <code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Enforce validation for response headers.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  my-header</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    model</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">string</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    maxLength</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="headers-model" tabindex="-1"><a class="header-anchor" href="#headers-model"><span>headers.model*</span></a></h4><blockquote><p><code>enum</code> [ <code>double</code>, <code>float</code>, <code>int32</code>, <code>int64</code>, <code>json</code>, <code>string</code> ]</p></blockquote>`,9)),a("p",null,[e[13]||(e[13]=s("A schema or type to validate the headers content. Refer to the individual ")),n(t,{to:"/reference/config/models/"},{default:l(()=>e[12]||(e[12]=[s("model")])),_:1}),e[14]||(e[14]=s(" docs for type specific implementation."))]),e[23]||(e[23]=i(`<h4 id="responses-status" tabindex="-1"><a class="header-anchor" href="#responses-status"><span>responses[].status</span></a></h4><blockquote><p><code>integer</code>, <code>array</code> of <code>integer</code></p></blockquote><p>HTTP status code or codes for the response</p><h4 id="options-versions" tabindex="-1"><a class="header-anchor" href="#options-versions"><span>options.versions</span></a></h4><blockquote><p><code>array</code> of <code>enum</code> [ <code>http/1.1</code>, <code>h2</code> ] | Default: <code>http/1.1,h2</code></p></blockquote><p>Supported protocol versions.</p><h4 id="options-overrides" tabindex="-1"><a class="header-anchor" href="#options-overrides"><span>options.overrides</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Request header overrides.</p><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes"><span>routes*</span></a></h3><blockquote><p><code>array</code> of <code>object</code></p></blockquote><p>Conditional <code>http</code> specific routes.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">          &quot;:scheme&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">https</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">          &quot;:authority&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">example.com:443</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">echo_server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="routes-guarded" tabindex="-1"><a class="header-anchor" href="#routes-guarded"><span>routes[].guarded</span></a></h4><blockquote><p><code>object</code> as map of named <code>array</code> of <code>string</code></p></blockquote><p>List of roles required by each named guard to authorize this route.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">guarded</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      my_guard</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">read:items</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="routes-when" tabindex="-1"><a class="header-anchor" href="#routes-when"><span>routes[].when</span></a></h4><blockquote><p><code>array</code> of <code>object</code></p></blockquote>`,19)),a("p",null,[e[16]||(e[16]=s("List of conditions (any match) to match this route. Read more: ")),n(t,{to:"/concepts/bindings.html#when-a-route-matches"},{default:l(()=>e[15]||(e[15]=[s("When a route matches")])),_:1})]),e[24]||(e[24]=i(`<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">          &quot;:scheme&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">https</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">          &quot;:authority&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">example.com:443</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="when-headers" tabindex="-1"><a class="header-anchor" href="#when-headers"><span>when[].headers</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>Header name value pairs (all match).</p><h4 id="routes-with" tabindex="-1"><a class="header-anchor" href="#routes-with"><span>routes[].with</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>HTTP parameters for matched route when <code>http</code> streams.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      headers</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        overrides</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">          &quot;:scheme&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">https</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">          &quot;:authority&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">example.com:443</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="with-headers" tabindex="-1"><a class="header-anchor" href="#with-headers"><span>with.headers</span></a></h4><blockquote><p><code>object</code></p></blockquote><p>Options for headers when adapting a route.</p><h4 id="headers-overrides" tabindex="-1"><a class="header-anchor" href="#headers-overrides"><span>headers.overrides</span></a></h4><blockquote><p><code>object</code> as map of named <code>string</code> properties</p></blockquote><p>HTTP header name value pairs overrides.</p><h4 id="routes-exit" tabindex="-1"><a class="header-anchor" href="#routes-exit"><span>routes[].exit</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Next binding when following this route.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">echo_server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exit" tabindex="-1"><a class="header-anchor" href="#exit"><span>exit</span></a></h3><blockquote><p><code>string</code></p></blockquote><p>Default exit binding when no conditional routes are viable.</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">echo_server</span></span></code></pre></div><h3 id="telemetry" tabindex="-1"><a class="header-anchor" href="#telemetry"><span>telemetry</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>Defines the desired telemetry for the binding.</p><h4 id="telemetry-metrics" tabindex="-1"><a class="header-anchor" href="#telemetry-metrics"><span>telemetry.metrics</span></a></h4><blockquote><p><code>array</code></p></blockquote><p>Telemetry metrics to track</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">telemetry</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  metrics</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">stream.*</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http.*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29))])}const b=d(c,[["render",k],["__file","client.html.vue"]]),y=JSON.parse('{"path":"/reference/config/bindings/http/client.html","title":"http client","lang":"en-US","frontmatter":{"shortTitle":"client","description":"http client The http client binding receives inbound application streams and encodes each request as a network stream via HTTP/1.1 protocol. Note that the same network stream ca...","gitInclude":[".partials/client.yaml",".partials/options.md",".partials/routes.md","../.partials/exit.md","../.partials/telemetry-http.md"],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/bindings/http/client.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"http client"}],["meta",{"property":"og:description","content":"http client The http client binding receives inbound application streams and encodes each request as a network stream via HTTP/1.1 protocol. Note that the same network stream ca..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"http client\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Configuration (* required)","slug":"configuration-required","link":"#configuration-required","children":[{"level":3,"title":"options","slug":"options","link":"#options","children":[{"level":4,"title":"options.requests","slug":"options-requests","link":"#options-requests","children":[]},{"level":4,"title":"requests[].content","slug":"requests-content","link":"#requests-content","children":[]},{"level":4,"title":"content.model*","slug":"content-model","link":"#content-model","children":[]},{"level":4,"title":"requests[].content-type","slug":"requests-content-type","link":"#requests-content-type","children":[]},{"level":4,"title":"requests[].headers","slug":"requests-headers","link":"#requests-headers","children":[]},{"level":4,"title":"requests[].method","slug":"requests-method","link":"#requests-method","children":[]},{"level":4,"title":"requests[].params","slug":"requests-params","link":"#requests-params","children":[]},{"level":4,"title":"params.path","slug":"params-path","link":"#params-path","children":[]},{"level":4,"title":"path.model*","slug":"path-model","link":"#path-model","children":[]},{"level":4,"title":"params.query","slug":"params-query","link":"#params-query","children":[]},{"level":4,"title":"query.model*","slug":"query-model","link":"#query-model","children":[]},{"level":4,"title":"requests[].path","slug":"requests-path","link":"#requests-path","children":[]},{"level":4,"title":"requests[].responses","slug":"requests-responses","link":"#requests-responses","children":[]},{"level":4,"title":"responses[].content","slug":"responses-content","link":"#responses-content","children":[]},{"level":4,"title":"content.model*","slug":"content-model-1","link":"#content-model-1","children":[]},{"level":4,"title":"responses[].content-type","slug":"responses-content-type","link":"#responses-content-type","children":[]},{"level":4,"title":"responses[].headers","slug":"responses-headers","link":"#responses-headers","children":[]},{"level":4,"title":"headers.model*","slug":"headers-model","link":"#headers-model","children":[]},{"level":4,"title":"responses[].status","slug":"responses-status","link":"#responses-status","children":[]},{"level":4,"title":"options.versions","slug":"options-versions","link":"#options-versions","children":[]},{"level":4,"title":"options.overrides","slug":"options-overrides","link":"#options-overrides","children":[]}]},{"level":3,"title":"routes*","slug":"routes","link":"#routes","children":[{"level":4,"title":"routes[].guarded","slug":"routes-guarded","link":"#routes-guarded","children":[]},{"level":4,"title":"routes[].when","slug":"routes-when","link":"#routes-when","children":[]},{"level":4,"title":"when[].headers","slug":"when-headers","link":"#when-headers","children":[]},{"level":4,"title":"routes[].with","slug":"routes-with","link":"#routes-with","children":[]},{"level":4,"title":"with.headers","slug":"with-headers","link":"#with-headers","children":[]},{"level":4,"title":"headers.overrides","slug":"headers-overrides","link":"#headers-overrides","children":[]},{"level":4,"title":"routes[].exit","slug":"routes-exit","link":"#routes-exit","children":[]}]},{"level":3,"title":"exit","slug":"exit","link":"#exit","children":[]},{"level":3,"title":"telemetry","slug":"telemetry","link":"#telemetry","children":[{"level":4,"title":"telemetry.metrics","slug":"telemetry-metrics","link":"#telemetry-metrics","children":[]}]}]}],"readingTime":{"minutes":0.28,"words":83},"filePathRelative":"reference/config/bindings/http/client.md","autoDesc":true}');export{b as comp,y as data};
