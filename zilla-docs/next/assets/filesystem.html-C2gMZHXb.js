import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as t,o as a}from"./app-BNYstFbe.js";const l={};function n(o,e){return a(),i("div",null,e[0]||(e[0]=[t(`<h1 id="filesystem-catalog" tabindex="-1"><a class="header-anchor" href="#filesystem-catalog"><span>filesystem Catalog</span></a></h1><p>Defines a catalog with schemas, AsyncAPI/OpenAPI definitions or proto files pulled from the filesystem relative <code>zilla.yaml</code> to enforce validation, create APIs or gRPC services.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">catalogs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  my_catalog</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">filesystem</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">    options</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      subjects</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        my_local_file</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">          path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">path/to/local_file.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-required" tabindex="-1"><a class="header-anchor" href="#configuration-required"><span>Configuration (* required)</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><blockquote><p><code>object</code></p></blockquote><p>The <code>filesystem</code> specific options.</p><h4 id="options-subjects" tabindex="-1"><a class="header-anchor" href="#options-subjects"><span>options.subjects</span></a></h4><blockquote><p><code>object</code> as map of named <code>object</code> properties</p></blockquote><p>Unique identifier for artifact categorization in the catalog.</p><h4 id="subjects-path" tabindex="-1"><a class="header-anchor" href="#subjects-path"><span>subjects.path*</span></a></h4><blockquote><p><code>string</code></p></blockquote><p>Path to access artifact from the filesystem. The paths are relative to <code>zilla.yaml</code>.</p>`,13)]))}const p=s(l,[["render",n],["__file","filesystem.html.vue"]]),h=JSON.parse('{"path":"/reference/config/catalogs/filesystem.html","title":"filesystem Catalog","lang":"en-US","frontmatter":{"redirectFrom":"/reference/config/catalogs/catalog-filesystem.html","shortTitle":"filesystem","category":["Catalog"],"tags":["filesystem"],"description":"filesystem Catalog Defines a catalog with schemas, AsyncAPI/OpenAPI definitions or proto files pulled from the filesystem relative zilla.yaml to enforce validation, create APIs ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/catalogs/filesystem.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"filesystem Catalog"}],["meta",{"property":"og:description","content":"filesystem Catalog Defines a catalog with schemas, AsyncAPI/OpenAPI definitions or proto files pulled from the filesystem relative zilla.yaml to enforce validation, create APIs ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"filesystem"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"filesystem Catalog\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Configuration (* required)","slug":"configuration-required","link":"#configuration-required","children":[{"level":3,"title":"options","slug":"options","link":"#options","children":[{"level":4,"title":"options.subjects","slug":"options-subjects","link":"#options-subjects","children":[]},{"level":4,"title":"subjects.path*","slug":"subjects-path","link":"#subjects-path","children":[]}]}]}],"readingTime":{"minutes":0.29,"words":86},"filePathRelative":"reference/config/catalogs/filesystem.md","autoDesc":true}');export{p as comp,h as data};
