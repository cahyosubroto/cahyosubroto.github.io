import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,b as e,d as l,e as p,f as r,r as h,o as d}from"./app-DQ2AyMtK.js";const o={};function k(y,s){const t=h("RouteLink");return d(),a("div",null,[s[1]||(s[1]=i("h1",{id:"http-filesystem-binding",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#http-filesystem-binding"},[i("span",null,"http-filesystem Binding")])],-1)),s[2]||(s[2]=i("p",null,[e("Defines a binding with "),i("code",null,"http-filesystem"),e(" support, with "),i("code",null,"proxy"),e(" behavior.")],-1)),s[3]||(s[3]=i("h2",{id:"proxy",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#proxy"},[i("span",null,"proxy")])],-1)),i("blockquote",null,[i("p",null,[l(t,{to:"/reference/config/bindings/http-filesystem/proxy.html"},{default:p(()=>s[0]||(s[0]=[e("Full config")])),_:1})])]),s[4]||(s[4]=r(`<p>The <code>proxy</code> kind <code>http-filesystem</code> binding adapts <code>http</code> data streams into <code>filesystem</code> data streams by mapping the path from an inbound <code>http</code> <code>GET</code> request into a filesystem relative path.</p><p>Behaves as a web server when combined with <code>tcp,</code> <code>tls</code>, <code>http</code> and <code>filesystem</code> bindings.</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes light-plus dark-plus vp-code"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">http_filesystem_proxy</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  type</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">http-filesystem</span></span>
<span class="line highlighted"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  kind</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">proxy</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">  routes</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">when</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        - </span><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">/{path}</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      exit</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">filesystem_server</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">      with</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#569CD6;">        path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#CE9178;">\${params.path}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3))])}const g=n(o,[["render",k],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/reference/config/bindings/http-filesystem/","title":"http-filesystem Binding","lang":"en-US","frontmatter":{"redirectFrom":"/reference/config/bindings/binding-http-filesystem.html","dir":{"collapsible":false,"link":true},"shortTitle":"http-filesystem","category":["Binding"],"tag":["http-filesystem","proxy"],"description":"http-filesystem Binding Defines a binding with http-filesystem support, with proxy behavior. proxy The proxy kind http-filesystem binding adapts http data streams into filesyste...","gitInclude":[".partials/proxy.yaml"],"head":[["meta",{"property":"og:url","content":"https://docs.aklivity.io/zilla-docs/next/reference/config/bindings/http-filesystem/"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"http-filesystem Binding"}],["meta",{"property":"og:description","content":"http-filesystem Binding Defines a binding with http-filesystem support, with proxy behavior. proxy The proxy kind http-filesystem binding adapts http data streams into filesyste..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"http-filesystem"}],["meta",{"property":"article:tag","content":"proxy"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"http-filesystem Binding\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"proxy","slug":"proxy","link":"#proxy","children":[]}],"readingTime":{"minutes":0.27,"words":82},"filePathRelative":"reference/config/bindings/http-filesystem/README.md","autoDesc":true}');export{g as comp,f as data};
